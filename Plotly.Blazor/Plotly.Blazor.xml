<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Plotly.Blazor</name>
    </assembly>
    <members>
        <member name="T:Plotly.Blazor.Animation">
            <summary>
                The Animation class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Animation.Mode">
            <summary>
                Describes how a new animate call interacts with currently-running animations.
                If <c>immediate</c>, current animations are interrupted and the new animation
                is started. If <c>next</c>, the current frame is allowed to complete, after
                which the new animation is started. If <c>afterall</c> all existing frames
                are animated to completion before the new animation is started.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Animation.Direction">
            <summary>
                The direction in which to play the frames triggered by the animation call
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Animation.FromCurrent">
            <summary>
                Play frames starting at the current frame instead of the beginning.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Animation.Frame">
            <summary>
                Gets or sets the Frame.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Animation.Transition">
            <summary>
                Gets or sets the Transition.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.AnimationLib.DirectionEnum">
            <summary>
                The direction in which to play the frames triggered by the animation call
            </summary>
        </member>
        <member name="T:Plotly.Blazor.AnimationLib.Frame">
            <summary>
                The Frame class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.AnimationLib.Frame.Duration">
            <summary>
                The duration in milliseconds of each frame. If greater than the frame duration,
                it will be limited to the frame duration.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.AnimationLib.Frame.Redraw">
            <summary>
                Redraw the plot at completion of the transition. This is desirable for transitions
                that include properties that cannot be transitioned, but may significantly
                slow down updates that do not require a full redraw of the plot
            </summary>
        </member>
        <member name="T:Plotly.Blazor.AnimationLib.ModeEnum">
            <summary>
                Describes how a new animate call interacts with currently-running animations.
                If <c>immediate</c>, current animations are interrupted and the new animation
                is started. If <c>next</c>, the current frame is allowed to complete, after
                which the new animation is started. If <c>afterall</c> all existing frames
                are animated to completion before the new animation is started.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.AnimationLib.Transition">
            <summary>
                The Transition class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.AnimationLib.Transition.Duration">
            <summary>
                The duration of the transition, in milliseconds. If equal to zero, updates
                are synchronous.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.AnimationLib.Transition.Easing">
            <summary>
                The easing function used for the transition
            </summary>
        </member>
        <member name="P:Plotly.Blazor.AnimationLib.Transition.Ordering">
            <summary>
                Determines whether the figure&#39;s layout or traces smoothly transitions
                during updates that make both traces and layout change.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.AnimationLib.TransitionLib.EasingEnum">
            <summary>
                The easing function used for the transition
            </summary>
        </member>
        <member name="T:Plotly.Blazor.AnimationLib.TransitionLib.OrderingEnum">
            <summary>
                Determines whether the figure&#39;s layout or traces smoothly transitions
                during updates that make both traces and layout change.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Config">
            <summary>
                The Config class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.StaticPlot">
            <summary>
                Determines whether the graphs are interactive or not. If <c>false</c>, no
                interactivity, for export or image generation.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.PlotlyServerUrl">
            <summary>
                When set it determines base URL for the &#39;Edit in Chart Studio&#39; <c>showEditInChartStudio</c>/<c>showSendToCloud</c>
                mode bar button and the showLink/sendData on-graph link. To enable sending
                your data to Chart Studio Cloud, you need to set both <c>plotlyServerURL</c>
                to <c>https://chart-studio.plotly.com</c> and also set <c>showSendToCloud</c>
                to true.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.Editable">
            <summary>
                Determines whether the graph is editable or not. Sets all pieces of <c>edits</c>
                unless a separate <c>edits</c> config item overrides individual parts.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.Edits">
            <summary>
                Gets or sets the Edits.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.AutoSizable">
            <summary>
                Determines whether the graphs are plotted with respect to layout.autosize:true
                and infer its container size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.Responsive">
            <summary>
                Determines whether to change the layout size when window is resized. In
                v2, this option will be removed and will always be true.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.FillFrame">
            <summary>
                When <c>layout.autosize</c> is turned on, determines whether the graph fills
                the container (the default) or the screen (if set to <c>true</c>).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.FrameMargins">
            <summary>
                When <c>layout.autosize</c> is turned on, set the frame margins in fraction
                of the graph size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.ScrollZoom">
            <summary>
                Determines whether mouse wheel or two-finger scroll zooms is enable. Turned
                on by default for gl3d, geo and mapbox subplots (as these subplot types
                do not have zoombox via pan), but turned off by default for cartesian subplots.
                Set <c>scrollZoom</c> to <c>false</c> to disable scrolling for all subplots.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.DoubleClick">
            <summary>
                Sets the double click interaction mode. Has an effect only in cartesian
                plots. If <c>false</c>, double click is disable. If <c>reset</c>, double
                click resets the axis ranges to their initial values. If <c>autosize</c>,
                double click set the axis ranges to their autorange values. If <c>reset+autosize</c>,
                the odd double clicks resets the axis ranges to their initial values and
                even double clicks set the axis ranges to their autorange values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.DoubleClickDelay">
            <summary>
                Sets the delay for registering a double-click in ms. This is the time interval
                (in ms) between first mousedown and 2nd mouseup to constitute a double-click.
                This setting propagates to all on-subplot double clicks (except for geo
                and mapbox) and on-legend double clicks.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.ShowAxisDragHandles">
            <summary>
                Set to <c>false</c> to omit cartesian axis pan/zoom drag handles.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.ShowAxisRangeEntryBoxes">
            <summary>
                Set to <c>false</c> to omit direct range entry at the pan/zoom drag points,
                note that <c>showAxisDragHandles</c> must be enabled to have an effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.ShowTips">
            <summary>
                Determines whether or not tips are shown while interacting with the resulting
                graphs.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.ShowLink">
            <summary>
                Determines whether a link to Chart Studio Cloud is displayed at the bottom
                right corner of resulting graphs. Use with <c>sendData</c> and <c>linkText</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.LinkText">
            <summary>
                Sets the text appearing in the <c>showLink</c> link.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.SendData">
            <summary>
                If <c>showLink</c> is true, does it contain data just link to a Chart Studio
                Cloud file?
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.ShowSources">
            <summary>
                Adds a source-displaying function to show sources on the resulting graphs.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.DisplayModeBar">
            <summary>
                Determines the mode bar display mode. If <c>true</c>, the mode bar is always
                visible. If <c>false</c>, the mode bar is always hidden. If <c>hover</c>,
                the mode bar is visible while the mouse cursor is on the graph container.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.ShowSendToCloud">
            <summary>
                Should we include a ModeBar button, labeled &quot;Edit in Chart Studio&quot;,
                that sends this chart to chart-studio.plotly.com (formerly plot.ly) or another
                plotly server as specified by <c>plotlyServerURL</c> for editing, export,
                etc? Prior to version 1.43.0 this button was included by default, now it
                is opt-in using this flag. Note that this button can (depending on <c>plotlyServerURL</c>
                being set) send your data to an external server. However that server does
                not persist your data until you arrive at the Chart Studio and explicitly
                click <c>Save</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.ShowEditInChartStudio">
            <summary>
                Same as <c>showSendToCloud</c>, but use a pencil icon instead of a floppy-disk.
                Note that if both <c>showSendToCloud</c> and <c>showEditInChartStudio</c>
                are turned, only <c>showEditInChartStudio</c> will be honored.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.ModeBarButtonsToRemove">
            <summary>
                Remove mode bar buttons by name. See ./components/modebar/buttons.js for
                the list of names.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.ModeBarButtonsToAdd">
            <summary>
                Add mode bar button using config objects See ./components/modebar/buttons.js
                for list of arguments.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.ModeBarButtons">
            <summary>
                Define fully custom mode bar buttons as nested array, where the outer arrays
                represents button groups, and the inner arrays have buttons config objects
                or names of default buttons See ./components/modebar/buttons.js for more
                info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.ToImageButtonOptions">
            <summary>
                Statically override options for toImage modebar button allowed keys are
                format, filename, width, height, scale see ../components/modebar/buttons.js
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.DisplayLogo">
            <summary>
                Determines whether or not the plotly logo is displayed on the end of the
                mode bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.Watermark">
            <summary>
                watermark the images with the company&#39;s logo
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.PlotGlPixelRatio">
            <summary>
                Set the pixel ratio during WebGL image export. This config option was formerly
                named <c>plot3dPixelRatio</c> which is now deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.SetBackground">
            <summary>
                Set function to add the background color (i.e. <c>layout.paper_color</c>)
                to a different container. This function take the graph div as first argument
                and the current background color as second argument. Alternatively, set
                to string <c>opaque</c> to ensure there is white behind it.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.TopoJsonUrl">
            <summary>
                Set the URL to topojson used in geo charts. By default, the topojson files
                are fetched from cdn.plot.ly. For example, set this option to: &lt;path-to-plotly.js&gt;/dist/topojson/
                to render geographical feature using the topojson files that ship with the
                plotly.js module.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.MapboxAccessToken">
            <summary>
                Mapbox access token (required to plot mapbox trace types) If using an Mapbox
                Atlas server, set this option to &#39;&#39; so that plotly.js won&#39;t
                attempt to authenticate to the public Mapbox server.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.Logging">
            <summary>
                Turn all console logging on or off (errors will be thrown) This should ONLY
                be set via Plotly.setPlotConfig Available levels: 0: no logs 1: warnings
                and errors, but not informational messages 2: verbose logs
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.NotifyOnLogging">
            <summary>
                Set on-graph logging (notifier) level This should ONLY be set via Plotly.setPlotConfig
                Available levels: 0: no on-graph logs 1: warnings and errors, but not informational
                messages 2: verbose logs
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.QueueLength">
            <summary>
                Sets the length of the undo/redo queue.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.GlobalTransforms">
            <summary>
                Set global transform to be applied to all traces with no specification needed
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.Locale">
            <summary>
                Which localization should we use? Should be a string like <c>en</c> or <c>en-US</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Config.Locales">
            <summary>
                Localization definitions Locales can be provided either here (specific to
                one chart) or globally by registering them as modules. Should be an object
                of objects {locale: {dictionary: {...}, format: {...}}} {   da: {      
                dictionary: {&#39;Reset axes&#39;: &#39;Nulstil aksler&#39;, ...},     
                 format: {months: [...], shortMonths: [...]}   },   ... } All parts are
                optional. When looking for translation or format fields, we look first for
                an exact match in a config locale, then in a registered module. If those
                fail, we strip off any regionalization (<c>en-US</c> -&gt; <c>en</c>) and
                try each (config, registry) again. The final fallback for translation is
                untranslated (which is US English) and for formats is the base English (the
                only consequence being the last fallback date format %x is DD/MM/YYYY instead
                of MM/DD/YYYY). Currently <c>grouping</c> and <c>currency</c> are ignored
                for our automatic number formatting, but can be used in custom formats.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.ConfigLib.DisplayModeBarEnum">
            <summary>
                Determines the mode bar display mode. If <c>true</c>, the mode bar is always
                visible. If <c>false</c>, the mode bar is always hidden. If <c>hover</c>,
                the mode bar is visible while the mouse cursor is on the graph container.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.ConfigLib.DoubleClickEnum">
            <summary>
                Sets the double click interaction mode. Has an effect only in cartesian
                plots. If <c>false</c>, double click is disable. If <c>reset</c>, double
                click resets the axis ranges to their initial values. If <c>autosize</c>,
                double click set the axis ranges to their autorange values. If <c>reset+autosize</c>,
                the odd double clicks resets the axis ranges to their initial values and
                even double clicks set the axis ranges to their autorange values.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.ConfigLib.Edits">
            <summary>
                The Edits class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.ConfigLib.Edits.AnnotationPosition">
            <summary>
                Determines if the main anchor of the annotation is editable. The main anchor
                corresponds to the text (if no arrow) or the arrow (which drags the whole
                thing leaving the arrow length &amp; direction unchanged).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.ConfigLib.Edits.AnnotationTail">
            <summary>
                Has only an effect for annotations with arrows. Enables changing the length
                and direction of the arrow.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.ConfigLib.Edits.AnnotationText">
            <summary>
                Enables editing annotation text.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.ConfigLib.Edits.AxisTitleText">
            <summary>
                Enables editing axis title text.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.ConfigLib.Edits.ColorbarPosition">
            <summary>
                Enables moving colorbars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.ConfigLib.Edits.ColorbarTitleText">
            <summary>
                Enables editing colorbar title text.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.ConfigLib.Edits.LegendPosition">
            <summary>
                Enables moving the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.ConfigLib.Edits.LegendText">
            <summary>
                Enables editing the trace name fields from the legend
            </summary>
        </member>
        <member name="P:Plotly.Blazor.ConfigLib.Edits.ShapePosition">
            <summary>
                Enables moving shapes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.ConfigLib.Edits.TitleText">
            <summary>
                Enables editing the global layout title.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.ConfigLib.ScrollZoomFlag">
            <summary>
                Determines whether mouse wheel or two-finger scroll zooms is enable. Turned
                on by default for gl3d, geo and mapbox subplots (as these subplot types
                do not have zoombox via pan), but turned off by default for cartesian subplots.
                Set <c>scrollZoom</c> to <c>false</c> to disable scrolling for all subplots.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.EnumConverter">
            <summary>
                <see cref="T:System.Text.Json.Serialization.JsonConverterFactory" /> to convert enums to and from strings, respecting
                <see cref="T:System.Runtime.Serialization.EnumMemberAttribute" /> decorations. Supports nullable enums.
                This converter is based on Macross.Json.Extensions JsonStringEnumMemberConverter.cs	.
            </summary>
        </member>
        <member name="M:Plotly.Blazor.EnumConverter.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Plotly.Blazor.EnumConverter" /> class.
            </summary>
        </member>
        <member name="M:Plotly.Blazor.EnumConverter.#ctor(System.Text.Json.JsonNamingPolicy,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Plotly.Blazor.EnumConverter" /> class.
            </summary>
            <param name="namingPolicy">
                Optional naming policy for writing enum values.
            </param>
            <param name="allowIntegerValues">
                True to allow undefined enum values. When true, if an enum value isn't
                defined it will output as a number rather than a string.
            </param>
        </member>
        <member name="M:Plotly.Blazor.EnumConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Plotly.Blazor.EnumConverter.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Plotly.Blazor.Frames">
            <summary>
                The Frames class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Frames.Group">
            <summary>
                An identifier that specifies the group to which the frame belongs, used
                by animate to select a subset of frames.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Frames.Name">
            <summary>
                A label by which to identify the frame
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Frames.Traces">
            <summary>
                A list of trace indices that identify the respective traces in the data
                attribute
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Frames.BaseFrame">
            <summary>
                The name of the frame into which this frame&#39;s properties are merged
                before applying. This is used to unify properties and avoid needing to specify
                the same values for the same properties in multiple frames.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Frames.Data">
            <summary>
                A list of traces this frame modifies. The format is identical to the normal
                trace definition.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Frames.Layout">
            <summary>
                Layout properties which this frame modifies. The format is identical to
                the normal layout definition.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.ITrace">
            <summary>
                The trace interface.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.ITrace.Type">
            <summary>
                The type of the trace.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.ITransform">
            <summary>
                The transform interface.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.ITransform.Type">
            <summary>
                The type of the transform.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Layout">
            <summary>
                The Layout class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.BarMode">
            <summary>
                Determines how bars at the same location coordinate are displayed on the
                graph. With <c>stack</c>, the bars are stacked on top of one another With
                <c>relative</c>, the bars are stacked on top of one another, with negative
                values below the axis, positive values above With <c>group</c>, the bars
                are plotted next to one another centered around the shared location. With
                <c>overlay</c>, the bars are plotted over one another, you might need to
                an <c>opacity</c> to see multiple bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.BarNorm">
            <summary>
                Sets the normalization for bar traces on the graph. With <c>fraction</c>,
                the value of each bar is divided by the sum of all values at that location
                coordinate. <c>percent</c> is the same but multiplied by 100 to show percentages.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.BarGap">
            <summary>
                Sets the gap (in plot fraction) between bars of adjacent location coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.BarGroupGap">
            <summary>
                Sets the gap (in plot fraction) between bars of the same location coordinate.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.BoxMode">
            <summary>
                Determines how boxes at the same location coordinate are displayed on the
                graph. If <c>group</c>, the boxes are plotted next to one another centered
                around the shared location. If <c>overlay</c>, the boxes are plotted over
                one another, you might need to set <c>opacity</c> to see them multiple boxes.
                Has no effect on traces that have <c>width</c> set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.BoxGap">
            <summary>
                Sets the gap (in plot fraction) between boxes of adjacent location coordinates.
                Has no effect on traces that have <c>width</c> set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.BoxGroupGap">
            <summary>
                Sets the gap (in plot fraction) between boxes of the same location coordinate.
                Has no effect on traces that have <c>width</c> set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.ViolinMode">
            <summary>
                Determines how violins at the same location coordinate are displayed on
                the graph. If <c>group</c>, the violins are plotted next to one another
                centered around the shared location. If <c>overlay</c>, the violins are
                plotted over one another, you might need to set <c>opacity</c> to see them
                multiple violins. Has no effect on traces that have <c>width</c> set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.ViolinGap">
            <summary>
                Sets the gap (in plot fraction) between violins of adjacent location coordinates.
                Has no effect on traces that have <c>width</c> set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.ViolinGroupGap">
            <summary>
                Sets the gap (in plot fraction) between violins of the same location coordinate.
                Has no effect on traces that have <c>width</c> set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.FunnelMode">
            <summary>
                Determines how bars at the same location coordinate are displayed on the
                graph. With <c>stack</c>, the bars are stacked on top of one another With
                <c>group</c>, the bars are plotted next to one another centered around the
                shared location. With <c>overlay</c>, the bars are plotted over one another,
                you might need to an <c>opacity</c> to see multiple bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.FunnelGap">
            <summary>
                Sets the gap (in plot fraction) between bars of adjacent location coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.FunnelGroupGap">
            <summary>
                Sets the gap (in plot fraction) between bars of the same location coordinate.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.WaterfallMode">
            <summary>
                Determines how bars at the same location coordinate are displayed on the
                graph. With <c>group</c>, the bars are plotted next to one another centered
                around the shared location. With <c>overlay</c>, the bars are plotted over
                one another, you might need to an <c>opacity</c> to see multiple bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.WaterfallGap">
            <summary>
                Sets the gap (in plot fraction) between bars of adjacent location coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.WaterfallGroupGap">
            <summary>
                Sets the gap (in plot fraction) between bars of the same location coordinate.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.HiddenLabels">
            <summary>
                hiddenlabels is the funnelarea &amp; pie chart analog of visible:<c>legendonly</c>
                but it can contain many labels, and can simultaneously hide slices from
                several pies/funnelarea charts
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.PieColorway">
            <summary>
                Sets the default pie slice colors. Defaults to the main <c>colorway</c>
                used for trace colors. If you specify a new list here it can still be extended
                with lighter and darker colors, see <c>extendpiecolors</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.ExtendPieColors">
            <summary>
                If <c>true</c>, the pie slice colors (whether given by <c>piecolorway</c>
                or inherited from <c>colorway</c>) will be extended to three times its original
                length by first repeating every color 20% lighter then each color 20% darker.
                This is intended to reduce the likelihood of reusing the same color when
                you have many slices, but you can set <c>false</c> to disable. Colors provided
                in the trace, using <c>marker.colors</c>, are never extended.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.HiddenLabelsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hiddenlabels .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.SunburstColorway">
            <summary>
                Sets the default sunburst slice colors. Defaults to the main <c>colorway</c>
                used for trace colors. If you specify a new list here it can still be extended
                with lighter and darker colors, see <c>extendsunburstcolors</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.ExtendSunburstColors">
            <summary>
                If <c>true</c>, the sunburst slice colors (whether given by <c>sunburstcolorway</c>
                or inherited from <c>colorway</c>) will be extended to three times its original
                length by first repeating every color 20% lighter then each color 20% darker.
                This is intended to reduce the likelihood of reusing the same color when
                you have many slices, but you can set <c>false</c> to disable. Colors provided
                in the trace, using <c>marker.colors</c>, are never extended.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.TreeMapColorway">
            <summary>
                Sets the default treemap slice colors. Defaults to the main <c>colorway</c>
                used for trace colors. If you specify a new list here it can still be extended
                with lighter and darker colors, see <c>extendtreemapcolors</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.ExtendTreeMapColors">
            <summary>
                If <c>true</c>, the treemap slice colors (whether given by <c>treemapcolorway</c>
                or inherited from <c>colorway</c>) will be extended to three times its original
                length by first repeating every color 20% lighter then each color 20% darker.
                This is intended to reduce the likelihood of reusing the same color when
                you have many slices, but you can set <c>false</c> to disable. Colors provided
                in the trace, using <c>marker.colors</c>, are never extended.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.FunnelAreaColorway">
            <summary>
                Sets the default funnelarea slice colors. Defaults to the main <c>colorway</c>
                used for trace colors. If you specify a new list here it can still be extended
                with lighter and darker colors, see <c>extendfunnelareacolors</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.ExtendFunnelAreaColors">
            <summary>
                If <c>true</c>, the funnelarea slice colors (whether given by <c>funnelareacolorway</c>
                or inherited from <c>colorway</c>) will be extended to three times its original
                length by first repeating every color 20% lighter then each color 20% darker.
                This is intended to reduce the likelihood of reusing the same color when
                you have many slices, but you can set <c>false</c> to disable. Colors provided
                in the trace, using <c>marker.colors</c>, are never extended.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Font">
            <summary>
                Sets the global font. Note that fonts used in traces and other layout components
                inherit from the global font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.UniformText">
            <summary>
                Gets or sets the UniformText.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.AutoSize">
            <summary>
                Determines whether or not a layout width or height that has been left undefined
                by the user is initialized on each relayout. Note that, regardless of this
                attribute, an undefined layout width or height is always initialized on
                the first call to plot.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Width">
            <summary>
                Sets the plot&#39;s width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Height">
            <summary>
                Sets the plot&#39;s height (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Margin">
            <summary>
                Gets or sets the Margin.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.PaperBgColor">
            <summary>
                Sets the background color of the paper where the graph is drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.PlotBgColor">
            <summary>
                Sets the background color of the plotting area in-between x and y axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Separators">
            <summary>
                Sets the decimal and thousand separators. For example, &#39;. &#39; puts
                a <c>.</c> before decimals and a space between thousands. In English locales,
                dflt is <c>.,</c> but other locales may alter this default.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.HideSources">
            <summary>
                Determines whether or not a text link citing the data source is placed at
                the bottom-right cored of the figure. Has only an effect only on graphs
                that have been generated via forked graphs from the Chart Studio Cloud (at
                https://chart-studio.plotly.com or on-premise).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.ShowLegend">
            <summary>
                Determines whether or not a legend is drawn. Default is <c>true</c> if there
                is a trace to show and any of these: a) Two or more traces would by default
                be shown in the legend. b) One pie trace is shown in the legend. c) One
                trace is explicitly given with &#39;showlegend: true&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Colorway">
            <summary>
                Sets the default trace colors.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.DataRevision">
            <summary>
                If provided, a changed value tells <c>Plotly.react</c> that one or more
                data arrays has changed. This way you can modify arrays in-place rather
                than making a complete new copy for an incremental change. If NOT provided,
                <c>Plotly.react</c> assumes that data arrays are being treated as immutable,
                thus any data array with a different identity from its predecessor contains
                new data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.UiRevision">
            <summary>
                Used to allow user interactions with the plot to persist after <c>Plotly.react</c>
                calls that are unaware of these interactions. If <c>uirevision</c> is omitted,
                or if it is given and it changed from the previous <c>Plotly.react</c> call,
                the exact new figure is used. If <c>uirevision</c> is truthy and did NOT
                change, any attribute that has been affected by user interactions and did
                not receive a different value in the new figure will keep the interaction
                value. <c>layout.uirevision</c> attribute serves as the default for <c>uirevision</c>
                attributes in various sub-containers. For finer control you can set these
                sub-attributes directly. For example, if your app separately controls the
                data on the x and y axes you might set <c>xaxis.uirevision=<c>time</c></c>
                and <c>yaxis.uirevision=<c>cost</c></c>. Then if only the y data is changed,
                you can update <c>yaxis.uirevision=<c>quantity</c></c> and the y axis range
                will reset but the x axis range will retain any user-driven zoom.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.EditRevision">
            <summary>
                Controls persistence of user-driven changes in &#39;editable: true&#39;
                configuration, other than trace names and axis titles. Defaults to <c>layout.uirevision</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.SelectionRevision">
            <summary>
                Controls persistence of user-driven changes in selected points from all
                traces.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Template">
            <summary>
                Default attributes to be applied to the plot. Templates can be created from
                existing plots using <c>Plotly.makeTemplate</c>, or created manually. They
                should be objects with format: &#39;{layout: layoutTemplate, data: {[type]:
                [traceTemplate, ...]}, ...}&#39; <c>layoutTemplate</c> and <c>traceTemplate</c>
                are objects matching the attribute structure of <c>layout</c> and a data
                trace.  Trace templates are applied cyclically to traces of each type. Container
                arrays (eg <c>annotations</c>) have special handling: An object ending in
                <c>defaults</c> (eg <c>annotationdefaults</c>) is applied to each array
                item. But if an item has a <c>templateitemname</c> key we look in the template
                array for an item with matching <c>name</c> and apply that instead. If no
                matching <c>name</c> is found we mark the item invisible. Any named template
                item not referenced is appended to the end of the array, so you can use
                this for a watermark annotation or a logo image, for example. To omit one
                of these items on the plot, make an item with matching <c>templateitemname</c>
                and &#39;visible: false&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.ModeBar">
            <summary>
                Gets or sets the ModeBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.NewShape">
            <summary>
                Gets or sets the NewShape.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.ActiveShape">
            <summary>
                Gets or sets the ActiveShape.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Meta">
            <summary>
                Assigns extra meta information that can be used in various <c>text</c> attributes.
                Attributes such as the graph, axis and colorbar <c>title.text</c>, annotation
                <c>text</c> <c>trace.name</c> in legend items, <c>rangeselector</c>, <c>updatemenus</c>
                and <c>sliders</c> <c>label</c> text all support <c>meta</c>. One can access
                <c>meta</c> fields using template strings: <c>%{meta[i]}</c> where <c>i</c>
                is the index of the <c>meta</c> item in question. <c>meta</c> can also be
                an object for example &#39;{key: value}&#39; which can be accessed %{meta[key]}.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.MetaArray">
            <summary>
                Assigns extra meta information that can be used in various <c>text</c> attributes.
                Attributes such as the graph, axis and colorbar <c>title.text</c>, annotation
                <c>text</c> <c>trace.name</c> in legend items, <c>rangeselector</c>, <c>updatemenus</c>
                and <c>sliders</c> <c>label</c> text all support <c>meta</c>. One can access
                <c>meta</c> fields using template strings: <c>%{meta[i]}</c> where <c>i</c>
                is the index of the <c>meta</c> item in question. <c>meta</c> can also be
                an object for example &#39;{key: value}&#39; which can be accessed %{meta[key]}.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Transition">
            <summary>
                Sets transition options used during Plotly.react updates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.ClickMode">
            <summary>
                Determines the mode of single click interactions. <c>event</c> is the default
                value and emits the <c>plotly_click</c> event. In addition this mode emits
                the <c>plotly_selected</c> event in drag modes <c>lasso</c> and <c>select</c>,
                but with no event data attached (kept for compatibility reasons). The <c>select</c>
                flag enables selecting single data points via click. This mode also supports
                persistent selections, meaning that pressing Shift while clicking, adds
                to / subtracts from an existing selection. <c>select</c> with <c>hovermode</c>:
                <c>x</c> can be confusing, consider explicitly setting <c>hovermode</c>:
                <c>closest</c> when using this feature. Selection events are sent accordingly
                as long as <c>event</c> flag is set as well. When the <c>event</c> flag
                is missing, <c>plotly_click</c> and <c>plotly_selected</c> events are not
                fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.DragMode">
            <summary>
                Determines the mode of drag interactions. <c>select</c> and <c>lasso</c>
                apply only to scatter traces with markers or text. <c>orbit</c> and <c>turntable</c>
                apply only to 3D scenes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.HoverMode">
            <summary>
                Determines the mode of hover interactions. If <c>closest</c>, a single hoverlabel
                will appear for the <c>closest</c> point within the <c>hoverdistance</c>.
                If <c>x</c> (or <c>y</c>), multiple hoverlabels will appear for multiple
                points at the <c>closest</c> x- (or y-) coordinate within the <c>hoverdistance</c>,
                with the caveat that no more than one hoverlabel will appear per trace.
                If &#39;x unified&#39; (or &#39;y unified&#39;), a single hoverlabel will
                appear multiple points at the closest x- (or y-) coordinate within the <c>hoverdistance</c>
                with the caveat that no more than one hoverlabel will appear per trace.
                In this mode, spikelines are enabled by default perpendicular to the specified
                axis. If false, hover interactions are disabled. If <c>clickmode</c> includes
                the <c>select</c> flag, <c>hovermode</c> defaults to <c>closest</c>. If
                <c>clickmode</c> lacks the <c>select</c> flag, it defaults to <c>x</c> or
                <c>y</c> (depending on the trace&#39;s <c>orientation</c> value) for plots
                based on cartesian coordinates. For anything else the default value is <c>closest</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.HoverDistance">
            <summary>
                Sets the default distance (in pixels) to look for data to add hover labels
                (-1 means no cutoff, 0 means no looking for data). This is only a real distance
                for hovering on point-like objects, like scatter points. For area-like objects
                (bars, scatter fills, etc) hovering is on inside the area and off outside,
                but these objects will not supersede hover on point-like objects in case
                of conflict.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.SpikeDistance">
            <summary>
                Sets the default distance (in pixels) to look for data to draw spikelines
                to (-1 means no cutoff, 0 means no looking for data). As with hoverdistance,
                distance does not apply to area-like objects. In addition, some objects
                can be hovered on but will not generate spikelines, such as scatter fills.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.SelectDirection">
            <summary>
                When <c>dragmode</c> is set to <c>select</c>, this limits the selection
                of the drag to horizontal, vertical or diagonal. <c>h</c> only allows horizontal
                selection, <c>v</c> only vertical, <c>d</c> only diagonal and <c>any</c>
                sets no limit.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Grid">
            <summary>
                Gets or sets the Grid.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Calendar">
            <summary>
                Sets the default calendar system to use for interpreting and displaying
                dates throughout the plot.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.XAxis">
            <summary>
                Gets or sets the XAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.YAxis">
            <summary>
                Gets or sets the YAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Ternary">
            <summary>
                Gets or sets the Ternary.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Scene">
            <summary>
                Gets or sets the Scene.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Geo">
            <summary>
                Gets or sets the Geo.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.MapBox">
            <summary>
                Gets or sets the MapBox.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Polar">
            <summary>
                Gets or sets the Polar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.RadialAxis">
            <summary>
                Gets or sets the RadialAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.AngularAxis">
            <summary>
                Gets or sets the AngularAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Direction">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Sets the direction corresponding to positive angles in legacy polar charts.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Orientation">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Rotates the entire polar by the given angle in legacy polar charts.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Legend">
            <summary>
                Gets or sets the Legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Annotations">
            <summary>
                Gets or sets the Annotations.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Shapes">
            <summary>
                Gets or sets the Shapes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Images">
            <summary>
                Gets or sets the Images.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.UpdateMenus">
            <summary>
                Gets or sets the UpdateMenus.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.Sliders">
            <summary>
                Gets or sets the Sliders.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.ColorScale">
            <summary>
                Gets or sets the ColorScale.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.ColorAxis">
            <summary>
                Gets or sets the ColorAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Layout.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ActiveShape">
            <summary>
                The ActiveShape class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ActiveShape.FillColor">
            <summary>
                Sets the color filling the active shape&#39; interior.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ActiveShape.Opacity">
            <summary>
                Sets the opacity of the active shape.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.AngularAxis">
            <summary>
                The AngularAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AngularAxis.Range">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Defines the start and end point of this angular axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AngularAxis.Domain">
            <summary>
                Polar chart subplots are not supported yet. This key has currently no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AngularAxis.ShowLine">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Determines whether or not the line bounding this angular axis will be shown
                on the figure.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AngularAxis.ShowTickLabels">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Determines whether or not the angular axis ticks will feature tick labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AngularAxis.TickOrientation">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Sets the orientation (from the paper perspective) of the angular axis tick
                labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AngularAxis.TickleN">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Sets the length of the tick lines on this angular axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AngularAxis.TickColor">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Sets the color of the tick lines on this angular axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AngularAxis.TickSuffix">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Sets the length of the tick lines on this angular axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AngularAxis.EndPadding">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AngularAxis.Visible">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Determines whether or not this axis will be visible.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.AngularAxisLib.TickOrientationEnum">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Sets the orientation (from the paper perspective) of the angular axis tick
                labels.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.Annotation">
            <summary>
                The Annotation class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.Visible">
            <summary>
                Determines whether or not this annotation is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.Text">
            <summary>
                Sets the text associated with this annotation. Plotly uses a subset of HTML
                tags to do things like newline (&lt;br&gt;), bold (&lt;b&gt;&lt;/b&gt;),
                italics (&lt;i&gt;&lt;/i&gt;), hyperlinks (&lt;a href=<c>...</c>&gt;&lt;/a&gt;).
                Tags &lt;em&gt;, &lt;sup&gt;, &lt;sub&gt; &lt;span&gt; are also supported.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.TextAngle">
            <summary>
                Sets the angle at which the <c>text</c> is drawn with respect to the horizontal.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.Font">
            <summary>
                Sets the annotation text font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.Width">
            <summary>
                Sets an explicit width for the text box. null (default) lets the text set
                the box width. Wider text will be clipped. There is no automatic wrapping;
                use &lt;br&gt; to start a new line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.Height">
            <summary>
                Sets an explicit height for the text box. null (default) lets the text set
                the box height. Taller text will be clipped.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.Opacity">
            <summary>
                Sets the opacity of the annotation (text + arrow).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.Align">
            <summary>
                Sets the horizontal alignment of the <c>text</c> within the box. Has an
                effect only if <c>text</c> spans two or more lines (i.e. <c>text</c> contains
                one or more &lt;br&gt; HTML tags) or if an explicit width is set to override
                the text width.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.VAlign">
            <summary>
                Sets the vertical alignment of the <c>text</c> within the box. Has an effect
                only if an explicit height is set to override the text height.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.BgColor">
            <summary>
                Sets the background color of the annotation.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.BorderColor">
            <summary>
                Sets the color of the border enclosing the annotation <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.BorderPad">
            <summary>
                Sets the padding (in px) between the <c>text</c> and the enclosing border.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.BorderWidth">
            <summary>
                Sets the width (in px) of the border enclosing the annotation <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.ShowArrow">
            <summary>
                Determines whether or not the annotation is drawn with an arrow. If <c>true</c>,
                <c>text</c> is placed near the arrow&#39;s tail. If <c>false</c>, <c>text</c>
                lines up with the <c>x</c> and <c>y</c> provided.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.ArrowColor">
            <summary>
                Sets the color of the annotation arrow.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.Arrowhead">
            <summary>
                Sets the end annotation arrow head style.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.StartArrowhead">
            <summary>
                Sets the start annotation arrow head style.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.ArrowSide">
            <summary>
                Sets the annotation arrow head position.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.ArrowSize">
            <summary>
                Sets the size of the end annotation arrow head, relative to <c>arrowwidth</c>.
                A value of 1 (default) gives a head about 3x as wide as the line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.StartArrowSize">
            <summary>
                Sets the size of the start annotation arrow head, relative to <c>arrowwidth</c>.
                A value of 1 (default) gives a head about 3x as wide as the line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.ArrowWidth">
            <summary>
                Sets the width (in px) of annotation arrow line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.Standoff">
            <summary>
                Sets a distance, in pixels, to move the end arrowhead away from the position
                it is pointing at, for example to point at the edge of a marker independent
                of zoom. Note that this shortens the arrow from the <c>ax</c> / <c>ay</c>
                vector, in contrast to <c>xshift</c> / <c>yshift</c> which moves everything
                by this amount.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.StartStandoff">
            <summary>
                Sets a distance, in pixels, to move the start arrowhead away from the position
                it is pointing at, for example to point at the edge of a marker independent
                of zoom. Note that this shortens the arrow from the <c>ax</c> / <c>ay</c>
                vector, in contrast to <c>xshift</c> / <c>yshift</c> which moves everything
                by this amount.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.Ax">
            <summary>
                Sets the x component of the arrow tail about the arrow head. If <c>axref</c>
                is <c>pixel</c>, a positive (negative)  component corresponds to an arrow
                pointing from right to left (left to right). If <c>axref</c> is an axis,
                this is an absolute value on that axis, like <c>x</c>, NOT a relative value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.Ay">
            <summary>
                Sets the y component of the arrow tail about the arrow head. If <c>ayref</c>
                is <c>pixel</c>, a positive (negative)  component corresponds to an arrow
                pointing from bottom to top (top to bottom). If <c>ayref</c> is an axis,
                this is an absolute value on that axis, like <c>y</c>, NOT a relative value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.AXref">
            <summary>
                Indicates in what terms the tail of the annotation (ax,ay)  is specified.
                If <c>pixel</c>, <c>ax</c> is a relative offset in pixels  from <c>x</c>.
                If set to an x axis id (e.g. <c>x</c> or <c>x2</c>), <c>ax</c> is  specified
                in the same terms as that axis. This is useful  for trendline annotations
                which should continue to indicate  the correct trend when zoomed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.AyRef">
            <summary>
                Indicates in what terms the tail of the annotation (ax,ay)  is specified.
                If <c>pixel</c>, <c>ay</c> is a relative offset in pixels  from <c>y</c>.
                If set to a y axis id (e.g. <c>y</c> or <c>y2</c>), <c>ay</c> is  specified
                in the same terms as that axis. This is useful  for trendline annotations
                which should continue to indicate  the correct trend when zoomed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.XRef">
            <summary>
                Sets the annotation&#39;s x coordinate axis. If set to an x axis id (e.g.
                <c>x</c> or <c>x2</c>), the <c>x</c> position refers to an x coordinate
                If set to <c>paper</c>, the <c>x</c> position refers to the distance from
                the left side of the plotting area in normalized coordinates where 0 (1)
                corresponds to the left (right) side.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.X">
            <summary>
                Sets the annotation&#39;s x position. If the axis <c>type</c> is <c>log</c>,
                then you must take the log of your desired range. If the axis <c>type</c>
                is <c>date</c>, it should be date strings, like date data, though Date objects
                and unix milliseconds will be accepted and converted to strings. If the
                axis <c>type</c> is <c>category</c>, it should be numbers, using the scale
                where each category is assigned a serial number from zero in the order it
                appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.XAnchor">
            <summary>
                Sets the text box&#39;s horizontal position anchor This anchor binds the
                <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c> of the
                annotation. For example, if <c>x</c> is set to 1, <c>xref</c> to <c>paper</c>
                and <c>xanchor</c> to <c>right</c> then the right-most portion of the annotation
                lines up with the right-most edge of the plotting area. If <c>auto</c>,
                the anchor is equivalent to <c>center</c> for data-referenced annotations
                or if there is an arrow, whereas for paper-referenced with no arrow, the
                anchor picked corresponds to the closest side.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.XShift">
            <summary>
                Shifts the position of the whole annotation and arrow to the right (positive)
                or left (negative) by this many pixels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.YRef">
            <summary>
                Sets the annotation&#39;s y coordinate axis. If set to an y axis id (e.g.
                <c>y</c> or <c>y2</c>), the <c>y</c> position refers to an y coordinate
                If set to <c>paper</c>, the <c>y</c> position refers to the distance from
                the bottom of the plotting area in normalized coordinates where 0 (1) corresponds
                to the bottom (top).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.Y">
            <summary>
                Sets the annotation&#39;s y position. If the axis <c>type</c> is <c>log</c>,
                then you must take the log of your desired range. If the axis <c>type</c>
                is <c>date</c>, it should be date strings, like date data, though Date objects
                and unix milliseconds will be accepted and converted to strings. If the
                axis <c>type</c> is <c>category</c>, it should be numbers, using the scale
                where each category is assigned a serial number from zero in the order it
                appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.YAnchor">
            <summary>
                Sets the text box&#39;s vertical position anchor This anchor binds the <c>y</c>
                position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the annotation.
                For example, if <c>y</c> is set to 1, <c>yref</c> to <c>paper</c> and <c>yanchor</c>
                to <c>top</c> then the top-most portion of the annotation lines up with
                the top-most edge of the plotting area. If <c>auto</c>, the anchor is equivalent
                to <c>middle</c> for data-referenced annotations or if there is an arrow,
                whereas for paper-referenced with no arrow, the anchor picked corresponds
                to the closest side.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.YShift">
            <summary>
                Shifts the position of the whole annotation and arrow up (positive) or down
                (negative) by this many pixels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.ClickToShow">
            <summary>
                Makes this annotation respond to clicks on the plot. If you click a data
                point that exactly matches the <c>x</c> and <c>y</c> values of this annotation,
                and it is hidden (visible: false), it will appear. In <c>onoff</c> mode,
                you must click the same point again to make it disappear, so if you click
                multiple points, you can show multiple annotations. In <c>onout</c> mode,
                a click anywhere else in the plot (on another data point or not) will hide
                this annotation. If you need to show/hide this annotation in response to
                different <c>x</c> or <c>y</c> values, you can set <c>xclick</c> and/or
                <c>yclick</c>. This is useful for example to label the side of a bar. To
                label markers though, <c>standoff</c> is preferred over <c>xclick</c> and
                <c>yclick</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.XClick">
            <summary>
                Toggle this annotation when clicking a data point whose <c>x</c> value is
                <c>xclick</c> rather than the annotation&#39;s <c>x</c> value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.YClick">
            <summary>
                Toggle this annotation when clicking a data point whose <c>y</c> value is
                <c>yclick</c> rather than the annotation&#39;s <c>y</c> value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.HoverText">
            <summary>
                Sets text to appear when hovering over this annotation. If omitted or blank,
                no hover label will appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.CaptureEvents">
            <summary>
                Determines whether the annotation text box captures mouse move and click
                events, or allows those events to pass through to data points in the plot
                that may be behind the annotation. By default <c>captureevents</c> is <c>false</c>
                unless <c>hovertext</c> is provided. If you use the event <c>plotly_clickannotation</c>
                without <c>hovertext</c> you must explicitly enable <c>captureevents</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Annotation.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.AnnotationLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the <c>text</c> within the box. Has an
                effect only if <c>text</c> spans two or more lines (i.e. <c>text</c> contains
                one or more &lt;br&gt; HTML tags) or if an explicit width is set to override
                the text width.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.AnnotationLib.ArrowSideFlag">
            <summary>
                Sets the annotation arrow head position.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.AnnotationLib.ClickToShowEnum">
            <summary>
                Makes this annotation respond to clicks on the plot. If you click a data
                point that exactly matches the <c>x</c> and <c>y</c> values of this annotation,
                and it is hidden (visible: false), it will appear. In <c>onoff</c> mode,
                you must click the same point again to make it disappear, so if you click
                multiple points, you can show multiple annotations. In <c>onout</c> mode,
                a click anywhere else in the plot (on another data point or not) will hide
                this annotation. If you need to show/hide this annotation in response to
                different <c>x</c> or <c>y</c> values, you can set <c>xclick</c> and/or
                <c>yclick</c>. This is useful for example to label the side of a bar. To
                label markers though, <c>standoff</c> is preferred over <c>xclick</c> and
                <c>yclick</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.AnnotationLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AnnotationLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AnnotationLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AnnotationLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.AnnotationLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AnnotationLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover label. By default uses the annotation&#39;s
                <c>bgcolor</c> made opaque, or white if it was transparent.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AnnotationLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover label. By default uses either dark grey
                or white, for maximum contrast with <c>hoverlabel.bgcolor</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AnnotationLib.HoverLabel.Font">
            <summary>
                Sets the hover label text font. By default uses the global hover font and
                size, with color from <c>hoverlabel.bordercolor</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.AnnotationLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AnnotationLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AnnotationLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.AnnotationLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.AnnotationLib.VAlignEnum">
            <summary>
                Sets the vertical alignment of the <c>text</c> within the box. Has an effect
                only if an explicit height is set to override the text height.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.AnnotationLib.XAnchorEnum">
            <summary>
                Sets the text box&#39;s horizontal position anchor This anchor binds the
                <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c> of the
                annotation. For example, if <c>x</c> is set to 1, <c>xref</c> to <c>paper</c>
                and <c>xanchor</c> to <c>right</c> then the right-most portion of the annotation
                lines up with the right-most edge of the plotting area. If <c>auto</c>,
                the anchor is equivalent to <c>center</c> for data-referenced annotations
                or if there is an arrow, whereas for paper-referenced with no arrow, the
                anchor picked corresponds to the closest side.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.AnnotationLib.YAnchorEnum">
            <summary>
                Sets the text box&#39;s vertical position anchor This anchor binds the <c>y</c>
                position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the annotation.
                For example, if <c>y</c> is set to 1, <c>yref</c> to <c>paper</c> and <c>yanchor</c>
                to <c>top</c> then the top-most portion of the annotation lines up with
                the top-most edge of the plotting area. If <c>auto</c>, the anchor is equivalent
                to <c>middle</c> for data-referenced annotations or if there is an arrow,
                whereas for paper-referenced with no arrow, the anchor picked corresponds
                to the closest side.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.BarModeEnum">
            <summary>
                Determines how bars at the same location coordinate are displayed on the
                graph. With <c>stack</c>, the bars are stacked on top of one another With
                <c>relative</c>, the bars are stacked on top of one another, with negative
                values below the axis, positive values above With <c>group</c>, the bars
                are plotted next to one another centered around the shared location. With
                <c>overlay</c>, the bars are plotted over one another, you might need to
                an <c>opacity</c> to see multiple bars.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.BarNormEnum">
            <summary>
                Sets the normalization for bar traces on the graph. With <c>fraction</c>,
                the value of each bar is divided by the sum of all values at that location
                coordinate. <c>percent</c> is the same but multiplied by 100 to show percentages.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.BoxModeEnum">
            <summary>
                Determines how boxes at the same location coordinate are displayed on the
                graph. If <c>group</c>, the boxes are plotted next to one another centered
                around the shared location. If <c>overlay</c>, the boxes are plotted over
                one another, you might need to set <c>opacity</c> to see them multiple boxes.
                Has no effect on traces that have <c>width</c> set.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.CalendarEnum">
            <summary>
                Sets the default calendar system to use for interpreting and displaying
                dates throughout the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ClickModeFlag">
            <summary>
                Determines the mode of single click interactions. <c>event</c> is the default
                value and emits the <c>plotly_click</c> event. In addition this mode emits
                the <c>plotly_selected</c> event in drag modes <c>lasso</c> and <c>select</c>,
                but with no event data attached (kept for compatibility reasons). The <c>select</c>
                flag enables selecting single data points via click. This mode also supports
                persistent selections, meaning that pressing Shift while clicking, adds
                to / subtracts from an existing selection. <c>select</c> with <c>hovermode</c>:
                <c>x</c> can be confusing, consider explicitly setting <c>hovermode</c>:
                <c>closest</c> when using this feature. Selection events are sent accordingly
                as long as <c>event</c> flag is set as well. When the <c>event</c> flag
                is missing, <c>plotly_click</c> and <c>plotly_selected</c> events are not
                fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxis">
            <summary>
                The ColorAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxis.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here corresponding trace color array(s)) or the bounds set in
                <c>cmin</c> and <c>cmax</c>  Defaults to <c>false</c> when <c>cmin</c> and
                <c>cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxis.CMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as corresponding trace color array(s) and if set, <c>cmax</c> must be set
                as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxis.CMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as corresponding trace color array(s) and if set, <c>cmin</c> must be set
                as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxis.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>cmin</c> and/or <c>cmax</c>
                to be equidistant to this point. Value should have the same units as corresponding
                trace color array(s). Has no effect when <c>cauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxis.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>cmin</c> and
                <c>cmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxis.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxis.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>cmin</c> will correspond
                to the last color in the array and <c>cmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxis.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxis.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorAxisLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ColorScale">
            <summary>
                The ColorScale class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorScale.Sequential">
            <summary>
                Sets the default sequential colorscale for positive values. Note that <c>autocolorscale</c>
                must be true for this attribute to work.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorScale.SequentialMinus">
            <summary>
                Sets the default sequential colorscale for negative values. Note that <c>autocolorscale</c>
                must be true for this attribute to work.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ColorScale.Diverging">
            <summary>
                Sets the default diverging colorscale. Note that <c>autocolorscale</c> must
                be true for this attribute to work.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.DirectionEnum">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Sets the direction corresponding to positive angles in legacy polar charts.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.DragModeEnum">
            <summary>
                Determines the mode of drag interactions. <c>select</c> and <c>lasso</c>
                apply only to scatter traces with markers or text. <c>orbit</c> and <c>turntable</c>
                apply only to 3D scenes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.FunnelModeEnum">
            <summary>
                Determines how bars at the same location coordinate are displayed on the
                graph. With <c>stack</c>, the bars are stacked on top of one another With
                <c>group</c>, the bars are plotted next to one another centered around the
                shared location. With <c>overlay</c>, the bars are plotted over one another,
                you might need to an <c>opacity</c> to see multiple bars.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.Geo">
            <summary>
                The Geo class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.Domain">
            <summary>
                Gets or sets the Domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.FitBounds">
            <summary>
                Determines if this subplot&#39;s view settings are auto-computed to fit
                trace data. On scoped maps, setting <c>fitbounds</c> leads to <c>center.lon</c>
                and <c>center.lat</c> getting auto-filled. On maps with a non-clipped projection,
                setting <c>fitbounds</c> leads to <c>center.lon</c>, <c>center.lat</c>,
                and <c>projection.rotation.lon</c> getting auto-filled. On maps with a clipped
                projection, setting <c>fitbounds</c> leads to <c>center.lon</c>, <c>center.lat</c>,
                <c>projection.rotation.lon</c>, <c>projection.rotation.lat</c>, <c>lonaxis.range</c>
                and <c>lonaxis.range</c> getting auto-filled. If <c>locations</c>, only
                the trace&#39;s visible locations are considered in the <c>fitbounds</c>
                computations. If <c>geojson</c>, the entire trace input <c>geojson</c> (if
                provided) is considered in the <c>fitbounds</c> computations, Defaults to
                <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.Resolution">
            <summary>
                Sets the resolution of the base layers. The values have units of km/mm e.g.
                110 corresponds to a scale ratio of 1:110,000,000.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.Scope">
            <summary>
                Set the scope of the map.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.Projection">
            <summary>
                Gets or sets the Projection.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.Center">
            <summary>
                Gets or sets the Center.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.Visible">
            <summary>
                Sets the default visibility of the base layers.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.ShowCoastlines">
            <summary>
                Sets whether or not the coastlines are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.CoastlineColor">
            <summary>
                Sets the coastline color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.CoastlineWidth">
            <summary>
                Sets the coastline stroke width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.ShowLand">
            <summary>
                Sets whether or not land masses are filled in color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.LandColor">
            <summary>
                Sets the land mass color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.ShowOcean">
            <summary>
                Sets whether or not oceans are filled in color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.OceanColor">
            <summary>
                Sets the ocean color
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.ShowLakes">
            <summary>
                Sets whether or not lakes are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.LakeColor">
            <summary>
                Sets the color of the lakes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.ShowRivers">
            <summary>
                Sets whether or not rivers are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.RiverColor">
            <summary>
                Sets color of the rivers.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.RiverWidth">
            <summary>
                Sets the stroke width (in px) of the rivers.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.ShowCountries">
            <summary>
                Sets whether or not country boundaries are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.CountryColor">
            <summary>
                Sets line color of the country boundaries.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.CountryWidth">
            <summary>
                Sets line width (in px) of the country boundaries.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.ShowSubUnits">
            <summary>
                Sets whether or not boundaries of subunits within countries (e.g. states,
                provinces) are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.SubUnitColor">
            <summary>
                Sets the color of the subunits boundaries.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.SubUnitWidth">
            <summary>
                Sets the stroke width (in px) of the subunits boundaries.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.ShowFrame">
            <summary>
                Sets whether or not a frame is drawn around the map.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.FrameColor">
            <summary>
                Sets the color the frame.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.FrameWidth">
            <summary>
                Sets the stroke width (in px) of the frame.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.BgColor">
            <summary>
                Set the background color of the map
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.LonAxis">
            <summary>
                Gets or sets the LonAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.LaTaxis">
            <summary>
                Gets or sets the LaTaxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Geo.UiRevision">
            <summary>
                Controls persistence of user-driven changes in the view (projection and
                center). Defaults to <c>layout.uirevision</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.GeoLib.Center">
            <summary>
                The Center class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.Center.Lon">
            <summary>
                Sets the longitude of the map&#39;s center. By default, the map&#39;s longitude
                center lies at the middle of the longitude range for scoped projection and
                above <c>projection.rotation.lon</c> otherwise.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.Center.Lat">
            <summary>
                Sets the latitude of the map&#39;s center. For all projection types, the
                map&#39;s latitude center lies at the middle of the latitude range by default.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.GeoLib.Domain">
            <summary>
                The Domain class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.Domain.X">
            <summary>
                Sets the horizontal domain of this geo subplot (in plot fraction). Note
                that geo subplots are constrained by domain. In general, when <c>projection.scale</c>
                is set to 1. a map will fit either its x or y domain, but not both.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.Domain.Y">
            <summary>
                Sets the vertical domain of this geo subplot (in plot fraction). Note that
                geo subplots are constrained by domain. In general, when <c>projection.scale</c>
                is set to 1. a map will fit either its x or y domain, but not both.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.Domain.Row">
            <summary>
                If there is a layout grid, use the domain for this row in the grid for this
                geo subplot . Note that geo subplots are constrained by domain. In general,
                when <c>projection.scale</c> is set to 1. a map will fit either its x or
                y domain, but not both.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.Domain.Column">
            <summary>
                If there is a layout grid, use the domain for this column in the grid for
                this geo subplot . Note that geo subplots are constrained by domain. In
                general, when <c>projection.scale</c> is set to 1. a map will fit either
                its x or y domain, but not both.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.GeoLib.FitBoundsEnum">
            <summary>
                Determines if this subplot&#39;s view settings are auto-computed to fit
                trace data. On scoped maps, setting <c>fitbounds</c> leads to <c>center.lon</c>
                and <c>center.lat</c> getting auto-filled. On maps with a non-clipped projection,
                setting <c>fitbounds</c> leads to <c>center.lon</c>, <c>center.lat</c>,
                and <c>projection.rotation.lon</c> getting auto-filled. On maps with a clipped
                projection, setting <c>fitbounds</c> leads to <c>center.lon</c>, <c>center.lat</c>,
                <c>projection.rotation.lon</c>, <c>projection.rotation.lat</c>, <c>lonaxis.range</c>
                and <c>lonaxis.range</c> getting auto-filled. If <c>locations</c>, only
                the trace&#39;s visible locations are considered in the <c>fitbounds</c>
                computations. If <c>geojson</c>, the entire trace input <c>geojson</c> (if
                provided) is considered in the <c>fitbounds</c> computations, Defaults to
                <c>false</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.GeoLib.LaTaxis">
            <summary>
                The LaTaxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.LaTaxis.Range">
            <summary>
                Sets the range of this axis (in degrees), sets the map&#39;s clipped coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.LaTaxis.ShowGrid">
            <summary>
                Sets whether or not graticule are shown on the map.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.LaTaxis.Tick0">
            <summary>
                Sets the graticule&#39;s starting tick longitude/latitude.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.LaTaxis.DTick">
            <summary>
                Sets the graticule&#39;s longitude/latitude tick step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.LaTaxis.GridColor">
            <summary>
                Sets the graticule&#39;s stroke color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.LaTaxis.GridWidth">
            <summary>
                Sets the graticule&#39;s stroke width (in px).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.GeoLib.LonAxis">
            <summary>
                The LonAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.LonAxis.Range">
            <summary>
                Sets the range of this axis (in degrees), sets the map&#39;s clipped coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.LonAxis.ShowGrid">
            <summary>
                Sets whether or not graticule are shown on the map.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.LonAxis.Tick0">
            <summary>
                Sets the graticule&#39;s starting tick longitude/latitude.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.LonAxis.DTick">
            <summary>
                Sets the graticule&#39;s longitude/latitude tick step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.LonAxis.GridColor">
            <summary>
                Sets the graticule&#39;s stroke color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.LonAxis.GridWidth">
            <summary>
                Sets the graticule&#39;s stroke width (in px).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.GeoLib.Projection">
            <summary>
                The Projection class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.Projection.Type">
            <summary>
                Sets the projection type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.Projection.Rotation">
            <summary>
                Gets or sets the Rotation.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.Projection.Parallels">
            <summary>
                For conic projection types only. Sets the parallels (tangent, secant) where
                the cone intersects the sphere.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.Projection.Scale">
            <summary>
                Zooms in or out on the map view. A scale of <c>1</c> corresponds to the
                largest zoom level that fits the map&#39;s lon and lat ranges. 
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.GeoLib.ProjectionLib.Rotation">
            <summary>
                The Rotation class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.ProjectionLib.Rotation.Lon">
            <summary>
                Rotates the map along parallels (in degrees East). Defaults to the center
                of the <c>lonaxis.range</c> values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.ProjectionLib.Rotation.Lat">
            <summary>
                Rotates the map along meridians (in degrees North).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GeoLib.ProjectionLib.Rotation.Roll">
            <summary>
                Roll the map (in degrees) For example, a roll of <c>180</c> makes the map
                appear upside down.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.GeoLib.ProjectionLib.TypeEnum">
            <summary>
                Sets the projection type.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.GeoLib.ResolutionEnum">
            <summary>
                Sets the resolution of the base layers. The values have units of km/mm e.g.
                110 corresponds to a scale ratio of 1:110,000,000.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.GeoLib.ScopeEnum">
            <summary>
                Set the scope of the map.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.Grid">
            <summary>
                The Grid class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Grid.Rows">
            <summary>
                The number of rows in the grid. If you provide a 2D <c>subplots</c> array
                or a <c>yaxes</c> array, its length is used as the default. But it&#39;s
                also possible to have a different length, if you want to leave a row at
                the end for non-cartesian subplots.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Grid.RowOrder">
            <summary>
                Is the first row the top or the bottom? Note that columns are always enumerated
                from left to right.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Grid.Columns">
            <summary>
                The number of columns in the grid. If you provide a 2D <c>subplots</c> array,
                the length of its longest row is used as the default. If you give an <c>xaxes</c>
                array, its length is used as the default. But it&#39;s also possible to
                have a different length, if you want to leave a row at the end for non-cartesian
                subplots.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Grid.Subplots">
            <summary>
                Used for freeform grids, where some axes may be shared across subplots but
                others are not. Each entry should be a cartesian subplot id, like <c>xy</c>
                or <c>x3y2</c>, or ** to leave that cell empty. You may reuse x axes within
                the same column, and y axes within the same row. Non-cartesian subplots
                and traces that support <c>domain</c> can place themselves in this grid
                separately using the <c>gridcell</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Grid.XAxes">
            <summary>
                Used with <c>yaxes</c> when the x and y axes are shared across columns and
                rows. Each entry should be an x axis id like <c>x</c>, <c>x2</c>, etc.,
                or *&#39; to not put an x axis in that column. Entries other than &#39;*
                must be unique. Ignored if <c>subplots</c> is present. If missing but <c>yaxes</c>
                is present, will generate consecutive IDs.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Grid.YAxes">
            <summary>
                Used with <c>yaxes</c> when the x and y axes are shared across columns and
                rows. Each entry should be an y axis id like <c>y</c>, <c>y2</c>, etc.,
                or *&#39; to not put a y axis in that row. Entries other than &#39;* must
                be unique. Ignored if <c>subplots</c> is present. If missing but <c>xaxes</c>
                is present, will generate consecutive IDs.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Grid.Pattern">
            <summary>
                If no <c>subplots</c>, <c>xaxes</c>, or <c>yaxes</c> are given but we do
                have <c>rows</c> and <c>columns</c>, we can generate defaults using consecutive
                axis IDs, in two ways: <c>coupled</c> gives one x axis per column and one
                y axis per row. <c>independent</c> uses a new xy pair for each cell, left-to-right
                across each row then iterating rows according to <c>roworder</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Grid.XGap">
            <summary>
                Horizontal space between grid cells, expressed as a fraction of the total
                width available to one cell. Defaults to 0.1 for coupled-axes grids and
                0.2 for independent grids.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Grid.YGap">
            <summary>
                Vertical space between grid cells, expressed as a fraction of the total
                height available to one cell. Defaults to 0.1 for coupled-axes grids and
                0.3 for independent grids.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Grid.Domain">
            <summary>
                Gets or sets the Domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Grid.XSide">
            <summary>
                Sets where the x axis labels and titles go. <c>bottom</c> means the very
                bottom of the grid. &#39;bottom plot&#39; is the lowest plot that each x
                axis is used in. <c>top</c> and &#39;top plot&#39; are similar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Grid.YSide">
            <summary>
                Sets where the y axis labels and titles go. <c>left</c> means the very left
                edge of the grid. &#39;left plot&#39; is the leftmost plot that each y axis
                is used in. <c>right</c> and &#39;right plot&#39; are similar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.GridLib.Domain">
            <summary>
                The Domain class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GridLib.Domain.X">
            <summary>
                Sets the horizontal domain of this grid subplot (in plot fraction). The
                first and last cells end exactly at the domain edges, with no grout around
                the edges.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.GridLib.Domain.Y">
            <summary>
                Sets the vertical domain of this grid subplot (in plot fraction). The first
                and last cells end exactly at the domain edges, with no grout around the
                edges.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.GridLib.PatternEnum">
            <summary>
                If no <c>subplots</c>, <c>xaxes</c>, or <c>yaxes</c> are given but we do
                have <c>rows</c> and <c>columns</c>, we can generate defaults using consecutive
                axis IDs, in two ways: <c>coupled</c> gives one x axis per column and one
                y axis per row. <c>independent</c> uses a new xy pair for each cell, left-to-right
                across each row then iterating rows according to <c>roworder</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.GridLib.RowOrderEnum">
            <summary>
                Is the first row the top or the bottom? Note that columns are always enumerated
                from left to right.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.GridLib.XSideEnum">
            <summary>
                Sets where the x axis labels and titles go. <c>bottom</c> means the very
                bottom of the grid. &#39;bottom plot&#39; is the lowest plot that each x
                axis is used in. <c>top</c> and &#39;top plot&#39; are similar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.GridLib.YSideEnum">
            <summary>
                Sets where the y axis labels and titles go. <c>left</c> means the very left
                edge of the grid. &#39;left plot&#39; is the leftmost plot that each y axis
                is used in. <c>right</c> and &#39;right plot&#39; are similar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of all hover labels on graph
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of all hover labels on graph.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.HoverLabel.Font">
            <summary>
                Sets the default hover label font used by all traces on the graph.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.HoverModeEnum">
            <summary>
                Determines the mode of hover interactions. If <c>closest</c>, a single hoverlabel
                will appear for the <c>closest</c> point within the <c>hoverdistance</c>.
                If <c>x</c> (or <c>y</c>), multiple hoverlabels will appear for multiple
                points at the <c>closest</c> x- (or y-) coordinate within the <c>hoverdistance</c>,
                with the caveat that no more than one hoverlabel will appear per trace.
                If &#39;x unified&#39; (or &#39;y unified&#39;), a single hoverlabel will
                appear multiple points at the closest x- (or y-) coordinate within the <c>hoverdistance</c>
                with the caveat that no more than one hoverlabel will appear per trace.
                In this mode, spikelines are enabled by default perpendicular to the specified
                axis. If false, hover interactions are disabled. If <c>clickmode</c> includes
                the <c>select</c> flag, <c>hovermode</c> defaults to <c>closest</c>. If
                <c>clickmode</c> lacks the <c>select</c> flag, it defaults to <c>x</c> or
                <c>y</c> (depending on the trace&#39;s <c>orientation</c> value) for plots
                based on cartesian coordinates. For anything else the default value is <c>closest</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.Image">
            <summary>
                The Image class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Image.Visible">
            <summary>
                Determines whether or not this image is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Image.Source">
            <summary>
                Specifies the URL of the image to be used. The URL must be accessible from
                the domain where the plot code is run, and can be either relative or absolute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Image.Layer">
            <summary>
                Specifies whether images are drawn below or above traces. When <c>xref</c>
                and <c>yref</c> are both set to <c>paper</c>, image is drawn below the entire
                plot area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Image.SizeX">
            <summary>
                Sets the image container size horizontally. The image will be sized based
                on the <c>position</c> value. When <c>xref</c> is set to <c>paper</c>, units
                are sized relative to the plot width.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Image.SizeY">
            <summary>
                Sets the image container size vertically. The image will be sized based
                on the <c>position</c> value. When <c>yref</c> is set to <c>paper</c>, units
                are sized relative to the plot height.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Image.Sizing">
            <summary>
                Specifies which dimension of the image to constrain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Image.Opacity">
            <summary>
                Sets the opacity of the image.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Image.X">
            <summary>
                Sets the image&#39;s x position. When <c>xref</c> is set to <c>paper</c>,
                units are sized relative to the plot height. See <c>xref</c> for more info
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Image.Y">
            <summary>
                Sets the image&#39;s y position. When <c>yref</c> is set to <c>paper</c>,
                units are sized relative to the plot height. See <c>yref</c> for more info
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Image.XAnchor">
            <summary>
                Sets the anchor for the x position
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Image.YAnchor">
            <summary>
                Sets the anchor for the y position.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Image.XRef">
            <summary>
                Sets the images&#39;s x coordinate axis. If set to a x axis id (e.g. <c>x</c>
                or <c>x2</c>), the <c>x</c> position refers to an x data coordinate If set
                to <c>paper</c>, the <c>x</c> position refers to the distance from the left
                of plot in normalized coordinates where <c>0</c> (<c>1</c>) corresponds
                to the left (right).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Image.YRef">
            <summary>
                Sets the images&#39;s y coordinate axis. If set to a y axis id (e.g. <c>y</c>
                or <c>y2</c>), the <c>y</c> position refers to a y data coordinate. If set
                to <c>paper</c>, the <c>y</c> position refers to the distance from the bottom
                of the plot in normalized coordinates where <c>0</c> (<c>1</c>) corresponds
                to the bottom (top).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Image.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Image.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ImageLib.LayerEnum">
            <summary>
                Specifies whether images are drawn below or above traces. When <c>xref</c>
                and <c>yref</c> are both set to <c>paper</c>, image is drawn below the entire
                plot area.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ImageLib.SizingEnum">
            <summary>
                Specifies which dimension of the image to constrain.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ImageLib.XAnchorEnum">
            <summary>
                Sets the anchor for the x position
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ImageLib.YAnchorEnum">
            <summary>
                Sets the anchor for the y position.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.Legend">
            <summary>
                The Legend class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.BgColor">
            <summary>
                Sets the legend background color. Defaults to <c>layout.paper_bgcolor</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.BorderColor">
            <summary>
                Sets the color of the border enclosing the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.BorderWidth">
            <summary>
                Sets the width (in px) of the border enclosing the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.Font">
            <summary>
                Sets the font used to text the legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.Orientation">
            <summary>
                Sets the orientation of the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.TraceOrder">
            <summary>
                Determines the order at which the legend items are displayed. If <c>normal</c>,
                the items are displayed top-to-bottom in the same order as the input data.
                If <c>reversed</c>, the items are displayed in the opposite order as <c>normal</c>.
                If <c>grouped</c>, the items are displayed in groups (when a trace <c>legendgroup</c>
                is provided). if <c>grouped+reversed</c>, the items are displayed in the
                opposite order as <c>grouped</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.TraceGroupGap">
            <summary>
                Sets the amount of vertical space (in px) between legend groups.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.ItemSizing">
            <summary>
                Determines if the legend items symbols scale with their corresponding <c>trace</c>
                attributes or remain <c>constant</c> independent of the symbol size on the
                graph.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.ItemClick">
            <summary>
                Determines the behavior on legend item click. <c>toggle</c> toggles the
                visibility of the item clicked on the graph. <c>toggleothers</c> makes the
                clicked item the sole visible item on the graph. <c>false</c> disable legend
                item click interactions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.ItemDoubleClick">
            <summary>
                Determines the behavior on legend item double-click. <c>toggle</c> toggles
                the visibility of the item clicked on the graph. <c>toggleothers</c> makes
                the clicked item the sole visible item on the graph. <c>false</c> disable
                legend item double-click interactions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.X">
            <summary>
                Sets the x position (in normalized coordinates) of the legend. Defaults
                to <c>1.02</c> for vertical legends and defaults to <c>0</c> for horizontal
                legends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.XAnchor">
            <summary>
                Sets the legend&#39;s horizontal position anchor. This anchor binds the
                <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c> of the
                legend. Value <c>auto</c> anchors legends to the right for <c>x</c> values
                greater than or equal to 2/3, anchors legends to the left for <c>x</c> values
                less than or equal to 1/3 and anchors legends with respect to their center
                otherwise.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.Y">
            <summary>
                Sets the y position (in normalized coordinates) of the legend. Defaults
                to <c>1</c> for vertical legends, defaults to <c>-0.1</c> for horizontal
                legends on graphs w/o range sliders and defaults to <c>1.1</c> for horizontal
                legends on graph with one or multiple range sliders.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.YAnchor">
            <summary>
                Sets the legend&#39;s vertical position anchor This anchor binds the <c>y</c>
                position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the legend.
                Value <c>auto</c> anchors legends at their bottom for <c>y</c> values less
                than or equal to 1/3, anchors legends to at their top for <c>y</c> values
                greater than or equal to 2/3 and anchors legends with respect to their middle
                otherwise.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.UiRevision">
            <summary>
                Controls persistence of legend-driven changes in trace and pie label visibility.
                Defaults to <c>layout.uirevision</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.VAlign">
            <summary>
                Sets the vertical alignment of the symbols with respect to their associated
                text.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Legend.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.LegendLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.LegendLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.LegendLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.LegendLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.LegendLib.ItemClickEnum">
            <summary>
                Determines the behavior on legend item click. <c>toggle</c> toggles the
                visibility of the item clicked on the graph. <c>toggleothers</c> makes the
                clicked item the sole visible item on the graph. <c>false</c> disable legend
                item click interactions.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.LegendLib.ItemDoubleClickEnum">
            <summary>
                Determines the behavior on legend item double-click. <c>toggle</c> toggles
                the visibility of the item clicked on the graph. <c>toggleothers</c> makes
                the clicked item the sole visible item on the graph. <c>false</c> disable
                legend item double-click interactions.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.LegendLib.ItemSizingEnum">
            <summary>
                Determines if the legend items symbols scale with their corresponding <c>trace</c>
                attributes or remain <c>constant</c> independent of the symbol size on the
                graph.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.LegendLib.OrientationEnum">
            <summary>
                Sets the orientation of the legend.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.LegendLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.LegendLib.Title.Text">
            <summary>
                Sets the title of the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.LegendLib.Title.Font">
            <summary>
                Sets this legend&#39;s title font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.LegendLib.Title.Side">
            <summary>
                Determines the location of legend&#39;s title with respect to the legend
                items. Defaulted to <c>top</c> with <c>orientation</c> is <c>h</c>. Defaulted
                to <c>left</c> with <c>orientation</c> is <c>v</c>. The &#39;top left&#39;
                options could be used to expand legend area in both x and y sides.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.LegendLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.LegendLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.LegendLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.LegendLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.LegendLib.TitleLib.SideEnum">
            <summary>
                Determines the location of legend&#39;s title with respect to the legend
                items. Defaulted to <c>top</c> with <c>orientation</c> is <c>h</c>. Defaulted
                to <c>left</c> with <c>orientation</c> is <c>v</c>. The &#39;top left&#39;
                options could be used to expand legend area in both x and y sides.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.LegendLib.TraceOrderFlag">
            <summary>
                Determines the order at which the legend items are displayed. If <c>normal</c>,
                the items are displayed top-to-bottom in the same order as the input data.
                If <c>reversed</c>, the items are displayed in the opposite order as <c>normal</c>.
                If <c>grouped</c>, the items are displayed in groups (when a trace <c>legendgroup</c>
                is provided). if <c>grouped+reversed</c>, the items are displayed in the
                opposite order as <c>grouped</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.LegendLib.VAlignEnum">
            <summary>
                Sets the vertical alignment of the symbols with respect to their associated
                text.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.LegendLib.XAnchorEnum">
            <summary>
                Sets the legend&#39;s horizontal position anchor. This anchor binds the
                <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c> of the
                legend. Value <c>auto</c> anchors legends to the right for <c>x</c> values
                greater than or equal to 2/3, anchors legends to the left for <c>x</c> values
                less than or equal to 1/3 and anchors legends with respect to their center
                otherwise.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.LegendLib.YAnchorEnum">
            <summary>
                Sets the legend&#39;s vertical position anchor This anchor binds the <c>y</c>
                position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the legend.
                Value <c>auto</c> anchors legends at their bottom for <c>y</c> values less
                than or equal to 1/3, anchors legends to at their top for <c>y</c> values
                greater than or equal to 2/3 and anchors legends with respect to their middle
                otherwise.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.MapBox">
            <summary>
                The MapBox class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBox.Domain">
            <summary>
                Gets or sets the Domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBox.AccessToken">
            <summary>
                Sets the mapbox access token to be used for this mapbox map. Alternatively,
                the mapbox access token can be set in the configuration options under <c>mapboxAccessToken</c>.
                Note that accessToken are only required when <c>style</c> (e.g with values
                : basic, streets, outdoors, light, dark, satellite, satellite-streets )
                and/or a layout layer references the Mapbox server.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBox.Style">
            <summary>
                Defines the map layers that are rendered by default below the trace layers
                defined in <c>data</c>, which are themselves by default rendered below the
                layers defined in <c>layout.mapbox.layers</c>.  These layers can be defined
                either explicitly as a Mapbox Style object which can contain multiple layer
                definitions that load data from any public or private Tile Map Service (TMS
                or XYZ) or Web Map Service (WMS) or implicitly by using one of the built-in
                style objects which use WMSes which do not require any access tokens, or
                by using a default Mapbox style or custom Mapbox style URL, both of which
                require a Mapbox access token  Note that Mapbox access token can be set
                in the <c>accesstoken</c> attribute or in the <c>mapboxAccessToken</c> config
                option.  Mapbox Style objects are of the form described in the Mapbox GL
                JS documentation available at https://docs.mapbox.com/mapbox-gl-js/style-spec
                 The built-in plotly.js styles objects are: open-street-map, white-bg, carto-positron,
                carto-darkmatter, stamen-terrain, stamen-toner, stamen-watercolor  The built-in
                Mapbox styles are: basic, streets, outdoors, light, dark, satellite, satellite-streets
                 Mapbox style URLs are of the form: mapbox://mapbox.mapbox-&lt;name&gt;-&lt;version&gt;
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBox.Center">
            <summary>
                Gets or sets the Center.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBox.Zoom">
            <summary>
                Sets the zoom level of the map (mapbox.zoom).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBox.Bearing">
            <summary>
                Sets the bearing angle of the map in degrees counter-clockwise from North
                (mapbox.bearing).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBox.Pitch">
            <summary>
                Sets the pitch angle of the map (in degrees, where <c>0</c> means perpendicular
                to the surface of the map) (mapbox.pitch).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBox.Layers">
            <summary>
                Gets or sets the Layers.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBox.UiRevision">
            <summary>
                Controls persistence of user-driven changes in the view: <c>center</c>,
                <c>zoom</c>, <c>bearing</c>, <c>pitch</c>. Defaults to <c>layout.uirevision</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.MapBoxLib.Center">
            <summary>
                The Center class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Center.Lon">
            <summary>
                Sets the longitude of the center of the map (in degrees East).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Center.Lat">
            <summary>
                Sets the latitude of the center of the map (in degrees North).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.MapBoxLib.Domain">
            <summary>
                The Domain class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Domain.X">
            <summary>
                Sets the horizontal domain of this mapbox subplot (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Domain.Y">
            <summary>
                Sets the vertical domain of this mapbox subplot (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Domain.Row">
            <summary>
                If there is a layout grid, use the domain for this row in the grid for this
                mapbox subplot .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Domain.Column">
            <summary>
                If there is a layout grid, use the domain for this column in the grid for
                this mapbox subplot .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.MapBoxLib.Layer">
            <summary>
                The Layer class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.Visible">
            <summary>
                Determines whether this layer is displayed
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.SourceType">
            <summary>
                Sets the source type for this layer, that is the type of the layer data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.Source">
            <summary>
                Sets the source data for this layer (mapbox.layer.source). When <c>sourcetype</c>
                is set to <c>geojson</c>, <c>source</c> can be a URL to a GeoJSON or a GeoJSON
                object. When <c>sourcetype</c> is set to <c>vector</c> or <c>raster</c>,
                <c>source</c> can be a URL or an array of tile URLs. When <c>sourcetype</c>
                is set to <c>image</c>, <c>source</c> can be a URL to an image.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.SourceLayer">
            <summary>
                Specifies the layer to use from a vector tile source (mapbox.layer.source-layer).
                Required for <c>vector</c> source type that supports multiple layers.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.SourceAttribution">
            <summary>
                Sets the attribution for this source.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.Type">
            <summary>
                Sets the layer type, that is the how the layer data set in <c>source</c>
                will be rendered With <c>sourcetype</c> set to <c>geojson</c>, the following
                values are allowed: <c>circle</c>, <c>line</c>, <c>fill</c> and <c>symbol</c>.
                but note that <c>line</c> and <c>fill</c> are not compatible with Point
                GeoJSON geometries. With <c>sourcetype</c> set to <c>vector</c>, the following
                values are allowed:  <c>circle</c>, <c>line</c>, <c>fill</c> and <c>symbol</c>.
                With <c>sourcetype</c> set to <c>raster</c> or <c><c>image</c></c>, only
                the <c>raster</c> value is allowed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.Coordinates">
            <summary>
                Sets the coordinates array contains [longitude, latitude] pairs for the
                image corners listed in clockwise order: top left, top right, bottom right,
                bottom left. Only has an effect for <c>image</c> <c>sourcetype</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.Below">
            <summary>
                Determines if the layer will be inserted before the layer with the specified
                ID. If omitted or set to &#39;&#39;, the layer will be inserted above every
                existing layer.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.Color">
            <summary>
                Sets the primary layer color. If <c>type</c> is <c>circle</c>, color corresponds
                to the circle color (mapbox.layer.paint.circle-color) If <c>type</c> is
                <c>line</c>, color corresponds to the line color (mapbox.layer.paint.line-color)
                If <c>type</c> is <c>fill</c>, color corresponds to the fill color (mapbox.layer.paint.fill-color)
                If <c>type</c> is <c>symbol</c>, color corresponds to the icon color (mapbox.layer.paint.icon-color)
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.Opacity">
            <summary>
                Sets the opacity of the layer. If <c>type</c> is <c>circle</c>, opacity
                corresponds to the circle opacity (mapbox.layer.paint.circle-opacity) If
                <c>type</c> is <c>line</c>, opacity corresponds to the line opacity (mapbox.layer.paint.line-opacity)
                If <c>type</c> is <c>fill</c>, opacity corresponds to the fill opacity (mapbox.layer.paint.fill-opacity)
                If <c>type</c> is <c>symbol</c>, opacity corresponds to the icon/text opacity
                (mapbox.layer.paint.text-opacity)
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.MinZoom">
            <summary>
                Sets the minimum zoom level (mapbox.layer.minzoom). At zoom levels less
                than the minzoom, the layer will be hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.MaxZoom">
            <summary>
                Sets the maximum zoom level (mapbox.layer.maxzoom). At zoom levels equal
                to or greater than the maxzoom, the layer will be hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.Circle">
            <summary>
                Gets or sets the Circle.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.Fill">
            <summary>
                Gets or sets the Fill.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.Symbol">
            <summary>
                Gets or sets the Symbol.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.Layer.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.Circle">
            <summary>
                The Circle class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.Circle.Radius">
            <summary>
                Sets the circle radius (mapbox.layer.paint.circle-radius). Has an effect
                only when <c>type</c> is set to <c>circle</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.Fill">
            <summary>
                The Fill class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.Fill.OutlineColor">
            <summary>
                Sets the fill outline color (mapbox.layer.paint.fill-outline-color). Has
                an effect only when <c>type</c> is set to <c>fill</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.Line.Width">
            <summary>
                Sets the line width (mapbox.layer.paint.line-width). Has an effect only
                when <c>type</c> is set to <c>line</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.Line.Dash">
            <summary>
                Sets the length of dashes and gaps (mapbox.layer.paint.line-dasharray).
                Has an effect only when <c>type</c> is set to <c>line</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.Line.DashSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  dash .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.SourceTypeEnum">
            <summary>
                Sets the source type for this layer, that is the type of the layer data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.Symbol">
            <summary>
                The Symbol class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.Symbol.Icon">
            <summary>
                Sets the symbol icon image (mapbox.layer.layout.icon-image). Full list:
                https://www.mapbox.com/maki-icons/
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.Symbol.IconSize">
            <summary>
                Sets the symbol icon size (mapbox.layer.layout.icon-size). Has an effect
                only when <c>type</c> is set to <c>symbol</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.Symbol.Text">
            <summary>
                Sets the symbol text (mapbox.layer.layout.text-field).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.Symbol.Placement">
            <summary>
                Sets the symbol and/or text placement (mapbox.layer.layout.symbol-placement).
                If <c>placement</c> is <c>point</c>, the label is placed where the geometry
                is located If <c>placement</c> is <c>line</c>, the label is placed along
                the line of the geometry If <c>placement</c> is <c>line-center</c>, the
                label is placed on the center of the geometry
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.Symbol.TextFont">
            <summary>
                Sets the icon text font (color=mapbox.layer.paint.text-color, size=mapbox.layer.layout.text-size).
                Has an effect only when <c>type</c> is set to <c>symbol</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.Symbol.TextPosition">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.SymbolLib.PlacementEnum">
            <summary>
                Sets the symbol and/or text placement (mapbox.layer.layout.symbol-placement).
                If <c>placement</c> is <c>point</c>, the label is placed where the geometry
                is located If <c>placement</c> is <c>line</c>, the label is placed along
                the line of the geometry If <c>placement</c> is <c>line-center</c>, the
                label is placed on the center of the geometry
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.SymbolLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.SymbolLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.SymbolLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.SymbolLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.SymbolLib.TextPositionEnum">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.MapBoxLib.LayerLib.TypeEnum">
            <summary>
                Sets the layer type, that is the how the layer data set in <c>source</c>
                will be rendered With <c>sourcetype</c> set to <c>geojson</c>, the following
                values are allowed: <c>circle</c>, <c>line</c>, <c>fill</c> and <c>symbol</c>.
                but note that <c>line</c> and <c>fill</c> are not compatible with Point
                GeoJSON geometries. With <c>sourcetype</c> set to <c>vector</c>, the following
                values are allowed:  <c>circle</c>, <c>line</c>, <c>fill</c> and <c>symbol</c>.
                With <c>sourcetype</c> set to <c>raster</c> or <c><c>image</c></c>, only
                the <c>raster</c> value is allowed.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.Margin">
            <summary>
                The Margin class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Margin.L">
            <summary>
                Sets the left margin (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Margin.R">
            <summary>
                Sets the right margin (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Margin.T">
            <summary>
                Sets the top margin (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Margin.B">
            <summary>
                Sets the bottom margin (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Margin.Pad">
            <summary>
                Sets the amount of padding (in px) between the plotting area and the axis
                lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Margin.AutoExpand">
            <summary>
                Turns on/off margin expansion computations. Legends, colorbars, updatemenus,
                sliders, axis rangeselector and rangeslider are allowed to push the margins
                by defaults.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ModeBar">
            <summary>
                The ModeBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ModeBar.Orientation">
            <summary>
                Sets the orientation of the modebar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ModeBar.BgColor">
            <summary>
                Sets the background color of the modebar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ModeBar.Color">
            <summary>
                Sets the color of the icons in the modebar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ModeBar.ActiveColor">
            <summary>
                Sets the color of the active or hovered on icons in the modebar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ModeBar.UiRevision">
            <summary>
                Controls persistence of user-driven changes related to the modebar, including
                <c>hovermode</c>, <c>dragmode</c>, and <c>showspikes</c> at both the root
                level and inside subplots. Defaults to <c>layout.uirevision</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ModeBarLib.OrientationEnum">
            <summary>
                Sets the orientation of the modebar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.NewShape">
            <summary>
                The NewShape class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.NewShape.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.NewShape.FillColor">
            <summary>
                Sets the color filling new shapes&#39; interior. Please note that if using
                a fillcolor with alpha greater than half, drag inside the active shape starts
                moving the shape underneath, otherwise a new shape could be started over.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.NewShape.FillRule">
            <summary>
                Determines the path&#39;s interior. For more info please visit https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-rule
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.NewShape.Opacity">
            <summary>
                Sets the opacity of new shapes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.NewShape.Layer">
            <summary>
                Specifies whether new shapes are drawn below or above traces.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.NewShape.DrawDirection">
            <summary>
                When <c>dragmode</c> is set to <c>drawrect</c>, <c>drawline</c> or <c>drawcircle</c>
                this limits the drag to be horizontal, vertical or diagonal. Using <c>diagonal</c>
                there is no limit e.g. in drawing lines in any direction. <c>ortho</c> limits
                the draw to be either horizontal or vertical. <c>horizontal</c> allows horizontal
                extend. <c>vertical</c> allows vertical extend.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.NewShapeLib.DrawDirectionEnum">
            <summary>
                When <c>dragmode</c> is set to <c>drawrect</c>, <c>drawline</c> or <c>drawcircle</c>
                this limits the drag to be horizontal, vertical or diagonal. Using <c>diagonal</c>
                there is no limit e.g. in drawing lines in any direction. <c>ortho</c> limits
                the draw to be either horizontal or vertical. <c>horizontal</c> allows horizontal
                extend. <c>vertical</c> allows vertical extend.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.NewShapeLib.FillRuleEnum">
            <summary>
                Determines the path&#39;s interior. For more info please visit https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-rule
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.NewShapeLib.LayerEnum">
            <summary>
                Specifies whether new shapes are drawn below or above traces.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.NewShapeLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.NewShapeLib.Line.Color">
            <summary>
                Sets the line color. By default uses either dark grey or white to increase
                contrast with background color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.NewShapeLib.Line.Width">
            <summary>
                Sets the line width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.NewShapeLib.Line.Dash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.Polar">
            <summary>
                The Polar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Polar.Domain">
            <summary>
                Gets or sets the Domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Polar.Sector">
            <summary>
                Sets angular span of this polar subplot with two angles (in degrees). Sector
                are assumed to be spanned in the counterclockwise direction with <c>0</c>
                corresponding to rightmost limit of the polar subplot.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Polar.Hole">
            <summary>
                Sets the fraction of the radius to cut out of the polar subplot.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Polar.BgColor">
            <summary>
                Set the background color of the subplot
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Polar.RadialAxis">
            <summary>
                Gets or sets the RadialAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Polar.AngularAxis">
            <summary>
                Gets or sets the AngularAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Polar.GridShape">
            <summary>
                Determines if the radial axis grid lines and angular axis line are drawn
                as <c>circular</c> sectors or as <c>linear</c> (polygon) sectors. Has an
                effect only when the angular axis has <c>type</c> <c>category</c>. Note
                that <c>radialaxis.angle</c> is snapped to the angle of the closest vertex
                when <c>gridshape</c> is <c>circular</c> (so that radial axis scale is the
                same as the data scale).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Polar.UiRevision">
            <summary>
                Controls persistence of user-driven changes in axis attributes, if not overridden
                in the individual axes. Defaults to <c>layout.uirevision</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis">
            <summary>
                The AngularAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.Visible">
            <summary>
                A single toggle to hide the axis while preserving interaction like dragging.
                Default is true when a cheater plot is present on the axis, otherwise false
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.Type">
            <summary>
                Sets the angular axis type. If <c>linear</c>, set <c>thetaunit</c> to determine
                the unit in which axis value are shown. If *category, use <c>period</c>
                to set the number of integer coordinates around polar axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.CategoryOrder">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>. Set <c>categoryorder</c>
                to &#39;total ascending&#39; or &#39;total descending&#39; if order should
                be determined by the numerical order of the values. Similarly, the order
                can be determined by the min, max, sum, mean or median of all the values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.CategoryArray">
            <summary>
                Sets the order in which categories on this axis appear. Only has an effect
                if <c>categoryorder</c> is set to <c>array</c>. Used with <c>categoryorder</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.ThetaUnit">
            <summary>
                Sets the format unit of the formatted <c>theta</c> values. Has an effect
                only when <c>angularaxis.type</c> is <c>linear</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.Period">
            <summary>
                Set the angular period. Has an effect only when <c>angularaxis.type</c>
                is <c>category</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.Direction">
            <summary>
                Sets the direction corresponding to positive angles.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.Rotation">
            <summary>
                Sets that start position (in degrees) of the angular axis By default, polar
                subplots with <c>direction</c> set to <c>counterclockwise</c> get a <c>rotation</c>
                of <c>0</c> which corresponds to due East (like what mathematicians prefer).
                In turn, polar with <c>direction</c> set to <c>clockwise</c> get a rotation
                of <c>90</c> which corresponds to due North (like on a compass),
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.HoverFormat">
            <summary>
                Sets the hover text formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.UiRevision">
            <summary>
                Controls persistence of user-driven changes in axis <c>rotation</c>. Defaults
                to <c>polar&lt;N&gt;.uirevision</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.Color">
            <summary>
                Sets default for all colors associated with this axis all at once: line,
                font, tick, and grid colors. Grid color is lightened by blending this with
                the plot background Individual pieces can override this.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.ShowLine">
            <summary>
                Determines whether or not a line bounding this axis is drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.LineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.LineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.ShowGrid">
            <summary>
                Determines whether or not grid lines are drawn. If <c>true</c>, the grid
                lines are drawn at every tick mark.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.GridColor">
            <summary>
                Sets the color of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.GridWidth">
            <summary>
                Sets the width (in px) of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.TickFont">
            <summary>
                Sets the tick font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.Layer">
            <summary>
                Sets the layer on which this axis is displayed. If &#39;above traces&#39;,
                this axis is displayed above all the subplot&#39;s traces If &#39;below
                traces&#39;, this axis is displayed below all the subplot&#39;s traces,
                but above the grid lines. Useful when used together with scatter-like traces
                with <c>cliponaxis</c> set to <c>false</c> to show markers and/or text nodes
                above this axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.CategoryArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  categoryarray .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxis.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.CategoryOrderEnum">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>. Set <c>categoryorder</c>
                to &#39;total ascending&#39; or &#39;total descending&#39; if order should
                be determined by the numerical order of the values. Similarly, the order
                can be determined by the min, max, sum, mean or median of all the values.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.DirectionEnum">
            <summary>
                Sets the direction corresponding to positive angles.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.LayerEnum">
            <summary>
                Sets the layer on which this axis is displayed. If &#39;above traces&#39;,
                this axis is displayed above all the subplot&#39;s traces If &#39;below
                traces&#39;, this axis is displayed below all the subplot&#39;s traces,
                but above the grid lines. Useful when used together with scatter-like traces
                with <c>cliponaxis</c> set to <c>false</c> to show markers and/or text nodes
                above this axis.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.ThetaUnitEnum">
            <summary>
                Sets the format unit of the formatted <c>theta</c> values. Has an effect
                only when <c>angularaxis.type</c> is <c>linear</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.AngularAxisLib.TypeEnum">
            <summary>
                Sets the angular axis type. If <c>linear</c>, set <c>thetaunit</c> to determine
                the unit in which axis value are shown. If *category, use <c>period</c>
                to set the number of integer coordinates around polar axis.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.Domain">
            <summary>
                The Domain class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.Domain.X">
            <summary>
                Sets the horizontal domain of this polar subplot (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.Domain.Y">
            <summary>
                Sets the vertical domain of this polar subplot (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.Domain.Row">
            <summary>
                If there is a layout grid, use the domain for this row in the grid for this
                polar subplot .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.Domain.Column">
            <summary>
                If there is a layout grid, use the domain for this column in the grid for
                this polar subplot .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.GridShapeEnum">
            <summary>
                Determines if the radial axis grid lines and angular axis line are drawn
                as <c>circular</c> sectors or as <c>linear</c> (polygon) sectors. Has an
                effect only when the angular axis has <c>type</c> <c>category</c>. Note
                that <c>radialaxis.angle</c> is snapped to the angle of the closest vertex
                when <c>gridshape</c> is <c>circular</c> (so that radial axis scale is the
                same as the data scale).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis">
            <summary>
                The RadialAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.Visible">
            <summary>
                A single toggle to hide the axis while preserving interaction like dragging.
                Default is true when a cheater plot is present on the axis, otherwise false
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.Type">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.AutoRange">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.RangeMode">
            <summary>
                If <c>tozero</c>`, the range extends to 0, regardless of the input data
                If <c>nonnegative</c>, the range is non-negative, regardless of the input
                data. If <c>normal</c>, the range is computed in relation to the extrema
                of the input data (same behavior as for cartesian axes).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.Range">
            <summary>
                Sets the range of this axis. If the axis <c>type</c> is <c>log</c>, then
                you must take the log of your desired range (e.g. to set the range from
                1 to 100, set the range from 0 to 2). If the axis <c>type</c> is <c>date</c>,
                it should be date strings, like date data, though Date objects and unix
                milliseconds will be accepted and converted to strings. If the axis <c>type</c>
                is <c>category</c>, it should be numbers, using the scale where each category
                is assigned a serial number from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.CategoryOrder">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>. Set <c>categoryorder</c>
                to &#39;total ascending&#39; or &#39;total descending&#39; if order should
                be determined by the numerical order of the values. Similarly, the order
                can be determined by the min, max, sum, mean or median of all the values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.CategoryArray">
            <summary>
                Sets the order in which categories on this axis appear. Only has an effect
                if <c>categoryorder</c> is set to <c>array</c>. Used with <c>categoryorder</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.Angle">
            <summary>
                Sets the angle (in degrees) from which the radial axis is drawn. Note that
                by default, radial axis line on the theta=0 line corresponds to a line pointing
                right (like what mathematicians prefer). Defaults to the first <c>polar.sector</c>
                angle.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.Side">
            <summary>
                Determines on which side of radial axis line the tick and tick labels appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.HoverFormat">
            <summary>
                Sets the hover text formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.UiRevision">
            <summary>
                Controls persistence of user-driven changes in axis <c>range</c>, <c>autorange</c>,
                <c>angle</c>, and <c>title</c> if in &#39;editable: true&#39; configuration.
                Defaults to <c>polar&lt;N&gt;.uirevision</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.Color">
            <summary>
                Sets default for all colors associated with this axis all at once: line,
                font, tick, and grid colors. Grid color is lightened by blending this with
                the plot background Individual pieces can override this.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.ShowLine">
            <summary>
                Determines whether or not a line bounding this axis is drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.LineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.LineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.ShowGrid">
            <summary>
                Determines whether or not grid lines are drawn. If <c>true</c>, the grid
                lines are drawn at every tick mark.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.GridColor">
            <summary>
                Sets the color of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.GridWidth">
            <summary>
                Sets the width (in px) of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.TickFont">
            <summary>
                Sets the tick font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.Layer">
            <summary>
                Sets the layer on which this axis is displayed. If &#39;above traces&#39;,
                this axis is displayed above all the subplot&#39;s traces If &#39;below
                traces&#39;, this axis is displayed below all the subplot&#39;s traces,
                but above the grid lines. Useful when used together with scatter-like traces
                with <c>cliponaxis</c> set to <c>false</c> to show markers and/or text nodes
                above this axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.Calendar">
            <summary>
                Sets the calendar system to use for <c>range</c> and <c>tick0</c> if this
                is a date axis. This does not set the calendar for interpreting data on
                this axis, that&#39;s specified in the trace or via the global <c>layout.calendar</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.CategoryArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  categoryarray .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxis.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.AutoRangeEnum">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.CalendarEnum">
            <summary>
                Sets the calendar system to use for <c>range</c> and <c>tick0</c> if this
                is a date axis. This does not set the calendar for interpreting data on
                this axis, that&#39;s specified in the trace or via the global <c>layout.calendar</c>
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.CategoryOrderEnum">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>. Set <c>categoryorder</c>
                to &#39;total ascending&#39; or &#39;total descending&#39; if order should
                be determined by the numerical order of the values. Similarly, the order
                can be determined by the min, max, sum, mean or median of all the values.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.LayerEnum">
            <summary>
                Sets the layer on which this axis is displayed. If &#39;above traces&#39;,
                this axis is displayed above all the subplot&#39;s traces If &#39;below
                traces&#39;, this axis is displayed below all the subplot&#39;s traces,
                but above the grid lines. Useful when used together with scatter-like traces
                with <c>cliponaxis</c> set to <c>false</c> to show markers and/or text nodes
                above this axis.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.RangeModeEnum">
            <summary>
                If <c>tozero</c>`, the range extends to 0, regardless of the input data
                If <c>nonnegative</c>, the range is non-negative, regardless of the input
                data. If <c>normal</c>, the range is computed in relation to the extrema
                of the input data (same behavior as for cartesian axes).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.SideEnum">
            <summary>
                Determines on which side of radial axis line the tick and tick labels appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.Title.Text">
            <summary>
                Sets the title of this axis. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.Title.Font">
            <summary>
                Sets this axis&#39; title font. Note that the title&#39;s font used to be
                customized by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib.TypeEnum">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.RadialAxis">
            <summary>
                The RadialAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.RadialAxis.Range">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Defines the start and end point of this radial axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.RadialAxis.Domain">
            <summary>
                Polar chart subplots are not supported yet. This key has currently no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.RadialAxis.Orientation">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Sets the orientation (an angle with respect to the origin) of the radial
                axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.RadialAxis.ShowLine">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Determines whether or not the line bounding this radial axis will be shown
                on the figure.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.RadialAxis.ShowTickLabels">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Determines whether or not the radial axis ticks will feature tick labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.RadialAxis.TickOrientation">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Sets the orientation (from the paper perspective) of the radial axis tick
                labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.RadialAxis.TickleN">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Sets the length of the tick lines on this radial axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.RadialAxis.TickColor">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Sets the color of the tick lines on this radial axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.RadialAxis.TickSuffix">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Sets the length of the tick lines on this radial axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.RadialAxis.EndPadding">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.RadialAxis.Visible">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Determines whether or not this axis will be visible.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.RadialAxisLib.TickOrientationEnum">
            <summary>
                Legacy polar charts are deprecated! Please switch to <c>polar</c> subplots.
                Sets the orientation (from the paper perspective) of the radial axis tick
                labels.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.Scene">
            <summary>
                The Scene class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Scene.BgColor">
            <summary>
                Gets or sets the BgColor.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Scene.Camera">
            <summary>
                Gets or sets the Camera.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Scene.Domain">
            <summary>
                Gets or sets the Domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Scene.AspectMode">
            <summary>
                If <c>cube</c>, this scene&#39;s axes are drawn as a cube, regardless of
                the axes&#39; ranges. If <c>data</c>, this scene&#39;s axes are drawn in
                proportion with the axes&#39; ranges. If <c>manual</c>, this scene&#39;s
                axes are drawn in proportion with the input of <c>aspectratio</c> (the default
                behavior if <c>aspectratio</c> is provided). If <c>auto</c>, this scene&#39;s
                axes are drawn using the results of <c>data</c> except when one axis is
                more than four times the size of the two others, where in that case the
                results of <c>cube</c> are used.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Scene.AspectRatio">
            <summary>
                Sets this scene&#39;s axis aspectratio.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Scene.XAxis">
            <summary>
                Gets or sets the XAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Scene.YAxis">
            <summary>
                Gets or sets the YAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Scene.ZAxis">
            <summary>
                Gets or sets the ZAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Scene.DragMode">
            <summary>
                Determines the mode of drag interactions for this scene.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Scene.HoverMode">
            <summary>
                Determines the mode of hover interactions for this scene.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Scene.UiRevision">
            <summary>
                Controls persistence of user-driven changes in camera attributes. Defaults
                to <c>layout.uirevision</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Scene.Annotations">
            <summary>
                Gets or sets the Annotations.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.Annotation">
            <summary>
                The Annotation class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.Visible">
            <summary>
                Determines whether or not this annotation is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.X">
            <summary>
                Sets the annotation&#39;s x position.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.Y">
            <summary>
                Sets the annotation&#39;s y position.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.Z">
            <summary>
                Sets the annotation&#39;s z position.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.Ax">
            <summary>
                Sets the x component of the arrow tail about the arrow head (in pixels).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.Ay">
            <summary>
                Sets the y component of the arrow tail about the arrow head (in pixels).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.XAnchor">
            <summary>
                Sets the text box&#39;s horizontal position anchor This anchor binds the
                <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c> of the
                annotation. For example, if <c>x</c> is set to 1, <c>xref</c> to <c>paper</c>
                and <c>xanchor</c> to <c>right</c> then the right-most portion of the annotation
                lines up with the right-most edge of the plotting area. If <c>auto</c>,
                the anchor is equivalent to <c>center</c> for data-referenced annotations
                or if there is an arrow, whereas for paper-referenced with no arrow, the
                anchor picked corresponds to the closest side.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.XShift">
            <summary>
                Shifts the position of the whole annotation and arrow to the right (positive)
                or left (negative) by this many pixels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.YAnchor">
            <summary>
                Sets the text box&#39;s vertical position anchor This anchor binds the <c>y</c>
                position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the annotation.
                For example, if <c>y</c> is set to 1, <c>yref</c> to <c>paper</c> and <c>yanchor</c>
                to <c>top</c> then the top-most portion of the annotation lines up with
                the top-most edge of the plotting area. If <c>auto</c>, the anchor is equivalent
                to <c>middle</c> for data-referenced annotations or if there is an arrow,
                whereas for paper-referenced with no arrow, the anchor picked corresponds
                to the closest side.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.YShift">
            <summary>
                Shifts the position of the whole annotation and arrow up (positive) or down
                (negative) by this many pixels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.Text">
            <summary>
                Sets the text associated with this annotation. Plotly uses a subset of HTML
                tags to do things like newline (&lt;br&gt;), bold (&lt;b&gt;&lt;/b&gt;),
                italics (&lt;i&gt;&lt;/i&gt;), hyperlinks (&lt;a href=<c>...</c>&gt;&lt;/a&gt;).
                Tags &lt;em&gt;, &lt;sup&gt;, &lt;sub&gt; &lt;span&gt; are also supported.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.TextAngle">
            <summary>
                Sets the angle at which the <c>text</c> is drawn with respect to the horizontal.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.Font">
            <summary>
                Sets the annotation text font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.Width">
            <summary>
                Sets an explicit width for the text box. null (default) lets the text set
                the box width. Wider text will be clipped. There is no automatic wrapping;
                use &lt;br&gt; to start a new line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.Height">
            <summary>
                Sets an explicit height for the text box. null (default) lets the text set
                the box height. Taller text will be clipped.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.Opacity">
            <summary>
                Sets the opacity of the annotation (text + arrow).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.Align">
            <summary>
                Sets the horizontal alignment of the <c>text</c> within the box. Has an
                effect only if <c>text</c> spans two or more lines (i.e. <c>text</c> contains
                one or more &lt;br&gt; HTML tags) or if an explicit width is set to override
                the text width.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.VAlign">
            <summary>
                Sets the vertical alignment of the <c>text</c> within the box. Has an effect
                only if an explicit height is set to override the text height.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.BgColor">
            <summary>
                Sets the background color of the annotation.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.BorderColor">
            <summary>
                Sets the color of the border enclosing the annotation <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.BorderPad">
            <summary>
                Sets the padding (in px) between the <c>text</c> and the enclosing border.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.BorderWidth">
            <summary>
                Sets the width (in px) of the border enclosing the annotation <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.ShowArrow">
            <summary>
                Determines whether or not the annotation is drawn with an arrow. If <c>true</c>,
                <c>text</c> is placed near the arrow&#39;s tail. If <c>false</c>, <c>text</c>
                lines up with the <c>x</c> and <c>y</c> provided.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.ArrowColor">
            <summary>
                Sets the color of the annotation arrow.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.Arrowhead">
            <summary>
                Sets the end annotation arrow head style.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.StartArrowhead">
            <summary>
                Sets the start annotation arrow head style.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.ArrowSide">
            <summary>
                Sets the annotation arrow head position.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.ArrowSize">
            <summary>
                Sets the size of the end annotation arrow head, relative to <c>arrowwidth</c>.
                A value of 1 (default) gives a head about 3x as wide as the line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.StartArrowSize">
            <summary>
                Sets the size of the start annotation arrow head, relative to <c>arrowwidth</c>.
                A value of 1 (default) gives a head about 3x as wide as the line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.ArrowWidth">
            <summary>
                Sets the width (in px) of annotation arrow line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.Standoff">
            <summary>
                Sets a distance, in pixels, to move the end arrowhead away from the position
                it is pointing at, for example to point at the edge of a marker independent
                of zoom. Note that this shortens the arrow from the <c>ax</c> / <c>ay</c>
                vector, in contrast to <c>xshift</c> / <c>yshift</c> which moves everything
                by this amount.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.StartStandoff">
            <summary>
                Sets a distance, in pixels, to move the start arrowhead away from the position
                it is pointing at, for example to point at the edge of a marker independent
                of zoom. Note that this shortens the arrow from the <c>ax</c> / <c>ay</c>
                vector, in contrast to <c>xshift</c> / <c>yshift</c> which moves everything
                by this amount.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.HoverText">
            <summary>
                Sets text to appear when hovering over this annotation. If omitted or blank,
                no hover label will appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.CaptureEvents">
            <summary>
                Determines whether the annotation text box captures mouse move and click
                events, or allows those events to pass through to data points in the plot
                that may be behind the annotation. By default <c>captureevents</c> is <c>false</c>
                unless <c>hovertext</c> is provided. If you use the event <c>plotly_clickannotation</c>
                without <c>hovertext</c> you must explicitly enable <c>captureevents</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Annotation.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the <c>text</c> within the box. Has an
                effect only if <c>text</c> spans two or more lines (i.e. <c>text</c> contains
                one or more &lt;br&gt; HTML tags) or if an explicit width is set to override
                the text width.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.ArrowSideFlag">
            <summary>
                Sets the annotation arrow head position.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover label. By default uses the annotation&#39;s
                <c>bgcolor</c> made opaque, or white if it was transparent.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover label. By default uses either dark grey
                or white, for maximum contrast with <c>hoverlabel.bgcolor</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.HoverLabel.Font">
            <summary>
                Sets the hover label text font. By default uses the global hover font and
                size, with color from <c>hoverlabel.bordercolor</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.VAlignEnum">
            <summary>
                Sets the vertical alignment of the <c>text</c> within the box. Has an effect
                only if an explicit height is set to override the text height.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.XAnchorEnum">
            <summary>
                Sets the text box&#39;s horizontal position anchor This anchor binds the
                <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c> of the
                annotation. For example, if <c>x</c> is set to 1, <c>xref</c> to <c>paper</c>
                and <c>xanchor</c> to <c>right</c> then the right-most portion of the annotation
                lines up with the right-most edge of the plotting area. If <c>auto</c>,
                the anchor is equivalent to <c>center</c> for data-referenced annotations
                or if there is an arrow, whereas for paper-referenced with no arrow, the
                anchor picked corresponds to the closest side.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.AnnotationLib.YAnchorEnum">
            <summary>
                Sets the text box&#39;s vertical position anchor This anchor binds the <c>y</c>
                position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the annotation.
                For example, if <c>y</c> is set to 1, <c>yref</c> to <c>paper</c> and <c>yanchor</c>
                to <c>top</c> then the top-most portion of the annotation lines up with
                the top-most edge of the plotting area. If <c>auto</c>, the anchor is equivalent
                to <c>middle</c> for data-referenced annotations or if there is an arrow,
                whereas for paper-referenced with no arrow, the anchor picked corresponds
                to the closest side.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.AspectModeEnum">
            <summary>
                If <c>cube</c>, this scene&#39;s axes are drawn as a cube, regardless of
                the axes&#39; ranges. If <c>data</c>, this scene&#39;s axes are drawn in
                proportion with the axes&#39; ranges. If <c>manual</c>, this scene&#39;s
                axes are drawn in proportion with the input of <c>aspectratio</c> (the default
                behavior if <c>aspectratio</c> is provided). If <c>auto</c>, this scene&#39;s
                axes are drawn using the results of <c>data</c> except when one axis is
                more than four times the size of the two others, where in that case the
                results of <c>cube</c> are used.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.AspectRatio">
            <summary>
                The AspectRatio class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.AspectRatio.X">
            <summary>
                Gets or sets the X.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.AspectRatio.Y">
            <summary>
                Gets or sets the Y.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.AspectRatio.Z">
            <summary>
                Gets or sets the Z.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.Camera">
            <summary>
                The Camera class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Camera.Up">
            <summary>
                Sets the (x,y,z) components of the <c>up</c> camera vector. This vector
                determines the up direction of this scene with respect to the page. The
                default is &#39;{x: 0, y: 0, z: 1}&#39; which means that the z axis points
                up.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Camera.Center">
            <summary>
                Sets the (x,y,z) components of the <c>center</c> camera vector This vector
                determines the translation (x,y,z) space about the center of this scene.
                By default, there is no such translation.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Camera.Eye">
            <summary>
                Sets the (x,y,z) components of the <c>eye</c> camera vector. This vector
                determines the view point about the origin of this scene.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Camera.Projection">
            <summary>
                Gets or sets the Projection.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.CameraLib.Center">
            <summary>
                The Center class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.CameraLib.Center.X">
            <summary>
                Gets or sets the X.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.CameraLib.Center.Y">
            <summary>
                Gets or sets the Y.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.CameraLib.Center.Z">
            <summary>
                Gets or sets the Z.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.CameraLib.Eye">
            <summary>
                The Eye class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.CameraLib.Eye.X">
            <summary>
                Gets or sets the X.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.CameraLib.Eye.Y">
            <summary>
                Gets or sets the Y.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.CameraLib.Eye.Z">
            <summary>
                Gets or sets the Z.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.CameraLib.Projection">
            <summary>
                The Projection class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.CameraLib.Projection.Type">
            <summary>
                Sets the projection type. The projection type could be either <c>perspective</c>
                or <c>orthographic</c>. The default is <c>perspective</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.CameraLib.ProjectionLib.TypeEnum">
            <summary>
                Sets the projection type. The projection type could be either <c>perspective</c>
                or <c>orthographic</c>. The default is <c>perspective</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.CameraLib.Up">
            <summary>
                The Up class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.CameraLib.Up.X">
            <summary>
                Gets or sets the X.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.CameraLib.Up.Y">
            <summary>
                Gets or sets the Y.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.CameraLib.Up.Z">
            <summary>
                Gets or sets the Z.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.Domain">
            <summary>
                The Domain class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Domain.X">
            <summary>
                Sets the horizontal domain of this scene subplot (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Domain.Y">
            <summary>
                Sets the vertical domain of this scene subplot (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Domain.Row">
            <summary>
                If there is a layout grid, use the domain for this row in the grid for this
                scene subplot .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.Domain.Column">
            <summary>
                If there is a layout grid, use the domain for this column in the grid for
                this scene subplot .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.DragModeEnum">
            <summary>
                Determines the mode of drag interactions for this scene.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.HoverModeEnum">
            <summary>
                Determines the mode of hover interactions for this scene.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxis">
            <summary>
                The XAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.Visible">
            <summary>
                A single toggle to hide the axis while preserving interaction like dragging.
                Default is true when a cheater plot is present on the axis, otherwise false
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.ShowSpikes">
            <summary>
                Sets whether or not spikes starting from data points to this axis&#39; wall
                are shown on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.SpikeSides">
            <summary>
                Sets whether or not spikes extending from the projection data points to
                this axis&#39; wall boundaries are shown on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.SpikeThickness">
            <summary>
                Sets the thickness (in px) of the spikes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.SpikeColor">
            <summary>
                Sets the color of the spikes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.ShowBackground">
            <summary>
                Sets whether or not this axis&#39; wall has a background color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.BackgroundColor">
            <summary>
                Sets the background color of this axis&#39; wall.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.ShowAxesLabels">
            <summary>
                Sets whether or not this axis is labeled
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.Color">
            <summary>
                Sets default for all colors associated with this axis all at once: line,
                font, tick, and grid colors. Grid color is lightened by blending this with
                the plot background Individual pieces can override this.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.CategoryOrder">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>. Set <c>categoryorder</c>
                to &#39;total ascending&#39; or &#39;total descending&#39; if order should
                be determined by the numerical order of the values. Similarly, the order
                can be determined by the min, max, sum, mean or median of all the values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.CategoryArray">
            <summary>
                Sets the order in which categories on this axis appear. Only has an effect
                if <c>categoryorder</c> is set to <c>array</c>. Used with <c>categoryorder</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.Type">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.AutoRange">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.RangeMode">
            <summary>
                If <c>normal</c>, the range is computed in relation to the extrema of the
                input data. If <c>tozero</c>`, the range extends to 0, regardless of the
                input data If <c>nonnegative</c>, the range is non-negative, regardless
                of the input data. Applies only to linear axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.Range">
            <summary>
                Sets the range of this axis. If the axis <c>type</c> is <c>log</c>, then
                you must take the log of your desired range (e.g. to set the range from
                1 to 100, set the range from 0 to 2). If the axis <c>type</c> is <c>date</c>,
                it should be date strings, like date data, though Date objects and unix
                milliseconds will be accepted and converted to strings. If the axis <c>type</c>
                is <c>category</c>, it should be numbers, using the scale where each category
                is assigned a serial number from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.Mirror">
            <summary>
                Determines if the axis lines or/and ticks are mirrored to the opposite side
                of the plotting area. If <c>true</c>, the axis lines are mirrored. If <c>ticks</c>,
                the axis lines and ticks are mirrored. If <c>false</c>, mirroring is disable.
                If <c>all</c>, axis lines are mirrored on all shared-axes subplots. If <c>allticks</c>,
                axis lines and ticks are mirrored on all shared-axes subplots.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.TickFont">
            <summary>
                Sets the tick font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.HoverFormat">
            <summary>
                Sets the hover text formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.ShowLine">
            <summary>
                Determines whether or not a line bounding this axis is drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.LineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.LineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.ShowGrid">
            <summary>
                Determines whether or not grid lines are drawn. If <c>true</c>, the grid
                lines are drawn at every tick mark.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.GridColor">
            <summary>
                Sets the color of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.GridWidth">
            <summary>
                Sets the width (in px) of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.ZeroLine">
            <summary>
                Determines whether or not a line is drawn at along the 0 value of this axis.
                If <c>true</c>, the zero line is drawn on top of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.ZeroLineColor">
            <summary>
                Sets the line color of the zero line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.ZeroLineWidth">
            <summary>
                Sets the width (in px) of the zero line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.Calendar">
            <summary>
                Sets the calendar system to use for <c>range</c> and <c>tick0</c> if this
                is a date axis. This does not set the calendar for interpreting data on
                this axis, that&#39;s specified in the trace or via the global <c>layout.calendar</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.CategoryArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  categoryarray .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxis.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.AutoRangeEnum">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.CalendarEnum">
            <summary>
                Sets the calendar system to use for <c>range</c> and <c>tick0</c> if this
                is a date axis. This does not set the calendar for interpreting data on
                this axis, that&#39;s specified in the trace or via the global <c>layout.calendar</c>
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.CategoryOrderEnum">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>. Set <c>categoryorder</c>
                to &#39;total ascending&#39; or &#39;total descending&#39; if order should
                be determined by the numerical order of the values. Similarly, the order
                can be determined by the min, max, sum, mean or median of all the values.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.MirrorEnum">
            <summary>
                Determines if the axis lines or/and ticks are mirrored to the opposite side
                of the plotting area. If <c>true</c>, the axis lines are mirrored. If <c>ticks</c>,
                the axis lines and ticks are mirrored. If <c>false</c>, mirroring is disable.
                If <c>all</c>, axis lines are mirrored on all shared-axes subplots. If <c>allticks</c>,
                axis lines and ticks are mirrored on all shared-axes subplots.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.RangeModeEnum">
            <summary>
                If <c>normal</c>, the range is computed in relation to the extrema of the
                input data. If <c>tozero</c>`, the range extends to 0, regardless of the
                input data If <c>nonnegative</c>, the range is non-negative, regardless
                of the input data. Applies only to linear axes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.Title.Text">
            <summary>
                Sets the title of this axis. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.Title.Font">
            <summary>
                Sets this axis&#39; title font. Note that the title&#39;s font used to be
                customized by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.XAxisLib.TypeEnum">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxis">
            <summary>
                The YAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.Visible">
            <summary>
                A single toggle to hide the axis while preserving interaction like dragging.
                Default is true when a cheater plot is present on the axis, otherwise false
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.ShowSpikes">
            <summary>
                Sets whether or not spikes starting from data points to this axis&#39; wall
                are shown on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.SpikeSides">
            <summary>
                Sets whether or not spikes extending from the projection data points to
                this axis&#39; wall boundaries are shown on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.SpikeThickness">
            <summary>
                Sets the thickness (in px) of the spikes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.SpikeColor">
            <summary>
                Sets the color of the spikes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.ShowBackground">
            <summary>
                Sets whether or not this axis&#39; wall has a background color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.BackgroundColor">
            <summary>
                Sets the background color of this axis&#39; wall.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.ShowAxesLabels">
            <summary>
                Sets whether or not this axis is labeled
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.Color">
            <summary>
                Sets default for all colors associated with this axis all at once: line,
                font, tick, and grid colors. Grid color is lightened by blending this with
                the plot background Individual pieces can override this.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.CategoryOrder">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>. Set <c>categoryorder</c>
                to &#39;total ascending&#39; or &#39;total descending&#39; if order should
                be determined by the numerical order of the values. Similarly, the order
                can be determined by the min, max, sum, mean or median of all the values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.CategoryArray">
            <summary>
                Sets the order in which categories on this axis appear. Only has an effect
                if <c>categoryorder</c> is set to <c>array</c>. Used with <c>categoryorder</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.Type">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.AutoRange">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.RangeMode">
            <summary>
                If <c>normal</c>, the range is computed in relation to the extrema of the
                input data. If <c>tozero</c>`, the range extends to 0, regardless of the
                input data If <c>nonnegative</c>, the range is non-negative, regardless
                of the input data. Applies only to linear axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.Range">
            <summary>
                Sets the range of this axis. If the axis <c>type</c> is <c>log</c>, then
                you must take the log of your desired range (e.g. to set the range from
                1 to 100, set the range from 0 to 2). If the axis <c>type</c> is <c>date</c>,
                it should be date strings, like date data, though Date objects and unix
                milliseconds will be accepted and converted to strings. If the axis <c>type</c>
                is <c>category</c>, it should be numbers, using the scale where each category
                is assigned a serial number from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.Mirror">
            <summary>
                Determines if the axis lines or/and ticks are mirrored to the opposite side
                of the plotting area. If <c>true</c>, the axis lines are mirrored. If <c>ticks</c>,
                the axis lines and ticks are mirrored. If <c>false</c>, mirroring is disable.
                If <c>all</c>, axis lines are mirrored on all shared-axes subplots. If <c>allticks</c>,
                axis lines and ticks are mirrored on all shared-axes subplots.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.TickFont">
            <summary>
                Sets the tick font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.HoverFormat">
            <summary>
                Sets the hover text formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.ShowLine">
            <summary>
                Determines whether or not a line bounding this axis is drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.LineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.LineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.ShowGrid">
            <summary>
                Determines whether or not grid lines are drawn. If <c>true</c>, the grid
                lines are drawn at every tick mark.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.GridColor">
            <summary>
                Sets the color of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.GridWidth">
            <summary>
                Sets the width (in px) of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.ZeroLine">
            <summary>
                Determines whether or not a line is drawn at along the 0 value of this axis.
                If <c>true</c>, the zero line is drawn on top of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.ZeroLineColor">
            <summary>
                Sets the line color of the zero line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.ZeroLineWidth">
            <summary>
                Sets the width (in px) of the zero line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.Calendar">
            <summary>
                Sets the calendar system to use for <c>range</c> and <c>tick0</c> if this
                is a date axis. This does not set the calendar for interpreting data on
                this axis, that&#39;s specified in the trace or via the global <c>layout.calendar</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.CategoryArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  categoryarray .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxis.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.AutoRangeEnum">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.CalendarEnum">
            <summary>
                Sets the calendar system to use for <c>range</c> and <c>tick0</c> if this
                is a date axis. This does not set the calendar for interpreting data on
                this axis, that&#39;s specified in the trace or via the global <c>layout.calendar</c>
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.CategoryOrderEnum">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>. Set <c>categoryorder</c>
                to &#39;total ascending&#39; or &#39;total descending&#39; if order should
                be determined by the numerical order of the values. Similarly, the order
                can be determined by the min, max, sum, mean or median of all the values.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.MirrorEnum">
            <summary>
                Determines if the axis lines or/and ticks are mirrored to the opposite side
                of the plotting area. If <c>true</c>, the axis lines are mirrored. If <c>ticks</c>,
                the axis lines and ticks are mirrored. If <c>false</c>, mirroring is disable.
                If <c>all</c>, axis lines are mirrored on all shared-axes subplots. If <c>allticks</c>,
                axis lines and ticks are mirrored on all shared-axes subplots.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.RangeModeEnum">
            <summary>
                If <c>normal</c>, the range is computed in relation to the extrema of the
                input data. If <c>tozero</c>`, the range extends to 0, regardless of the
                input data If <c>nonnegative</c>, the range is non-negative, regardless
                of the input data. Applies only to linear axes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.Title.Text">
            <summary>
                Sets the title of this axis. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.Title.Font">
            <summary>
                Sets this axis&#39; title font. Note that the title&#39;s font used to be
                customized by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.YAxisLib.TypeEnum">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxis">
            <summary>
                The ZAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.Visible">
            <summary>
                A single toggle to hide the axis while preserving interaction like dragging.
                Default is true when a cheater plot is present on the axis, otherwise false
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.ShowSpikes">
            <summary>
                Sets whether or not spikes starting from data points to this axis&#39; wall
                are shown on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.SpikeSides">
            <summary>
                Sets whether or not spikes extending from the projection data points to
                this axis&#39; wall boundaries are shown on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.SpikeThickness">
            <summary>
                Sets the thickness (in px) of the spikes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.SpikeColor">
            <summary>
                Sets the color of the spikes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.ShowBackground">
            <summary>
                Sets whether or not this axis&#39; wall has a background color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.BackgroundColor">
            <summary>
                Sets the background color of this axis&#39; wall.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.ShowAxesLabels">
            <summary>
                Sets whether or not this axis is labeled
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.Color">
            <summary>
                Sets default for all colors associated with this axis all at once: line,
                font, tick, and grid colors. Grid color is lightened by blending this with
                the plot background Individual pieces can override this.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.CategoryOrder">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>. Set <c>categoryorder</c>
                to &#39;total ascending&#39; or &#39;total descending&#39; if order should
                be determined by the numerical order of the values. Similarly, the order
                can be determined by the min, max, sum, mean or median of all the values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.CategoryArray">
            <summary>
                Sets the order in which categories on this axis appear. Only has an effect
                if <c>categoryorder</c> is set to <c>array</c>. Used with <c>categoryorder</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.Type">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.AutoRange">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.RangeMode">
            <summary>
                If <c>normal</c>, the range is computed in relation to the extrema of the
                input data. If <c>tozero</c>`, the range extends to 0, regardless of the
                input data If <c>nonnegative</c>, the range is non-negative, regardless
                of the input data. Applies only to linear axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.Range">
            <summary>
                Sets the range of this axis. If the axis <c>type</c> is <c>log</c>, then
                you must take the log of your desired range (e.g. to set the range from
                1 to 100, set the range from 0 to 2). If the axis <c>type</c> is <c>date</c>,
                it should be date strings, like date data, though Date objects and unix
                milliseconds will be accepted and converted to strings. If the axis <c>type</c>
                is <c>category</c>, it should be numbers, using the scale where each category
                is assigned a serial number from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.Mirror">
            <summary>
                Determines if the axis lines or/and ticks are mirrored to the opposite side
                of the plotting area. If <c>true</c>, the axis lines are mirrored. If <c>ticks</c>,
                the axis lines and ticks are mirrored. If <c>false</c>, mirroring is disable.
                If <c>all</c>, axis lines are mirrored on all shared-axes subplots. If <c>allticks</c>,
                axis lines and ticks are mirrored on all shared-axes subplots.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.TickFont">
            <summary>
                Sets the tick font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.HoverFormat">
            <summary>
                Sets the hover text formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.ShowLine">
            <summary>
                Determines whether or not a line bounding this axis is drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.LineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.LineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.ShowGrid">
            <summary>
                Determines whether or not grid lines are drawn. If <c>true</c>, the grid
                lines are drawn at every tick mark.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.GridColor">
            <summary>
                Sets the color of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.GridWidth">
            <summary>
                Sets the width (in px) of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.ZeroLine">
            <summary>
                Determines whether or not a line is drawn at along the 0 value of this axis.
                If <c>true</c>, the zero line is drawn on top of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.ZeroLineColor">
            <summary>
                Sets the line color of the zero line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.ZeroLineWidth">
            <summary>
                Sets the width (in px) of the zero line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.Calendar">
            <summary>
                Sets the calendar system to use for <c>range</c> and <c>tick0</c> if this
                is a date axis. This does not set the calendar for interpreting data on
                this axis, that&#39;s specified in the trace or via the global <c>layout.calendar</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.CategoryArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  categoryarray .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxis.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.AutoRangeEnum">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.CalendarEnum">
            <summary>
                Sets the calendar system to use for <c>range</c> and <c>tick0</c> if this
                is a date axis. This does not set the calendar for interpreting data on
                this axis, that&#39;s specified in the trace or via the global <c>layout.calendar</c>
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.CategoryOrderEnum">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>. Set <c>categoryorder</c>
                to &#39;total ascending&#39; or &#39;total descending&#39; if order should
                be determined by the numerical order of the values. Similarly, the order
                can be determined by the min, max, sum, mean or median of all the values.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.MirrorEnum">
            <summary>
                Determines if the axis lines or/and ticks are mirrored to the opposite side
                of the plotting area. If <c>true</c>, the axis lines are mirrored. If <c>ticks</c>,
                the axis lines and ticks are mirrored. If <c>false</c>, mirroring is disable.
                If <c>all</c>, axis lines are mirrored on all shared-axes subplots. If <c>allticks</c>,
                axis lines and ticks are mirrored on all shared-axes subplots.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.RangeModeEnum">
            <summary>
                If <c>normal</c>, the range is computed in relation to the extrema of the
                input data. If <c>tozero</c>`, the range extends to 0, regardless of the
                input data If <c>nonnegative</c>, the range is non-negative, regardless
                of the input data. Applies only to linear axes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.Title.Text">
            <summary>
                Sets the title of this axis. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.Title.Font">
            <summary>
                Sets this axis&#39; title font. Note that the title&#39;s font used to be
                customized by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SceneLib.ZAxisLib.TypeEnum">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SelectDirectionEnum">
            <summary>
                When <c>dragmode</c> is set to <c>select</c>, this limits the selection
                of the drag to horizontal, vertical or diagonal. <c>h</c> only allows horizontal
                selection, <c>v</c> only vertical, <c>d</c> only diagonal and <c>any</c>
                sets no limit.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.Shape">
            <summary>
                The Shape class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.Visible">
            <summary>
                Determines whether or not this shape is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.Type">
            <summary>
                Specifies the shape type to be drawn. If <c>line</c>, a line is drawn from
                (<c>x0</c>,<c>y0</c>) to (<c>x1</c>,<c>y1</c>) with respect to the axes&#39;
                sizing mode. If <c>circle</c>, a circle is drawn from ((<c>x0</c>+<c>x1</c>)/2,
                (<c>y0</c>+<c>y1</c>)/2)) with radius (|(<c>x0</c>+<c>x1</c>)/2 - <c>x0</c>|,
                |(<c>y0</c>+<c>y1</c>)/2 -<c>y0</c>)|) with respect to the axes&#39; sizing
                mode. If <c>rect</c>, a rectangle is drawn linking (<c>x0</c>,<c>y0</c>),
                (<c>x1</c>,<c>y0</c>), (<c>x1</c>,<c>y1</c>), (<c>x0</c>,<c>y1</c>), (<c>x0</c>,<c>y0</c>)
                with respect to the axes&#39; sizing mode. If <c>path</c>, draw a custom
                SVG path using <c>path</c>. with respect to the axes&#39; sizing mode.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.Layer">
            <summary>
                Specifies whether shapes are drawn below or above traces.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.XRef">
            <summary>
                Sets the shape&#39;s x coordinate axis. If set to an x axis id (e.g. <c>x</c>
                or <c>x2</c>), the <c>x</c> position refers to an x coordinate. If set to
                <c>paper</c>, the <c>x</c> position refers to the distance from the left
                side of the plotting area in normalized coordinates where <c>0</c> (<c>1</c>)
                corresponds to the left (right) side. If the axis <c>type</c> is <c>log</c>,
                then you must take the log of your desired range. If the axis <c>type</c>
                is <c>date</c>, then you must convert the date to unix time in milliseconds.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.XSizeMode">
            <summary>
                Sets the shapes&#39;s sizing mode along the x axis. If set to <c>scaled</c>,
                <c>x0</c>, <c>x1</c> and x coordinates within <c>path</c> refer to data
                values on the x axis or a fraction of the plot area&#39;s width (<c>xref</c>
                set to <c>paper</c>). If set to <c>pixel</c>, <c>xanchor</c> specifies the
                x position in terms of data or plot fraction but <c>x0</c>, <c>x1</c> and
                x coordinates within <c>path</c> are pixels relative to <c>xanchor</c>.
                This way, the shape can have a fixed width while maintaining a position
                relative to data or plot fraction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.XAnchor">
            <summary>
                Only relevant in conjunction with <c>xsizemode</c> set to <c>pixel</c>.
                Specifies the anchor point on the x axis to which <c>x0</c>, <c>x1</c> and
                x coordinates within <c>path</c> are relative to. E.g. useful to attach
                a pixel sized shape to a certain data value. No effect when <c>xsizemode</c>
                not set to <c>pixel</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.X0">
            <summary>
                Sets the shape&#39;s starting x position. See <c>type</c> and <c>xsizemode</c>
                for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.X1">
            <summary>
                Sets the shape&#39;s end x position. See <c>type</c> and <c>xsizemode</c>
                for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.YRef">
            <summary>
                Sets the annotation&#39;s y coordinate axis. If set to an y axis id (e.g.
                <c>y</c> or <c>y2</c>), the <c>y</c> position refers to an y coordinate
                If set to <c>paper</c>, the <c>y</c> position refers to the distance from
                the bottom of the plotting area in normalized coordinates where <c>0</c>
                (<c>1</c>) corresponds to the bottom (top).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.YSizeMode">
            <summary>
                Sets the shapes&#39;s sizing mode along the y axis. If set to <c>scaled</c>,
                <c>y0</c>, <c>y1</c> and y coordinates within <c>path</c> refer to data
                values on the y axis or a fraction of the plot area&#39;s height (<c>yref</c>
                set to <c>paper</c>). If set to <c>pixel</c>, <c>yanchor</c> specifies the
                y position in terms of data or plot fraction but <c>y0</c>, <c>y1</c> and
                y coordinates within <c>path</c> are pixels relative to <c>yanchor</c>.
                This way, the shape can have a fixed height while maintaining a position
                relative to data or plot fraction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.YAnchor">
            <summary>
                Only relevant in conjunction with <c>ysizemode</c> set to <c>pixel</c>.
                Specifies the anchor point on the y axis to which <c>y0</c>, <c>y1</c> and
                y coordinates within <c>path</c> are relative to. E.g. useful to attach
                a pixel sized shape to a certain data value. No effect when <c>ysizemode</c>
                not set to <c>pixel</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.Y0">
            <summary>
                Sets the shape&#39;s starting y position. See <c>type</c> and <c>ysizemode</c>
                for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.Y1">
            <summary>
                Sets the shape&#39;s end y position. See <c>type</c> and <c>ysizemode</c>
                for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.Path">
            <summary>
                For <c>type</c> <c>path</c> - a valid SVG path with the pixel values replaced
                by data values in <c>xsizemode</c>/<c>ysizemode</c> being <c>scaled</c>
                and taken unmodified as pixels relative to <c>xanchor</c> and <c>yanchor</c>
                in case of <c>pixel</c> size mode. There are a few restrictions / quirks
                only absolute instructions, not relative. So the allowed segments are: M,
                L, H, V, Q, C, T, S, and Z arcs (A) are not allowed because radius rx and
                ry are relative. In the future we could consider supporting relative commands,
                but we would have to decide on how to handle date and log axes. Note that
                even as is, Q and C Bezier paths that are smooth on linear axes may not
                be smooth on log, and vice versa. no chained <c>polybezier</c> commands
                - specify the segment type for each one. On category axes, values are numbers
                scaled to the serial numbers of categories because using the categories
                themselves there would be no way to describe fractional positions On data
                axes: because space and T are both normal components of path strings, we
                can&#39;t use either to separate date from time parts. Therefore we&#39;ll
                use underscore for this purpose: 2015-02-21_13:45:56.789
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.Opacity">
            <summary>
                Sets the opacity of the shape.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.FillColor">
            <summary>
                Sets the color filling the shape&#39;s interior. Only applies to closed
                shapes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.FillRule">
            <summary>
                Determines which regions of complex paths constitute the interior. For more
                info please visit https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-rule
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.Editable">
            <summary>
                Determines whether the shape could be activated for edit or not. Has no
                effect when the older editable shapes mode is enabled via <c>config.editable</c>
                or <c>config.edits.shapePosition</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Shape.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ShapeLib.FillRuleEnum">
            <summary>
                Determines which regions of complex paths constitute the interior. For more
                info please visit https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-rule
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ShapeLib.LayerEnum">
            <summary>
                Specifies whether shapes are drawn below or above traces.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ShapeLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ShapeLib.Line.Color">
            <summary>
                Sets the line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ShapeLib.Line.Width">
            <summary>
                Sets the line width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.ShapeLib.Line.Dash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ShapeLib.TypeEnum">
            <summary>
                Specifies the shape type to be drawn. If <c>line</c>, a line is drawn from
                (<c>x0</c>,<c>y0</c>) to (<c>x1</c>,<c>y1</c>) with respect to the axes&#39;
                sizing mode. If <c>circle</c>, a circle is drawn from ((<c>x0</c>+<c>x1</c>)/2,
                (<c>y0</c>+<c>y1</c>)/2)) with radius (|(<c>x0</c>+<c>x1</c>)/2 - <c>x0</c>|,
                |(<c>y0</c>+<c>y1</c>)/2 -<c>y0</c>)|) with respect to the axes&#39; sizing
                mode. If <c>rect</c>, a rectangle is drawn linking (<c>x0</c>,<c>y0</c>),
                (<c>x1</c>,<c>y0</c>), (<c>x1</c>,<c>y1</c>), (<c>x0</c>,<c>y1</c>), (<c>x0</c>,<c>y0</c>)
                with respect to the axes&#39; sizing mode. If <c>path</c>, draw a custom
                SVG path using <c>path</c>. with respect to the axes&#39; sizing mode.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ShapeLib.XSizeModeEnum">
            <summary>
                Sets the shapes&#39;s sizing mode along the x axis. If set to <c>scaled</c>,
                <c>x0</c>, <c>x1</c> and x coordinates within <c>path</c> refer to data
                values on the x axis or a fraction of the plot area&#39;s width (<c>xref</c>
                set to <c>paper</c>). If set to <c>pixel</c>, <c>xanchor</c> specifies the
                x position in terms of data or plot fraction but <c>x0</c>, <c>x1</c> and
                x coordinates within <c>path</c> are pixels relative to <c>xanchor</c>.
                This way, the shape can have a fixed width while maintaining a position
                relative to data or plot fraction.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ShapeLib.YSizeModeEnum">
            <summary>
                Sets the shapes&#39;s sizing mode along the y axis. If set to <c>scaled</c>,
                <c>y0</c>, <c>y1</c> and y coordinates within <c>path</c> refer to data
                values on the y axis or a fraction of the plot area&#39;s height (<c>yref</c>
                set to <c>paper</c>). If set to <c>pixel</c>, <c>yanchor</c> specifies the
                y position in terms of data or plot fraction but <c>y0</c>, <c>y1</c> and
                y coordinates within <c>path</c> are pixels relative to <c>yanchor</c>.
                This way, the shape can have a fixed height while maintaining a position
                relative to data or plot fraction.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.Slider">
            <summary>
                The Slider class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.Visible">
            <summary>
                Determines whether or not the slider is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.Active">
            <summary>
                Determines which button (by index starting from 0) is considered active.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.Steps">
            <summary>
                Gets or sets the Steps.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.LenMode">
            <summary>
                Determines whether this slider length is set in units of plot <c>fraction</c>
                or in *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.Len">
            <summary>
                Sets the length of the slider This measure excludes the padding of both
                ends. That is, the slider&#39;s length is this length minus the padding
                on both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.X">
            <summary>
                Sets the x position (in normalized coordinates) of the slider.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.Pad">
            <summary>
                Set the padding of the slider component along each side.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.XAnchor">
            <summary>
                Sets the slider&#39;s horizontal position anchor. This anchor binds the
                <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c> of the
                range selector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.Y">
            <summary>
                Sets the y position (in normalized coordinates) of the slider.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.YAnchor">
            <summary>
                Sets the slider&#39;s vertical position anchor This anchor binds the <c>y</c>
                position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the range
                selector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.Transition">
            <summary>
                Gets or sets the Transition.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.CurrentValue">
            <summary>
                Gets or sets the CurrentValue.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.Font">
            <summary>
                Sets the font of the slider step labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.ActiveBgColor">
            <summary>
                Sets the background color of the slider grip while dragging.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.BgColor">
            <summary>
                Sets the background color of the slider.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.BorderColor">
            <summary>
                Sets the color of the border enclosing the slider.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.BorderWidth">
            <summary>
                Sets the width (in px) of the border enclosing the slider.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.TickleN">
            <summary>
                Sets the length in pixels of step tick marks
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.TickColor">
            <summary>
                Sets the color of the border enclosing the slider.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.MinorTickLen">
            <summary>
                Sets the length in pixels of minor step tick marks
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Slider.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SliderLib.CurrentValue">
            <summary>
                The CurrentValue class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.CurrentValue.Visible">
            <summary>
                Shows the currently-selected value above the slider.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.CurrentValue.XAnchor">
            <summary>
                The alignment of the value readout relative to the length of the slider.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.CurrentValue.Offset">
            <summary>
                The amount of space, in pixels, between the current value label and the
                slider.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.CurrentValue.Prefix">
            <summary>
                When currentvalue.visible is true, this sets the prefix of the label.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.CurrentValue.Suffix">
            <summary>
                When currentvalue.visible is true, this sets the suffix of the label.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.CurrentValue.Font">
            <summary>
                Sets the font of the current value label text.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SliderLib.CurrentValueLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.CurrentValueLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.CurrentValueLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.CurrentValueLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SliderLib.CurrentValueLib.XAnchorEnum">
            <summary>
                The alignment of the value readout relative to the length of the slider.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SliderLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SliderLib.LenModeEnum">
            <summary>
                Determines whether this slider length is set in units of plot <c>fraction</c>
                or in *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SliderLib.Pad">
            <summary>
                The Pad class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Pad.T">
            <summary>
                The amount of padding (in px) along the top of the component.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Pad.R">
            <summary>
                The amount of padding (in px) on the right side of the component.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Pad.B">
            <summary>
                The amount of padding (in px) along the bottom of the component.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Pad.L">
            <summary>
                The amount of padding (in px) on the left side of the component.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SliderLib.Step">
            <summary>
                The Step class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Step.Visible">
            <summary>
                Determines whether or not this step is included in the slider.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Step.Method">
            <summary>
                Sets the Plotly method to be called when the slider value is changed. If
                the <c>skip</c> method is used, the API slider will function as normal but
                will perform no API calls and will not bind automatically to state updates.
                This may be used to create a component interface and attach to slider events
                manually via JavaScript.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Step.Args">
            <summary>
                Sets the arguments values to be passed to the Plotly method set in <c>method</c>
                on slide.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Step.Label">
            <summary>
                Sets the text label to appear on the slider
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Step.Value">
            <summary>
                Sets the value of the slider step, used to refer to the step programatically.
                Defaults to the slider label if not provided.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Step.Execute">
            <summary>
                When true, the API method is executed. When false, all other behaviors are
                the same and command execution is skipped. This may be useful when hooking
                into, for example, the <c>plotly_sliderchange</c> method and executing the
                API command manually without losing the benefit of the slider automatically
                binding to the state of the plot through the specification of <c>method</c>
                and <c>args</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Step.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Step.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SliderLib.StepLib.MethodEnum">
            <summary>
                Sets the Plotly method to be called when the slider value is changed. If
                the <c>skip</c> method is used, the API slider will function as normal but
                will perform no API calls and will not bind automatically to state updates.
                This may be used to create a component interface and attach to slider events
                manually via JavaScript.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SliderLib.Transition">
            <summary>
                The Transition class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Transition.Duration">
            <summary>
                Sets the duration of the slider transition
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.SliderLib.Transition.Easing">
            <summary>
                Sets the easing function of the slider transition
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SliderLib.TransitionLib.EasingEnum">
            <summary>
                Sets the easing function of the slider transition
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SliderLib.XAnchorEnum">
            <summary>
                Sets the slider&#39;s horizontal position anchor. This anchor binds the
                <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c> of the
                range selector.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.SliderLib.YAnchorEnum">
            <summary>
                Sets the slider&#39;s vertical position anchor This anchor binds the <c>y</c>
                position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the range
                selector.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.Ternary">
            <summary>
                The Ternary class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Ternary.Domain">
            <summary>
                Gets or sets the Domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Ternary.BgColor">
            <summary>
                Set the background color of the subplot
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Ternary.Sum">
            <summary>
                The number each triplet should sum to, and the maximum range of each axis
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Ternary.AAxis">
            <summary>
                Gets or sets the AAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Ternary.BAxis">
            <summary>
                Gets or sets the BAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Ternary.CAxis">
            <summary>
                Gets or sets the CAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Ternary.UiRevision">
            <summary>
                Controls persistence of user-driven changes in axis <c>min</c> and <c>title</c>,
                if not overridden in the individual axes. Defaults to <c>layout.uirevision</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.AAxis">
            <summary>
                The AAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.Color">
            <summary>
                Sets default for all colors associated with this axis all at once: line,
                font, tick, and grid colors. Grid color is lightened by blending this with
                the plot background Individual pieces can override this.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.TickFont">
            <summary>
                Sets the tick font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.HoverFormat">
            <summary>
                Sets the hover text formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.ShowLine">
            <summary>
                Determines whether or not a line bounding this axis is drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.LineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.LineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.ShowGrid">
            <summary>
                Determines whether or not grid lines are drawn. If <c>true</c>, the grid
                lines are drawn at every tick mark.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.GridColor">
            <summary>
                Sets the color of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.GridWidth">
            <summary>
                Sets the width (in px) of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.Layer">
            <summary>
                Sets the layer on which this axis is displayed. If &#39;above traces&#39;,
                this axis is displayed above all the subplot&#39;s traces If &#39;below
                traces&#39;, this axis is displayed below all the subplot&#39;s traces,
                but above the grid lines. Useful when used together with scatter-like traces
                with <c>cliponaxis</c> set to <c>false</c> to show markers and/or text nodes
                above this axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.UiRevision">
            <summary>
                Controls persistence of user-driven changes in axis <c>min</c>, and <c>title</c>
                if in &#39;editable: true&#39; configuration. Defaults to <c>ternary&lt;N&gt;.uirevision</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxis.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.LayerEnum">
            <summary>
                Sets the layer on which this axis is displayed. If &#39;above traces&#39;,
                this axis is displayed above all the subplot&#39;s traces If &#39;below
                traces&#39;, this axis is displayed below all the subplot&#39;s traces,
                but above the grid lines. Useful when used together with scatter-like traces
                with <c>cliponaxis</c> set to <c>false</c> to show markers and/or text nodes
                above this axis.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.Title.Text">
            <summary>
                Sets the title of this axis. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.Title.Font">
            <summary>
                Sets this axis&#39; title font. Note that the title&#39;s font used to be
                customized by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.AAxisLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.BAxis">
            <summary>
                The BAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.Color">
            <summary>
                Sets default for all colors associated with this axis all at once: line,
                font, tick, and grid colors. Grid color is lightened by blending this with
                the plot background Individual pieces can override this.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.TickFont">
            <summary>
                Sets the tick font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.HoverFormat">
            <summary>
                Sets the hover text formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.ShowLine">
            <summary>
                Determines whether or not a line bounding this axis is drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.LineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.LineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.ShowGrid">
            <summary>
                Determines whether or not grid lines are drawn. If <c>true</c>, the grid
                lines are drawn at every tick mark.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.GridColor">
            <summary>
                Sets the color of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.GridWidth">
            <summary>
                Sets the width (in px) of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.Layer">
            <summary>
                Sets the layer on which this axis is displayed. If &#39;above traces&#39;,
                this axis is displayed above all the subplot&#39;s traces If &#39;below
                traces&#39;, this axis is displayed below all the subplot&#39;s traces,
                but above the grid lines. Useful when used together with scatter-like traces
                with <c>cliponaxis</c> set to <c>false</c> to show markers and/or text nodes
                above this axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.UiRevision">
            <summary>
                Controls persistence of user-driven changes in axis <c>min</c>, and <c>title</c>
                if in &#39;editable: true&#39; configuration. Defaults to <c>ternary&lt;N&gt;.uirevision</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxis.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.LayerEnum">
            <summary>
                Sets the layer on which this axis is displayed. If &#39;above traces&#39;,
                this axis is displayed above all the subplot&#39;s traces If &#39;below
                traces&#39;, this axis is displayed below all the subplot&#39;s traces,
                but above the grid lines. Useful when used together with scatter-like traces
                with <c>cliponaxis</c> set to <c>false</c> to show markers and/or text nodes
                above this axis.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.Title.Text">
            <summary>
                Sets the title of this axis. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.Title.Font">
            <summary>
                Sets this axis&#39; title font. Note that the title&#39;s font used to be
                customized by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.BAxisLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.CAxis">
            <summary>
                The CAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.Color">
            <summary>
                Sets default for all colors associated with this axis all at once: line,
                font, tick, and grid colors. Grid color is lightened by blending this with
                the plot background Individual pieces can override this.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.TickFont">
            <summary>
                Sets the tick font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.HoverFormat">
            <summary>
                Sets the hover text formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.ShowLine">
            <summary>
                Determines whether or not a line bounding this axis is drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.LineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.LineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.ShowGrid">
            <summary>
                Determines whether or not grid lines are drawn. If <c>true</c>, the grid
                lines are drawn at every tick mark.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.GridColor">
            <summary>
                Sets the color of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.GridWidth">
            <summary>
                Sets the width (in px) of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.Layer">
            <summary>
                Sets the layer on which this axis is displayed. If &#39;above traces&#39;,
                this axis is displayed above all the subplot&#39;s traces If &#39;below
                traces&#39;, this axis is displayed below all the subplot&#39;s traces,
                but above the grid lines. Useful when used together with scatter-like traces
                with <c>cliponaxis</c> set to <c>false</c> to show markers and/or text nodes
                above this axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.UiRevision">
            <summary>
                Controls persistence of user-driven changes in axis <c>min</c>, and <c>title</c>
                if in &#39;editable: true&#39; configuration. Defaults to <c>ternary&lt;N&gt;.uirevision</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxis.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.LayerEnum">
            <summary>
                Sets the layer on which this axis is displayed. If &#39;above traces&#39;,
                this axis is displayed above all the subplot&#39;s traces If &#39;below
                traces&#39;, this axis is displayed below all the subplot&#39;s traces,
                but above the grid lines. Useful when used together with scatter-like traces
                with <c>cliponaxis</c> set to <c>false</c> to show markers and/or text nodes
                above this axis.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.Title.Text">
            <summary>
                Sets the title of this axis. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.Title.Font">
            <summary>
                Sets this axis&#39; title font. Note that the title&#39;s font used to be
                customized by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.CAxisLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TernaryLib.Domain">
            <summary>
                The Domain class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.Domain.X">
            <summary>
                Sets the horizontal domain of this ternary subplot (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.Domain.Y">
            <summary>
                Sets the vertical domain of this ternary subplot (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.Domain.Row">
            <summary>
                If there is a layout grid, use the domain for this row in the grid for this
                ternary subplot .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TernaryLib.Domain.Column">
            <summary>
                If there is a layout grid, use the domain for this column in the grid for
                this ternary subplot .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Title.Text">
            <summary>
                Sets the plot&#39;s title. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Title.Font">
            <summary>
                Sets the title font. Note that the title&#39;s font used to be customized
                by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Title.XRef">
            <summary>
                Sets the container <c>x</c> refers to. <c>container</c> spans the entire
                <c>width</c> of the plot. <c>paper</c> refers to the width of the plotting
                area only.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Title.YRef">
            <summary>
                Sets the container <c>y</c> refers to. <c>container</c> spans the entire
                <c>height</c> of the plot. <c>paper</c> refers to the height of the plotting
                area only.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Title.X">
            <summary>
                Sets the x position with respect to <c>xref</c> in normalized coordinates
                from <c>0</c> (left) to <c>1</c> (right).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Title.Y">
            <summary>
                Sets the y position with respect to <c>yref</c> in normalized coordinates
                from <c>0</c> (bottom) to <c>1</c> (top). <c>auto</c> places the baseline
                of the title onto the vertical center of the top margin.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Title.XAnchor">
            <summary>
                Sets the title&#39;s horizontal alignment with respect to its x position.
                <c>left</c> means that the title starts at x, <c>right</c> means that the
                title ends at x and <c>center</c> means that the title&#39;s center is at
                x. <c>auto</c> divides <c>xref</c> by three and calculates the <c>xanchor</c>
                value automatically based on the value of <c>x</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Title.YAnchor">
            <summary>
                Sets the title&#39;s vertical alignment with respect to its y position.
                <c>top</c> means that the title&#39;s cap line is at y, <c>bottom</c> means
                that the title&#39;s baseline is at y and <c>middle</c> means that the title&#39;s
                midline is at y. <c>auto</c> divides <c>yref</c> by three and calculates
                the <c>yanchor</c> value automatically based on the value of <c>y</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Title.Pad">
            <summary>
                Sets the padding of the title. Each padding value only applies when the
                corresponding <c>xanchor</c>/<c>yanchor</c> value is set accordingly. E.g.
                for left padding to take effect, <c>xanchor</c> must be set to <c>left</c>.
                The same rule applies if <c>xanchor</c>/<c>yanchor</c> is determined automatically.
                Padding is muted if the respective anchor value is <c>middle</c>/<c>center</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TitleLib.Pad">
            <summary>
                The Pad class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TitleLib.Pad.T">
            <summary>
                The amount of padding (in px) along the top of the component.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TitleLib.Pad.R">
            <summary>
                The amount of padding (in px) on the right side of the component.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TitleLib.Pad.B">
            <summary>
                The amount of padding (in px) along the bottom of the component.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.TitleLib.Pad.L">
            <summary>
                The amount of padding (in px) on the left side of the component.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TitleLib.XAnchorEnum">
            <summary>
                Sets the title&#39;s horizontal alignment with respect to its x position.
                <c>left</c> means that the title starts at x, <c>right</c> means that the
                title ends at x and <c>center</c> means that the title&#39;s center is at
                x. <c>auto</c> divides <c>xref</c> by three and calculates the <c>xanchor</c>
                value automatically based on the value of <c>x</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TitleLib.XRefEnum">
            <summary>
                Sets the container <c>x</c> refers to. <c>container</c> spans the entire
                <c>width</c> of the plot. <c>paper</c> refers to the width of the plotting
                area only.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TitleLib.YAnchorEnum">
            <summary>
                Sets the title&#39;s vertical alignment with respect to its y position.
                <c>top</c> means that the title&#39;s cap line is at y, <c>bottom</c> means
                that the title&#39;s baseline is at y and <c>middle</c> means that the title&#39;s
                midline is at y. <c>auto</c> divides <c>yref</c> by three and calculates
                the <c>yanchor</c> value automatically based on the value of <c>y</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TitleLib.YRefEnum">
            <summary>
                Sets the container <c>y</c> refers to. <c>container</c> spans the entire
                <c>height</c> of the plot. <c>paper</c> refers to the height of the plotting
                area only.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.Transition">
            <summary>
                The Transition class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Transition.Duration">
            <summary>
                The duration of the transition, in milliseconds. If equal to zero, updates
                are synchronous.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Transition.Easing">
            <summary>
                The easing function used for the transition
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.Transition.Ordering">
            <summary>
                Determines whether the figure&#39;s layout or traces smoothly transitions
                during updates that make both traces and layout change.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TransitionLib.EasingEnum">
            <summary>
                The easing function used for the transition
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.TransitionLib.OrderingEnum">
            <summary>
                Determines whether the figure&#39;s layout or traces smoothly transitions
                during updates that make both traces and layout change.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.UniformText">
            <summary>
                The UniformText class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UniformText.Mode">
            <summary>
                Determines how the font size for various text elements are uniformed between
                each trace type. If the computed text sizes were smaller than the minimum
                size defined by <c>uniformtext.minsize</c> using <c>hide</c> option hides
                the text; and using <c>show</c> option shows the text without further downscaling.
                Please note that if the size defined by <c>minsize</c> is greater than the
                font size defined by trace, then the <c>minsize</c> is used.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UniformText.MinSize">
            <summary>
                Sets the minimum text size between traces of the same type.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.UniformTextLib.ModeEnum">
            <summary>
                Determines how the font size for various text elements are uniformed between
                each trace type. If the computed text sizes were smaller than the minimum
                size defined by <c>uniformtext.minsize</c> using <c>hide</c> option hides
                the text; and using <c>show</c> option shows the text without further downscaling.
                Please note that if the size defined by <c>minsize</c> is greater than the
                font size defined by trace, then the <c>minsize</c> is used.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.UpdateMenu">
            <summary>
                The UpdateMenu class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.Visible">
            <summary>
                Determines whether or not the update menu is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.Type">
            <summary>
                Determines whether the buttons are accessible via a dropdown menu or whether
                the buttons are stacked horizontally or vertically
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.Direction">
            <summary>
                Determines the direction in which the buttons are laid out, whether in a
                dropdown menu or a row/column of buttons. For <c>left</c> and <c>up</c>,
                the buttons will still appear in left-to-right or top-to-bottom order respectively.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.Active">
            <summary>
                Determines which button (by index starting from 0) is considered active.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.ShowActive">
            <summary>
                Highlights active dropdown item or active button if true.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.Buttons">
            <summary>
                Gets or sets the Buttons.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.X">
            <summary>
                Sets the x position (in normalized coordinates) of the update menu.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.XAnchor">
            <summary>
                Sets the update menu&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the range selector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.Y">
            <summary>
                Sets the y position (in normalized coordinates) of the update menu.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.YAnchor">
            <summary>
                Sets the update menu&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                range selector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.Pad">
            <summary>
                Sets the padding around the buttons or dropdown menu.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.Font">
            <summary>
                Sets the font of the update menu button text.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.BgColor">
            <summary>
                Sets the background color of the update menu buttons.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.BorderColor">
            <summary>
                Sets the color of the border enclosing the update menu.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.BorderWidth">
            <summary>
                Sets the width (in px) of the border enclosing the update menu.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenu.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.UpdateMenuLib.Button">
            <summary>
                The Button class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenuLib.Button.Visible">
            <summary>
                Determines whether or not this button is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenuLib.Button.Method">
            <summary>
                Sets the Plotly method to be called on click. If the <c>skip</c> method
                is used, the API updatemenu will function as normal but will perform no
                API calls and will not bind automatically to state updates. This may be
                used to create a component interface and attach to updatemenu events manually
                via JavaScript.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenuLib.Button.Args">
            <summary>
                Sets the arguments values to be passed to the Plotly method set in <c>method</c>
                on click.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenuLib.Button.Args2">
            <summary>
                Sets a 2nd set of <c>args</c>, these arguments values are passed to the
                Plotly method set in <c>method</c> when clicking this button while in the
                active state. Use this to create toggle buttons.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenuLib.Button.Label">
            <summary>
                Sets the text label to appear on the button.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenuLib.Button.Execute">
            <summary>
                When true, the API method is executed. When false, all other behaviors are
                the same and command execution is skipped. This may be useful when hooking
                into, for example, the <c>plotly_buttonclicked</c> method and executing
                the API command manually without losing the benefit of the updatemenu automatically
                binding to the state of the plot through the specification of <c>method</c>
                and <c>args</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenuLib.Button.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenuLib.Button.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.UpdateMenuLib.ButtonLib.MethodEnum">
            <summary>
                Sets the Plotly method to be called on click. If the <c>skip</c> method
                is used, the API updatemenu will function as normal but will perform no
                API calls and will not bind automatically to state updates. This may be
                used to create a component interface and attach to updatemenu events manually
                via JavaScript.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.UpdateMenuLib.DirectionEnum">
            <summary>
                Determines the direction in which the buttons are laid out, whether in a
                dropdown menu or a row/column of buttons. For <c>left</c> and <c>up</c>,
                the buttons will still appear in left-to-right or top-to-bottom order respectively.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.UpdateMenuLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenuLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenuLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenuLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.UpdateMenuLib.Pad">
            <summary>
                The Pad class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenuLib.Pad.T">
            <summary>
                The amount of padding (in px) along the top of the component.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenuLib.Pad.R">
            <summary>
                The amount of padding (in px) on the right side of the component.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenuLib.Pad.B">
            <summary>
                The amount of padding (in px) along the bottom of the component.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.UpdateMenuLib.Pad.L">
            <summary>
                The amount of padding (in px) on the left side of the component.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.UpdateMenuLib.TypeEnum">
            <summary>
                Determines whether the buttons are accessible via a dropdown menu or whether
                the buttons are stacked horizontally or vertically
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.UpdateMenuLib.XAnchorEnum">
            <summary>
                Sets the update menu&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the range selector.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.UpdateMenuLib.YAnchorEnum">
            <summary>
                Sets the update menu&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                range selector.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.ViolinModeEnum">
            <summary>
                Determines how violins at the same location coordinate are displayed on
                the graph. If <c>group</c>, the violins are plotted next to one another
                centered around the shared location. If <c>overlay</c>, the violins are
                plotted over one another, you might need to set <c>opacity</c> to see them
                multiple violins. Has no effect on traces that have <c>width</c> set.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.WaterfallModeEnum">
            <summary>
                Determines how bars at the same location coordinate are displayed on the
                graph. With <c>group</c>, the bars are plotted next to one another centered
                around the shared location. With <c>overlay</c>, the bars are plotted over
                one another, you might need to an <c>opacity</c> to see multiple bars.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxis">
            <summary>
                The XAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Visible">
            <summary>
                A single toggle to hide the axis while preserving interaction like dragging.
                Default is true when a cheater plot is present on the axis, otherwise false
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Color">
            <summary>
                Sets default for all colors associated with this axis all at once: line,
                font, tick, and grid colors. Grid color is lightened by blending this with
                the plot background Individual pieces can override this.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Type">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.AutoRange">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.RangeMode">
            <summary>
                If <c>normal</c>, the range is computed in relation to the extrema of the
                input data. If <c>tozero</c>`, the range extends to 0, regardless of the
                input data If <c>nonnegative</c>, the range is non-negative, regardless
                of the input data. Applies only to linear axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Range">
            <summary>
                Sets the range of this axis. If the axis <c>type</c> is <c>log</c>, then
                you must take the log of your desired range (e.g. to set the range from
                1 to 100, set the range from 0 to 2). If the axis <c>type</c> is <c>date</c>,
                it should be date strings, like date data, though Date objects and unix
                milliseconds will be accepted and converted to strings. If the axis <c>type</c>
                is <c>category</c>, it should be numbers, using the scale where each category
                is assigned a serial number from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.FixedRange">
            <summary>
                Determines whether or not this axis is zoom-able. If true, then zoom is
                disabled.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.ScaleAnchor">
            <summary>
                If set to another axis id (e.g. <c>x2</c>, <c>y</c>), the range of this
                axis changes together with the range of the corresponding axis such that
                the scale of pixels per unit is in a constant ratio. Both axes are still
                zoomable, but when you zoom one, the other will zoom the same amount, keeping
                a fixed midpoint. <c>constrain</c> and <c>constraintoward</c> determine
                how we enforce the constraint. You can chain these, ie &#39;yaxis: {scaleanchor:
                <c>x</c>}, xaxis2: {scaleanchor: <c>y</c>}&#39; but you can only link axes
                of the same <c>type</c>. The linked axis can have the opposite letter (to
                constrain the aspect ratio) or the same letter (to match scales across subplots).
                Loops (&#39;yaxis: {scaleanchor: <c>x</c>}, xaxis: {scaleanchor: <c>y</c>}&#39;
                or longer) are redundant and the last constraint encountered will be ignored
                to avoid possible inconsistent constraints via <c>scaleratio</c>. Note that
                setting axes simultaneously in both a <c>scaleanchor</c> and a <c>matches</c>
                constraint is currently forbidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.ScaleRatio">
            <summary>
                If this axis is linked to another by <c>scaleanchor</c>, this determines
                the pixel to unit scale ratio. For example, if this value is 10, then every
                unit on this axis spans 10 times the number of pixels as a unit on the linked
                axis. Use this for example to create an elevation profile where the vertical
                scale is exaggerated a fixed amount with respect to the horizontal.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Constrain">
            <summary>
                If this axis needs to be compressed (either due to its own <c>scaleanchor</c>
                and <c>scaleratio</c> or those of the other axis), determines how that happens:
                by increasing the <c>range</c> (default), or by decreasing the <c>domain</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.ConstrainToward">
            <summary>
                If this axis needs to be compressed (either due to its own <c>scaleanchor</c>
                and <c>scaleratio</c> or those of the other axis), determines which direction
                we push the originally specified plot area. Options are <c>left</c>, <c>center</c>
                (default), and <c>right</c> for x axes, and <c>top</c>, <c>middle</c> (default),
                and <c>bottom</c> for y axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Matches">
            <summary>
                If set to another axis id (e.g. <c>x2</c>, <c>y</c>), the range of this
                axis will match the range of the corresponding axis in data-coordinates
                space. Moreover, matching axes share auto-range values, category lists and
                histogram auto-bins. Note that setting axes simultaneously in both a <c>scaleanchor</c>
                and a <c>matches</c> constraint is currently forbidden. Moreover, note that
                matching axes must have the same <c>type</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.RangeBreaks">
            <summary>
                Gets or sets the RangeBreaks.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.TickSon">
            <summary>
                Determines where ticks and grid lines are drawn with respect to their corresponding
                tick labels. Only has an effect for axes of <c>type</c> <c>category</c>
                or <c>multicategory</c>. When set to <c>boundaries</c>, ticks and grid lines
                are drawn half a category to the left/bottom of labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Mirror">
            <summary>
                Determines if the axis lines or/and ticks are mirrored to the opposite side
                of the plotting area. If <c>true</c>, the axis lines are mirrored. If <c>ticks</c>,
                the axis lines and ticks are mirrored. If <c>false</c>, mirroring is disable.
                If <c>all</c>, axis lines are mirrored on all shared-axes subplots. If <c>allticks</c>,
                axis lines and ticks are mirrored on all shared-axes subplots.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.AutoMargin">
            <summary>
                Determines whether long tick labels automatically grow the figure margins.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.ShowSpikes">
            <summary>
                Determines whether or not spikes (aka droplines) are drawn for this axis.
                Note: This only takes affect when hovermode = closest
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.SpikeColor">
            <summary>
                Sets the spike color. If undefined, will use the series color
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.SpikeThickness">
            <summary>
                Sets the width (in px) of the zero line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.SpikeDash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.SpikeMode">
            <summary>
                Determines the drawing mode for the spike line If <c>toaxis</c>, the line
                is drawn from the data point to the axis the  series is plotted on. If <c>across</c>,
                the line is drawn across the entire plot area, and supercedes <c>toaxis</c>.
                If <c>marker</c>, then a marker dot is drawn on the axis the series is plotted
                on
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.SpikeSnap">
            <summary>
                Determines whether spikelines are stuck to the cursor or to the closest
                datapoints.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.TickFont">
            <summary>
                Sets the tick font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.HoverFormat">
            <summary>
                Sets the hover text formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.ShowLine">
            <summary>
                Determines whether or not a line bounding this axis is drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.LineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.LineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.ShowGrid">
            <summary>
                Determines whether or not grid lines are drawn. If <c>true</c>, the grid
                lines are drawn at every tick mark.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.GridColor">
            <summary>
                Sets the color of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.GridWidth">
            <summary>
                Sets the width (in px) of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.ZeroLine">
            <summary>
                Determines whether or not a line is drawn at along the 0 value of this axis.
                If <c>true</c>, the zero line is drawn on top of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.ZeroLineColor">
            <summary>
                Sets the line color of the zero line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.ZeroLineWidth">
            <summary>
                Sets the width (in px) of the zero line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.ShowDividers">
            <summary>
                Determines whether or not a dividers are drawn between the category levels
                of this axis. Only has an effect on <c>multicategory</c> axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.DividerColor">
            <summary>
                Sets the color of the dividers Only has an effect on <c>multicategory</c>
                axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.DividerWidth">
            <summary>
                Sets the width (in px) of the dividers Only has an effect on <c>multicategory</c>
                axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Anchor">
            <summary>
                If set to an opposite-letter axis id (e.g. <c>x2</c>, <c>y</c>), this axis
                is bound to the corresponding opposite-letter axis. If set to <c>free</c>,
                this axis&#39; position is determined by <c>position</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Side">
            <summary>
                Determines whether a x (y) axis is positioned at the <c>bottom</c> (<c>left</c>)
                or <c>top</c> (<c>right</c>) of the plotting area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Overlaying">
            <summary>
                If set a same-letter axis id, this axis is overlaid on top of the corresponding
                same-letter axis, with traces and axes visible for both axes. If <c>false</c>,
                this axis does not overlay any same-letter axes. In this case, for axes
                with overlapping domains only the highest-numbered axis will be visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Layer">
            <summary>
                Sets the layer on which this axis is displayed. If &#39;above traces&#39;,
                this axis is displayed above all the subplot&#39;s traces If &#39;below
                traces&#39;, this axis is displayed below all the subplot&#39;s traces,
                but above the grid lines. Useful when used together with scatter-like traces
                with <c>cliponaxis</c> set to <c>false</c> to show markers and/or text nodes
                above this axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Domain">
            <summary>
                Sets the domain of this axis (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Position">
            <summary>
                Sets the position of this axis in the plotting space (in normalized coordinates).
                Only has an effect if <c>anchor</c> is set to <c>free</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.CategoryOrder">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>. Set <c>categoryorder</c>
                to &#39;total ascending&#39; or &#39;total descending&#39; if order should
                be determined by the numerical order of the values. Similarly, the order
                can be determined by the min, max, sum, mean or median of all the values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.CategoryArray">
            <summary>
                Sets the order in which categories on this axis appear. Only has an effect
                if <c>categoryorder</c> is set to <c>array</c>. Used with <c>categoryorder</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.UiRevision">
            <summary>
                Controls persistence of user-driven changes in axis <c>range</c>, <c>autorange</c>,
                and <c>title</c> if in &#39;editable: true&#39; configuration. Defaults
                to <c>layout.uirevision</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.RangeSlider">
            <summary>
                Gets or sets the RangeSlider.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.RangeSelector">
            <summary>
                Gets or sets the RangeSelector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.Calendar">
            <summary>
                Sets the calendar system to use for <c>range</c> and <c>tick0</c> if this
                is a date axis. This does not set the calendar for interpreting data on
                this axis, that&#39;s specified in the trace or via the global <c>layout.calendar</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxis.CategoryArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  categoryarray .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.AutoRangeEnum">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.CalendarEnum">
            <summary>
                Sets the calendar system to use for <c>range</c> and <c>tick0</c> if this
                is a date axis. This does not set the calendar for interpreting data on
                this axis, that&#39;s specified in the trace or via the global <c>layout.calendar</c>
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.CategoryOrderEnum">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>. Set <c>categoryorder</c>
                to &#39;total ascending&#39; or &#39;total descending&#39; if order should
                be determined by the numerical order of the values. Similarly, the order
                can be determined by the min, max, sum, mean or median of all the values.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.ConstrainEnum">
            <summary>
                If this axis needs to be compressed (either due to its own <c>scaleanchor</c>
                and <c>scaleratio</c> or those of the other axis), determines how that happens:
                by increasing the <c>range</c> (default), or by decreasing the <c>domain</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.ConstrainTowardEnum">
            <summary>
                If this axis needs to be compressed (either due to its own <c>scaleanchor</c>
                and <c>scaleratio</c> or those of the other axis), determines which direction
                we push the originally specified plot area. Options are <c>left</c>, <c>center</c>
                (default), and <c>right</c> for x axes, and <c>top</c>, <c>middle</c> (default),
                and <c>bottom</c> for y axes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.LayerEnum">
            <summary>
                Sets the layer on which this axis is displayed. If &#39;above traces&#39;,
                this axis is displayed above all the subplot&#39;s traces If &#39;below
                traces&#39;, this axis is displayed below all the subplot&#39;s traces,
                but above the grid lines. Useful when used together with scatter-like traces
                with <c>cliponaxis</c> set to <c>false</c> to show markers and/or text nodes
                above this axis.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.MirrorEnum">
            <summary>
                Determines if the axis lines or/and ticks are mirrored to the opposite side
                of the plotting area. If <c>true</c>, the axis lines are mirrored. If <c>ticks</c>,
                the axis lines and ticks are mirrored. If <c>false</c>, mirroring is disable.
                If <c>all</c>, axis lines are mirrored on all shared-axes subplots. If <c>allticks</c>,
                axis lines and ticks are mirrored on all shared-axes subplots.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.RangeBreak">
            <summary>
                The RangeBreak class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeBreak.Enabled">
            <summary>
                Determines whether this axis rangebreak is enabled or disabled. Please note
                that <c>rangebreaks</c> only work for <c>date</c> axis type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeBreak.Bounds">
            <summary>
                Sets the lower and upper bounds of this axis rangebreak. Can be used with
                <c>pattern</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeBreak.Pattern">
            <summary>
                Determines a pattern on the time line that generates breaks. If &#39;day
                of week&#39; - days of the week in English e.g. <c>Sunday</c> or <c>sun</c>
                (matching is case-insensitive and considers only the first three characters),
                as well as Sunday-based integers between 0 and 6. If <c>hour</c> - hour
                (24-hour clock) as decimal numbers between 0 and 24. for more info. Examples:
                - { pattern: &#39;day of week&#39;, bounds: [6, 1] }  or simply { bounds:
                [<c>sat</c>, <c>mon</c>] }   breaks from Saturday to Monday (i.e. skips
                the weekends). - { pattern: <c>hour</c>, bounds: [17, 8] }   breaks from
                5pm to 8am (i.e. skips non-work hours).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeBreak.Values">
            <summary>
                Sets the coordinate values corresponding to the rangebreaks. An alternative
                to <c>bounds</c>. Use <c>dvalue</c> to set the size of the values along
                the axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeBreak.DValue">
            <summary>
                Sets the size of each <c>values</c> item. The default is one day in milliseconds.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeBreak.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeBreak.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.RangeBreakLib.PatternEnum">
            <summary>
                Determines a pattern on the time line that generates breaks. If &#39;day
                of week&#39; - days of the week in English e.g. <c>Sunday</c> or <c>sun</c>
                (matching is case-insensitive and considers only the first three characters),
                as well as Sunday-based integers between 0 and 6. If <c>hour</c> - hour
                (24-hour clock) as decimal numbers between 0 and 24. for more info. Examples:
                - { pattern: &#39;day of week&#39;, bounds: [6, 1] }  or simply { bounds:
                [<c>sat</c>, <c>mon</c>] }   breaks from Saturday to Monday (i.e. skips
                the weekends). - { pattern: <c>hour</c>, bounds: [17, 8] }   breaks from
                5pm to 8am (i.e. skips non-work hours).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.RangeModeEnum">
            <summary>
                If <c>normal</c>, the range is computed in relation to the extrema of the
                input data. If <c>tozero</c>`, the range extends to 0, regardless of the
                input data If <c>nonnegative</c>, the range is non-negative, regardless
                of the input data. Applies only to linear axes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelector">
            <summary>
                The RangeSelector class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelector.Visible">
            <summary>
                Determines whether or not this range selector is visible. Note that range
                selectors are only available for x axes of <c>type</c> set to or auto-typed
                to <c>date</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelector.Buttons">
            <summary>
                Gets or sets the Buttons.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelector.X">
            <summary>
                Sets the x position (in normalized coordinates) of the range selector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelector.XAnchor">
            <summary>
                Sets the range selector&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the range selector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelector.Y">
            <summary>
                Sets the y position (in normalized coordinates) of the range selector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelector.YAnchor">
            <summary>
                Sets the range selector&#39;s vertical position anchor This anchor binds
                the <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c>
                of the range selector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelector.Font">
            <summary>
                Sets the font of the range selector button text.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelector.BgColor">
            <summary>
                Sets the background color of the range selector buttons.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelector.ActiveColor">
            <summary>
                Sets the background color of the active range selector button.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelector.BorderColor">
            <summary>
                Sets the color of the border enclosing the range selector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelector.BorderWidth">
            <summary>
                Sets the width (in px) of the border enclosing the range selector.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.Button">
            <summary>
                The Button class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.Button.Visible">
            <summary>
                Determines whether or not this button is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.Button.Step">
            <summary>
                The unit of measurement that the <c>count</c> value will set the range by.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.Button.StepMode">
            <summary>
                Sets the range update mode. If <c>backward</c>, the range update shifts
                the start of range back <c>count</c> times <c>step</c> milliseconds. If
                <c>todate</c>, the range update shifts the start of range back to the first
                timestamp from <c>count</c> times <c>step</c> milliseconds back. For example,
                with <c>step</c> set to <c>year</c> and <c>count</c> set to <c>1</c> the
                range update shifts the start of the range back to January 01 of the current
                year. Month and year <c>todate</c> are currently available only for the
                built-in (Gregorian) calendar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.Button.Count">
            <summary>
                Sets the number of steps to take to update the range. Use with <c>step</c>
                to specify the update interval.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.Button.Label">
            <summary>
                Sets the text label to appear on the button.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.Button.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.Button.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.ButtonLib.StepEnum">
            <summary>
                The unit of measurement that the <c>count</c> value will set the range by.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.ButtonLib.StepModeEnum">
            <summary>
                Sets the range update mode. If <c>backward</c>, the range update shifts
                the start of range back <c>count</c> times <c>step</c> milliseconds. If
                <c>todate</c>, the range update shifts the start of range back to the first
                timestamp from <c>count</c> times <c>step</c> milliseconds back. For example,
                with <c>step</c> set to <c>year</c> and <c>count</c> set to <c>1</c> the
                range update shifts the start of the range back to January 01 of the current
                year. Month and year <c>todate</c> are currently available only for the
                built-in (Gregorian) calendar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.XAnchorEnum">
            <summary>
                Sets the range selector&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the range selector.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.RangeSelectorLib.YAnchorEnum">
            <summary>
                Sets the range selector&#39;s vertical position anchor This anchor binds
                the <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c>
                of the range selector.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.RangeSlider">
            <summary>
                The RangeSlider class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSlider.BgColor">
            <summary>
                Sets the background color of the range slider.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSlider.BorderColor">
            <summary>
                Sets the border color of the range slider.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSlider.BorderWidth">
            <summary>
                Sets the border width of the range slider.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSlider.AutoRange">
            <summary>
                Determines whether or not the range slider range is computed in relation
                to the input data. If <c>range</c> is provided, then <c>autorange</c> is
                set to <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSlider.Range">
            <summary>
                Sets the range of the range slider. If not set, defaults to the full xaxis
                range. If the axis <c>type</c> is <c>log</c>, then you must take the log
                of your desired range. If the axis <c>type</c> is <c>date</c>, it should
                be date strings, like date data, though Date objects and unix milliseconds
                will be accepted and converted to strings. If the axis <c>type</c> is <c>category</c>,
                it should be numbers, using the scale where each category is assigned a
                serial number from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSlider.Thickness">
            <summary>
                The height of the range slider as a fraction of the total plot area height.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSlider.Visible">
            <summary>
                Determines whether or not the range slider will be visible. If visible,
                perpendicular axes will be set to <c>fixedrange</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSlider.YAxis">
            <summary>
                Gets or sets the YAxis.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.RangeSliderLib.YAxis">
            <summary>
                The YAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSliderLib.YAxis.RangeMode">
            <summary>
                Determines whether or not the range of this axis in the rangeslider use
                the same value than in the main plot when zooming in/out. If <c>auto</c>,
                the autorange will be used. If <c>fixed</c>, the <c>range</c> is used. If
                <c>match</c>, the current range of the corresponding y-axis on the main
                subplot is used.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.RangeSliderLib.YAxis.Range">
            <summary>
                Sets the range of this axis for the rangeslider.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.RangeSliderLib.YAxisLib.RangeModeEnum">
            <summary>
                Determines whether or not the range of this axis in the rangeslider use
                the same value than in the main plot when zooming in/out. If <c>auto</c>,
                the autorange will be used. If <c>fixed</c>, the <c>range</c> is used. If
                <c>match</c>, the current range of the corresponding y-axis on the main
                subplot is used.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.SideEnum">
            <summary>
                Determines whether a x (y) axis is positioned at the <c>bottom</c> (<c>left</c>)
                or <c>top</c> (<c>right</c>) of the plotting area.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.SpikeModeFlag">
            <summary>
                Determines the drawing mode for the spike line If <c>toaxis</c>, the line
                is drawn from the data point to the axis the  series is plotted on. If <c>across</c>,
                the line is drawn across the entire plot area, and supercedes <c>toaxis</c>.
                If <c>marker</c>, then a marker dot is drawn on the axis the series is plotted
                on
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.SpikeSnapEnum">
            <summary>
                Determines whether spikelines are stuck to the cursor or to the closest
                datapoints.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.TickSonEnum">
            <summary>
                Determines where ticks and grid lines are drawn with respect to their corresponding
                tick labels. Only has an effect for axes of <c>type</c> <c>category</c>
                or <c>multicategory</c>. When set to <c>boundaries</c>, ticks and grid lines
                are drawn half a category to the left/bottom of labels.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.Title.Text">
            <summary>
                Sets the title of this axis. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.Title.Font">
            <summary>
                Sets this axis&#39; title font. Note that the title&#39;s font used to be
                customized by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.Title.Standoff">
            <summary>
                Sets the standoff distance (in px) between the axis labels and the title
                text The default value is a function of the axis tick labels, the title
                <c>font.size</c> and the axis <c>linewidth</c>. Note that the axis title
                position is always constrained within the margins, so the actual standoff
                distance is always less than the set or default value. By setting <c>standoff</c>
                and turning on <c>automargin</c>, plotly.js will push the margins to fit
                the axis title at given standoff distance.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.XAxisLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.XAxisLib.TypeEnum">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxis">
            <summary>
                The YAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Visible">
            <summary>
                A single toggle to hide the axis while preserving interaction like dragging.
                Default is true when a cheater plot is present on the axis, otherwise false
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Color">
            <summary>
                Sets default for all colors associated with this axis all at once: line,
                font, tick, and grid colors. Grid color is lightened by blending this with
                the plot background Individual pieces can override this.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Type">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.AutoRange">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.RangeMode">
            <summary>
                If <c>normal</c>, the range is computed in relation to the extrema of the
                input data. If <c>tozero</c>`, the range extends to 0, regardless of the
                input data If <c>nonnegative</c>, the range is non-negative, regardless
                of the input data. Applies only to linear axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Range">
            <summary>
                Sets the range of this axis. If the axis <c>type</c> is <c>log</c>, then
                you must take the log of your desired range (e.g. to set the range from
                1 to 100, set the range from 0 to 2). If the axis <c>type</c> is <c>date</c>,
                it should be date strings, like date data, though Date objects and unix
                milliseconds will be accepted and converted to strings. If the axis <c>type</c>
                is <c>category</c>, it should be numbers, using the scale where each category
                is assigned a serial number from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.FixedRange">
            <summary>
                Determines whether or not this axis is zoom-able. If true, then zoom is
                disabled.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.ScaleAnchor">
            <summary>
                If set to another axis id (e.g. <c>x2</c>, <c>y</c>), the range of this
                axis changes together with the range of the corresponding axis such that
                the scale of pixels per unit is in a constant ratio. Both axes are still
                zoomable, but when you zoom one, the other will zoom the same amount, keeping
                a fixed midpoint. <c>constrain</c> and <c>constraintoward</c> determine
                how we enforce the constraint. You can chain these, ie &#39;yaxis: {scaleanchor:
                <c>x</c>}, xaxis2: {scaleanchor: <c>y</c>}&#39; but you can only link axes
                of the same <c>type</c>. The linked axis can have the opposite letter (to
                constrain the aspect ratio) or the same letter (to match scales across subplots).
                Loops (&#39;yaxis: {scaleanchor: <c>x</c>}, xaxis: {scaleanchor: <c>y</c>}&#39;
                or longer) are redundant and the last constraint encountered will be ignored
                to avoid possible inconsistent constraints via <c>scaleratio</c>. Note that
                setting axes simultaneously in both a <c>scaleanchor</c> and a <c>matches</c>
                constraint is currently forbidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.ScaleRatio">
            <summary>
                If this axis is linked to another by <c>scaleanchor</c>, this determines
                the pixel to unit scale ratio. For example, if this value is 10, then every
                unit on this axis spans 10 times the number of pixels as a unit on the linked
                axis. Use this for example to create an elevation profile where the vertical
                scale is exaggerated a fixed amount with respect to the horizontal.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Constrain">
            <summary>
                If this axis needs to be compressed (either due to its own <c>scaleanchor</c>
                and <c>scaleratio</c> or those of the other axis), determines how that happens:
                by increasing the <c>range</c> (default), or by decreasing the <c>domain</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.ConstrainToward">
            <summary>
                If this axis needs to be compressed (either due to its own <c>scaleanchor</c>
                and <c>scaleratio</c> or those of the other axis), determines which direction
                we push the originally specified plot area. Options are <c>left</c>, <c>center</c>
                (default), and <c>right</c> for x axes, and <c>top</c>, <c>middle</c> (default),
                and <c>bottom</c> for y axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Matches">
            <summary>
                If set to another axis id (e.g. <c>x2</c>, <c>y</c>), the range of this
                axis will match the range of the corresponding axis in data-coordinates
                space. Moreover, matching axes share auto-range values, category lists and
                histogram auto-bins. Note that setting axes simultaneously in both a <c>scaleanchor</c>
                and a <c>matches</c> constraint is currently forbidden. Moreover, note that
                matching axes must have the same <c>type</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.RangeBreaks">
            <summary>
                Gets or sets the RangeBreaks.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.TickSon">
            <summary>
                Determines where ticks and grid lines are drawn with respect to their corresponding
                tick labels. Only has an effect for axes of <c>type</c> <c>category</c>
                or <c>multicategory</c>. When set to <c>boundaries</c>, ticks and grid lines
                are drawn half a category to the left/bottom of labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Mirror">
            <summary>
                Determines if the axis lines or/and ticks are mirrored to the opposite side
                of the plotting area. If <c>true</c>, the axis lines are mirrored. If <c>ticks</c>,
                the axis lines and ticks are mirrored. If <c>false</c>, mirroring is disable.
                If <c>all</c>, axis lines are mirrored on all shared-axes subplots. If <c>allticks</c>,
                axis lines and ticks are mirrored on all shared-axes subplots.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.AutoMargin">
            <summary>
                Determines whether long tick labels automatically grow the figure margins.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.ShowSpikes">
            <summary>
                Determines whether or not spikes (aka droplines) are drawn for this axis.
                Note: This only takes affect when hovermode = closest
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.SpikeColor">
            <summary>
                Sets the spike color. If undefined, will use the series color
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.SpikeThickness">
            <summary>
                Sets the width (in px) of the zero line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.SpikeDash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.SpikeMode">
            <summary>
                Determines the drawing mode for the spike line If <c>toaxis</c>, the line
                is drawn from the data point to the axis the  series is plotted on. If <c>across</c>,
                the line is drawn across the entire plot area, and supercedes <c>toaxis</c>.
                If <c>marker</c>, then a marker dot is drawn on the axis the series is plotted
                on
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.SpikeSnap">
            <summary>
                Determines whether spikelines are stuck to the cursor or to the closest
                datapoints.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.TickFont">
            <summary>
                Sets the tick font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.HoverFormat">
            <summary>
                Sets the hover text formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.ShowLine">
            <summary>
                Determines whether or not a line bounding this axis is drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.LineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.LineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.ShowGrid">
            <summary>
                Determines whether or not grid lines are drawn. If <c>true</c>, the grid
                lines are drawn at every tick mark.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.GridColor">
            <summary>
                Sets the color of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.GridWidth">
            <summary>
                Sets the width (in px) of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.ZeroLine">
            <summary>
                Determines whether or not a line is drawn at along the 0 value of this axis.
                If <c>true</c>, the zero line is drawn on top of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.ZeroLineColor">
            <summary>
                Sets the line color of the zero line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.ZeroLineWidth">
            <summary>
                Sets the width (in px) of the zero line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.ShowDividers">
            <summary>
                Determines whether or not a dividers are drawn between the category levels
                of this axis. Only has an effect on <c>multicategory</c> axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.DividerColor">
            <summary>
                Sets the color of the dividers Only has an effect on <c>multicategory</c>
                axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.DividerWidth">
            <summary>
                Sets the width (in px) of the dividers Only has an effect on <c>multicategory</c>
                axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Anchor">
            <summary>
                If set to an opposite-letter axis id (e.g. <c>x2</c>, <c>y</c>), this axis
                is bound to the corresponding opposite-letter axis. If set to <c>free</c>,
                this axis&#39; position is determined by <c>position</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Side">
            <summary>
                Determines whether a x (y) axis is positioned at the <c>bottom</c> (<c>left</c>)
                or <c>top</c> (<c>right</c>) of the plotting area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Overlaying">
            <summary>
                If set a same-letter axis id, this axis is overlaid on top of the corresponding
                same-letter axis, with traces and axes visible for both axes. If <c>false</c>,
                this axis does not overlay any same-letter axes. In this case, for axes
                with overlapping domains only the highest-numbered axis will be visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Layer">
            <summary>
                Sets the layer on which this axis is displayed. If &#39;above traces&#39;,
                this axis is displayed above all the subplot&#39;s traces If &#39;below
                traces&#39;, this axis is displayed below all the subplot&#39;s traces,
                but above the grid lines. Useful when used together with scatter-like traces
                with <c>cliponaxis</c> set to <c>false</c> to show markers and/or text nodes
                above this axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Domain">
            <summary>
                Sets the domain of this axis (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Position">
            <summary>
                Sets the position of this axis in the plotting space (in normalized coordinates).
                Only has an effect if <c>anchor</c> is set to <c>free</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.CategoryOrder">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>. Set <c>categoryorder</c>
                to &#39;total ascending&#39; or &#39;total descending&#39; if order should
                be determined by the numerical order of the values. Similarly, the order
                can be determined by the min, max, sum, mean or median of all the values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.CategoryArray">
            <summary>
                Sets the order in which categories on this axis appear. Only has an effect
                if <c>categoryorder</c> is set to <c>array</c>. Used with <c>categoryorder</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.UiRevision">
            <summary>
                Controls persistence of user-driven changes in axis <c>range</c>, <c>autorange</c>,
                and <c>title</c> if in &#39;editable: true&#39; configuration. Defaults
                to <c>layout.uirevision</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.Calendar">
            <summary>
                Sets the calendar system to use for <c>range</c> and <c>tick0</c> if this
                is a date axis. This does not set the calendar for interpreting data on
                this axis, that&#39;s specified in the trace or via the global <c>layout.calendar</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxis.CategoryArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  categoryarray .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.AutoRangeEnum">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.CalendarEnum">
            <summary>
                Sets the calendar system to use for <c>range</c> and <c>tick0</c> if this
                is a date axis. This does not set the calendar for interpreting data on
                this axis, that&#39;s specified in the trace or via the global <c>layout.calendar</c>
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.CategoryOrderEnum">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>. Set <c>categoryorder</c>
                to &#39;total ascending&#39; or &#39;total descending&#39; if order should
                be determined by the numerical order of the values. Similarly, the order
                can be determined by the min, max, sum, mean or median of all the values.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.ConstrainEnum">
            <summary>
                If this axis needs to be compressed (either due to its own <c>scaleanchor</c>
                and <c>scaleratio</c> or those of the other axis), determines how that happens:
                by increasing the <c>range</c> (default), or by decreasing the <c>domain</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.ConstrainTowardEnum">
            <summary>
                If this axis needs to be compressed (either due to its own <c>scaleanchor</c>
                and <c>scaleratio</c> or those of the other axis), determines which direction
                we push the originally specified plot area. Options are <c>left</c>, <c>center</c>
                (default), and <c>right</c> for x axes, and <c>top</c>, <c>middle</c> (default),
                and <c>bottom</c> for y axes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.LayerEnum">
            <summary>
                Sets the layer on which this axis is displayed. If &#39;above traces&#39;,
                this axis is displayed above all the subplot&#39;s traces If &#39;below
                traces&#39;, this axis is displayed below all the subplot&#39;s traces,
                but above the grid lines. Useful when used together with scatter-like traces
                with <c>cliponaxis</c> set to <c>false</c> to show markers and/or text nodes
                above this axis.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.MirrorEnum">
            <summary>
                Determines if the axis lines or/and ticks are mirrored to the opposite side
                of the plotting area. If <c>true</c>, the axis lines are mirrored. If <c>ticks</c>,
                the axis lines and ticks are mirrored. If <c>false</c>, mirroring is disable.
                If <c>all</c>, axis lines are mirrored on all shared-axes subplots. If <c>allticks</c>,
                axis lines and ticks are mirrored on all shared-axes subplots.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.RangeBreak">
            <summary>
                The RangeBreak class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.RangeBreak.Enabled">
            <summary>
                Determines whether this axis rangebreak is enabled or disabled. Please note
                that <c>rangebreaks</c> only work for <c>date</c> axis type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.RangeBreak.Bounds">
            <summary>
                Sets the lower and upper bounds of this axis rangebreak. Can be used with
                <c>pattern</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.RangeBreak.Pattern">
            <summary>
                Determines a pattern on the time line that generates breaks. If &#39;day
                of week&#39; - days of the week in English e.g. <c>Sunday</c> or <c>sun</c>
                (matching is case-insensitive and considers only the first three characters),
                as well as Sunday-based integers between 0 and 6. If <c>hour</c> - hour
                (24-hour clock) as decimal numbers between 0 and 24. for more info. Examples:
                - { pattern: &#39;day of week&#39;, bounds: [6, 1] }  or simply { bounds:
                [<c>sat</c>, <c>mon</c>] }   breaks from Saturday to Monday (i.e. skips
                the weekends). - { pattern: <c>hour</c>, bounds: [17, 8] }   breaks from
                5pm to 8am (i.e. skips non-work hours).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.RangeBreak.Values">
            <summary>
                Sets the coordinate values corresponding to the rangebreaks. An alternative
                to <c>bounds</c>. Use <c>dvalue</c> to set the size of the values along
                the axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.RangeBreak.DValue">
            <summary>
                Sets the size of each <c>values</c> item. The default is one day in milliseconds.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.RangeBreak.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.RangeBreak.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.RangeBreakLib.PatternEnum">
            <summary>
                Determines a pattern on the time line that generates breaks. If &#39;day
                of week&#39; - days of the week in English e.g. <c>Sunday</c> or <c>sun</c>
                (matching is case-insensitive and considers only the first three characters),
                as well as Sunday-based integers between 0 and 6. If <c>hour</c> - hour
                (24-hour clock) as decimal numbers between 0 and 24. for more info. Examples:
                - { pattern: &#39;day of week&#39;, bounds: [6, 1] }  or simply { bounds:
                [<c>sat</c>, <c>mon</c>] }   breaks from Saturday to Monday (i.e. skips
                the weekends). - { pattern: <c>hour</c>, bounds: [17, 8] }   breaks from
                5pm to 8am (i.e. skips non-work hours).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.RangeModeEnum">
            <summary>
                If <c>normal</c>, the range is computed in relation to the extrema of the
                input data. If <c>tozero</c>`, the range extends to 0, regardless of the
                input data If <c>nonnegative</c>, the range is non-negative, regardless
                of the input data. Applies only to linear axes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.SideEnum">
            <summary>
                Determines whether a x (y) axis is positioned at the <c>bottom</c> (<c>left</c>)
                or <c>top</c> (<c>right</c>) of the plotting area.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.SpikeModeFlag">
            <summary>
                Determines the drawing mode for the spike line If <c>toaxis</c>, the line
                is drawn from the data point to the axis the  series is plotted on. If <c>across</c>,
                the line is drawn across the entire plot area, and supercedes <c>toaxis</c>.
                If <c>marker</c>, then a marker dot is drawn on the axis the series is plotted
                on
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.SpikeSnapEnum">
            <summary>
                Determines whether spikelines are stuck to the cursor or to the closest
                datapoints.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.TickSonEnum">
            <summary>
                Determines where ticks and grid lines are drawn with respect to their corresponding
                tick labels. Only has an effect for axes of <c>type</c> <c>category</c>
                or <c>multicategory</c>. When set to <c>boundaries</c>, ticks and grid lines
                are drawn half a category to the left/bottom of labels.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.Title.Text">
            <summary>
                Sets the title of this axis. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.Title.Font">
            <summary>
                Sets this axis&#39; title font. Note that the title&#39;s font used to be
                customized by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.Title.Standoff">
            <summary>
                Sets the standoff distance (in px) between the axis labels and the title
                text The default value is a function of the axis tick labels, the title
                <c>font.size</c> and the axis <c>linewidth</c>. Note that the axis title
                position is always constrained within the margins, so the actual standoff
                distance is always less than the set or default value. By setting <c>standoff</c>
                and turning on <c>automargin</c>, plotly.js will push the margins to fit
                the axis title at given standoff distance.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.LayoutLib.YAxisLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.LayoutLib.YAxisLib.TypeEnum">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="M:Plotly.Blazor.PlotlyConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Plotly.Blazor.PlotlyConverter.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Plotly.Blazor.PlotlyJsInterop">
            <summary>
                Allows JsInterop functionality for Plotly.js
            </summary>
        </member>
        <member name="M:Plotly.Blazor.PlotlyJsInterop.NewPlot(Microsoft.JSInterop.IJSRuntime,Microsoft.JSInterop.DotNetObjectReference{Plotly.Blazor.PlotlyChart})">
            <summary>
            Draws a new plot in an div element, overwriting any existing plot.
            To update an existing plot in a div, it is much more efficient to use <see cref="M:Plotly.Blazor.PlotlyJsInterop.React(Microsoft.JSInterop.IJSRuntime,Microsoft.JSInterop.DotNetObjectReference{Plotly.Blazor.PlotlyChart})" /> than to overwrite it.
            </summary>
            <param name="jsRuntime">The js runtime.</param>
            <param name="objectReference">The object reference.</param>
        </member>
        <member name="M:Plotly.Blazor.PlotlyJsInterop.React(Microsoft.JSInterop.IJSRuntime,Microsoft.JSInterop.DotNetObjectReference{Plotly.Blazor.PlotlyChart})">
            <summary>
            Can be used in its place to create a plot, but when called again on the same div will update it far more
            efficiently than <see cref="M:Plotly.Blazor.PlotlyJsInterop.NewPlot(Microsoft.JSInterop.IJSRuntime,Microsoft.JSInterop.DotNetObjectReference{Plotly.Blazor.PlotlyChart})" />.
            </summary>
            <param name="jsRuntime">The js runtime.</param>
            <param name="objectReference">The object reference.</param>
        </member>
        <member name="M:Plotly.Blazor.PolymorphicConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Plotly.Blazor.PolymorphicConverter.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Plotly.Blazor.Traces.Area">
            <summary>
                The Area class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.R">
            <summary>
                Area traces are deprecated! Please switch to the <c>barpolar</c> trace type.
                Sets the radial coordinates for legacy polar chart only.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.T">
            <summary>
                Area traces are deprecated! Please switch to the <c>barpolar</c> trace type.
                Sets the angular coordinates for legacy polar chart only.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.RSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  r .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Area.TSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  t .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.AreaLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.AreaLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.AreaLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.AreaLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.AreaLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.Marker.Color">
            <summary>
                Area traces are deprecated! Please switch to the <c>barpolar</c> trace type.
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.Marker.ColorArray">
            <summary>
                Area traces are deprecated! Please switch to the <c>barpolar</c> trace type.
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.Marker.Size">
            <summary>
                Area traces are deprecated! Please switch to the <c>barpolar</c> trace type.
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.Marker.SizeArray">
            <summary>
                Area traces are deprecated! Please switch to the <c>barpolar</c> trace type.
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.Marker.Symbol">
            <summary>
                Area traces are deprecated! Please switch to the <c>barpolar</c> trace type.
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.Marker.SymbolArray">
            <summary>
                Area traces are deprecated! Please switch to the <c>barpolar</c> trace type.
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.Marker.Opacity">
            <summary>
                Area traces are deprecated! Please switch to the <c>barpolar</c> trace type.
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.Marker.OpacityArray">
            <summary>
                Area traces are deprecated! Please switch to the <c>barpolar</c> trace type.
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.Marker.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.Marker.SymbolSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  symbol .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.AreaLib.MarkerLib.SymbolEnum">
            <summary>
                Area traces are deprecated! Please switch to the <c>barpolar</c> trace type.
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.AreaLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.AreaLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.AreaLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Bar">
            <summary>
                The Bar class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.X">
            <summary>
                Sets the x coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.X0">
            <summary>
                Alternate to <c>x</c>. Builds a linear space of x coordinates. Use with
                <c>dx</c> where <c>x0</c> is the starting coordinate and <c>dx</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.DX">
            <summary>
                Sets the x coordinate step. See <c>x0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Y">
            <summary>
                Sets the y coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Y0">
            <summary>
                Alternate to <c>y</c>. Builds a linear space of y coordinates. Use with
                <c>dy</c> where <c>y0</c> is the starting coordinate and <c>dy</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Dy">
            <summary>
                Sets the y coordinate step. See <c>y0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Text">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.TextArray">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>value</c> and <c>label</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>value</c> and <c>label</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.HoverText">
            <summary>
                Sets hover text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.HoverTextArray">
            <summary>
                Sets hover text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>value</c>
                and <c>label</c>. Anything contained in tag <c>&lt;extra&gt;</c> is displayed
                in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>value</c>
                and <c>label</c>. Anything contained in tag <c>&lt;extra&gt;</c> is displayed
                in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.TextPosition">
            <summary>
                Specifies the location of the <c>text</c>. <c>inside</c> positions <c>text</c>
                inside, next to the bar end (rotated and scaled if needed). <c>outside</c>
                positions <c>text</c> outside, next to the bar end (scaled if needed), unless
                there is another bar stacked on this one, then the text gets pushed inside.
                <c>auto</c> tries to position <c>text</c> inside the bar, but if the bar
                is too small and no bar is stacked on this one the text is moved outside.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.TextPositionArray">
            <summary>
                Specifies the location of the <c>text</c>. <c>inside</c> positions <c>text</c>
                inside, next to the bar end (rotated and scaled if needed). <c>outside</c>
                positions <c>text</c> outside, next to the bar end (scaled if needed), unless
                there is another bar stacked on this one, then the text gets pushed inside.
                <c>auto</c> tries to position <c>text</c> inside the bar, but if the bar
                is too small and no bar is stacked on this one the text is moved outside.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.InsideTextAnchor">
            <summary>
                Determines if texts are kept at center or start/end points in <c>textposition</c>
                <c>inside</c> mode.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.TextAngle">
            <summary>
                Sets the angle of the tick labels with respect to the bar. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically. With <c>auto</c>
                the texts may automatically be rotated to fit with the maximum size in bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.TextFont">
            <summary>
                Sets the font used for <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.InsideTextFont">
            <summary>
                Sets the font used for <c>text</c> lying inside the bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.OutsideTextFont">
            <summary>
                Sets the font used for <c>text</c> lying outside the bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.ConstrainText">
            <summary>
                Constrain the size of text inside or outside a bar to be no larger than
                the bar itself.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.ClipOnAxis">
            <summary>
                Determines whether the text nodes are clipped about the subplot axes. To
                show the text nodes above axis lines and tick labels, make sure to set <c>xaxis.layer</c>
                and <c>yaxis.layer</c> to &#39;below traces&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Orientation">
            <summary>
                Sets the orientation of the bars. With <c>v</c> (<c>h</c>), the value of
                the each bar spans along the vertical (horizontal).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Base">
            <summary>
                Sets where the bar base is drawn (in position axis units). In <c>stack</c>
                or <c>relative</c> barmode, traces that set <c>base</c> will be excluded
                and drawn in <c>overlay</c> mode instead.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.BaseArray">
            <summary>
                Sets where the bar base is drawn (in position axis units). In <c>stack</c>
                or <c>relative</c> barmode, traces that set <c>base</c> will be excluded
                and drawn in <c>overlay</c> mode instead.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Offset">
            <summary>
                Shifts the position where the bar is drawn (in position axis units). In
                <c>group</c> barmode, traces that set <c>offset</c> will be excluded and
                drawn in <c>overlay</c> mode instead.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.OffsetArray">
            <summary>
                Shifts the position where the bar is drawn (in position axis units). In
                <c>group</c> barmode, traces that set <c>offset</c> will be excluded and
                drawn in <c>overlay</c> mode instead.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Width">
            <summary>
                Sets the bar width (in position axis units).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.WidthArray">
            <summary>
                Sets the bar width (in position axis units).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.OffsetGroup">
            <summary>
                Set several traces linked to the same position axis or matching axes to
                the same offsetgroup where bars of the same position coordinate will line
                up.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.AlignmentGroup">
            <summary>
                Set several traces linked to the same position axis or matching axes to
                the same alignmentgroup. This controls whether bars compute their positional
                range dependently or independently.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.R">
            <summary>
                r coordinates in scatter traces are deprecated!Please switch to the <c>scatterpolar</c>
                trace type.Sets the radial coordinatesfor legacy polar chart only.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.T">
            <summary>
                t coordinates in scatter traces are deprecated!Please switch to the <c>scatterpolar</c>
                trace type.Sets the angular coordinatesfor legacy polar chart only.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.ErrorX">
            <summary>
                Gets or sets the ErrorX.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.ErrorY">
            <summary>
                Gets or sets the ErrorY.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.XCalendar">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.YCalendar">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.TextPositionSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  textposition .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.BaseSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  base .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.OffsetSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  offset .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.RSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  r .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Bar.TSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  t .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.ConstrainTextEnum">
            <summary>
                Constrain the size of text inside or outside a bar to be no larger than
                the bar itself.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.ErrorX">
            <summary>
                The ErrorX class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorX.Visible">
            <summary>
                Determines whether or not this set of error bars is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorX.Type">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorX.Symmetric">
            <summary>
                Determines whether or not the error bars have the same length in both direction
                (top/bottom for vertical bars, left/right for horizontal bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorX.Array">
            <summary>
                Sets the data corresponding the length of each error bar. Values are plotted
                relative to the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorX.ArrayMinus">
            <summary>
                Sets the data corresponding the length of each error bar in the bottom (left)
                direction for vertical (horizontal) bars Values are plotted relative to
                the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorX.Value">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorX.ValueMinus">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars in the bottom (left) direction for vertical
                (horizontal) bars
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorX.TraceRef">
            <summary>
                Gets or sets the TraceRef.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorX.TraceRefMinus">
            <summary>
                Gets or sets the TraceRefMinus.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorX.CopyYStyle">
            <summary>
                Gets or sets the CopyYStyle.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorX.Color">
            <summary>
                Sets the stoke color of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorX.Thickness">
            <summary>
                Sets the thickness (in px) of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorX.Width">
            <summary>
                Sets the width (in px) of the cross-bar at both ends of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorX.ArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  array .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorX.ArrayMinusSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  arrayminus .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.ErrorXLib.TypeEnum">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.ErrorY">
            <summary>
                The ErrorY class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorY.Visible">
            <summary>
                Determines whether or not this set of error bars is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorY.Type">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorY.Symmetric">
            <summary>
                Determines whether or not the error bars have the same length in both direction
                (top/bottom for vertical bars, left/right for horizontal bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorY.Array">
            <summary>
                Sets the data corresponding the length of each error bar. Values are plotted
                relative to the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorY.ArrayMinus">
            <summary>
                Sets the data corresponding the length of each error bar in the bottom (left)
                direction for vertical (horizontal) bars Values are plotted relative to
                the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorY.Value">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorY.ValueMinus">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars in the bottom (left) direction for vertical
                (horizontal) bars
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorY.TraceRef">
            <summary>
                Gets or sets the TraceRef.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorY.TraceRefMinus">
            <summary>
                Gets or sets the TraceRefMinus.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorY.Color">
            <summary>
                Sets the stoke color of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorY.Thickness">
            <summary>
                Sets the thickness (in px) of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorY.Width">
            <summary>
                Sets the width (in px) of the cross-bar at both ends of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorY.ArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  array .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.ErrorY.ArrayMinusSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  arrayminus .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.ErrorYLib.TypeEnum">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.InsideTextAnchorEnum">
            <summary>
                Determines if texts are kept at center or start/end points in <c>textposition</c>
                <c>inside</c> mode.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.InsideTextFont">
            <summary>
                The InsideTextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.InsideTextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.InsideTextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.InsideTextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.InsideTextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.InsideTextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.InsideTextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.InsideTextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.InsideTextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.InsideTextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.ColorArray">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.color</c>) or the bounds set in <c>marker.cmin</c>
                and <c>marker.cmax</c>  Has an effect only if in <c>marker.color</c>is set
                to a numerical array. Defaults to <c>false</c> when <c>marker.cmin</c> and
                <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>marker.color</c>is set to a numerical array. Value should have the
                same units as in <c>marker.color</c>. Has no effect when <c>marker.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.color</c>is set
                to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.cmin</c>
                and <c>marker.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if in <c>marker.color</c>is set to a numerical array. In case
                <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true, the default
                 palette will be chosen according to whether numbers in the <c>color</c>
                array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. If true, <c>marker.cmin</c> will correspond to
                the last color in the array and <c>marker.cmax</c> will correspond to the
                first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>marker.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.Opacity">
            <summary>
                Sets the opacity of the bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.OpacityArray">
            <summary>
                Sets the opacity of the bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.line.color</c>) or the bounds set in <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>  Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Defaults to <c>false</c> when <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.line.cmin</c>
                and/or <c>marker.line.cmax</c> to be equidistant to this point. Has an effect
                only if in <c>marker.line.color</c>is set to a numerical array. Value should
                have the same units as in <c>marker.line.color</c>. Has no effect when <c>marker.line.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.line.colorscale</c>. Has
                an effect only if in <c>marker.line.color</c>is set to a numerical array.
                In case <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true,
                the default  palette will be chosen according to whether numbers in the
                <c>color</c> array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. If true, <c>marker.line.cmin</c> will correspond
                to the last color in the array and <c>marker.line.cmax</c> will correspond
                to the first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.OrientationEnum">
            <summary>
                Sets the orientation of the bars. With <c>v</c> (<c>h</c>), the value of
                the each bar spans along the vertical (horizontal).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.OutsideTextFont">
            <summary>
                The OutsideTextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.OutsideTextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.OutsideTextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.OutsideTextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.OutsideTextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.OutsideTextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.OutsideTextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.OutsideTextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.OutsideTextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.OutsideTextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Selected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.SelectedLib.Marker.Color">
            <summary>
                Sets the marker color of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.SelectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.SelectedLib.TextFont.Color">
            <summary>
                Sets the text font color of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.TextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.TextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.TextPositionEnum">
            <summary>
                Specifies the location of the <c>text</c>. <c>inside</c> positions <c>text</c>
                inside, next to the bar end (rotated and scaled if needed). <c>outside</c>
                positions <c>text</c> outside, next to the bar end (scaled if needed), unless
                there is another bar stacked on this one, then the text gets pushed inside.
                <c>auto</c> tries to position <c>text</c> inside the bar, but if the bar
                is too small and no bar is stacked on this one the text is moved outside.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.Unselected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.UnselectedLib.Marker.Color">
            <summary>
                Sets the marker color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.UnselectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarLib.UnselectedLib.TextFont.Color">
            <summary>
                Sets the text font color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.XCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarLib.YCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolar">
            <summary>
                The BarPolar class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.R">
            <summary>
                Sets the radial coordinates
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Theta">
            <summary>
                Sets the angular coordinates
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.R0">
            <summary>
                Alternate to <c>r</c>. Builds a linear space of r coordinates. Use with
                <c>dr</c> where <c>r0</c> is the starting coordinate and <c>dr</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Dr">
            <summary>
                Sets the r coordinate step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Theta0">
            <summary>
                Alternate to <c>theta</c>. Builds a linear space of theta coordinates. Use
                with <c>dtheta</c> where <c>theta0</c> is the starting coordinate and <c>dtheta</c>
                the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.DTheta">
            <summary>
                Sets the theta coordinate step. By default, the <c>dtheta</c> step equals
                the subplot&#39;s period divided by the length of the <c>r</c> coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.ThetaUnit">
            <summary>
                Sets the unit of input <c>theta</c> values. Has an effect only when on <c>linear</c>
                angular axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Base">
            <summary>
                Sets where the bar base is drawn (in radial axis units). In <c>stack</c>
                barmode, traces that set <c>base</c> will be excluded and drawn in <c>overlay</c>
                mode instead.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.BaseArray">
            <summary>
                Sets where the bar base is drawn (in radial axis units). In <c>stack</c>
                barmode, traces that set <c>base</c> will be excluded and drawn in <c>overlay</c>
                mode instead.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Offset">
            <summary>
                Shifts the angular position where the bar is drawn (in <c>thetatunit</c>
                units).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.OffsetArray">
            <summary>
                Shifts the angular position where the bar is drawn (in <c>thetatunit</c>
                units).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Width">
            <summary>
                Sets the bar angular width (in <c>thetaunit</c> units).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.WidthArray">
            <summary>
                Sets the bar angular width (in <c>thetaunit</c> units).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Text">
            <summary>
                Sets hover text elements associated with each bar. If a single string, the
                same string appears over all bars. If an array of string, the items are
                mapped in order to the this trace&#39;s coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.TextArray">
            <summary>
                Sets hover text elements associated with each bar. If a single string, the
                same string appears over all bars. If an array of string, the items are
                mapped in order to the this trace&#39;s coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.HoverTextArray">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.Subplot">
            <summary>
                Sets a reference between this trace&#39;s data coordinates and a polar subplot.
                If <c>polar</c> (the default value), the data refer to <c>layout.polar</c>.
                If <c>polar2</c>, the data refer to <c>layout.polar2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.RSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  r .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.ThetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  theta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.BaseSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  base .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.OffsetSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  offset .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolar.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.ColorArray">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.color</c>) or the bounds set in <c>marker.cmin</c>
                and <c>marker.cmax</c>  Has an effect only if in <c>marker.color</c>is set
                to a numerical array. Defaults to <c>false</c> when <c>marker.cmin</c> and
                <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>marker.color</c>is set to a numerical array. Value should have the
                same units as in <c>marker.color</c>. Has no effect when <c>marker.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.color</c>is set
                to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.cmin</c>
                and <c>marker.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if in <c>marker.color</c>is set to a numerical array. In case
                <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true, the default
                 palette will be chosen according to whether numbers in the <c>color</c>
                array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. If true, <c>marker.cmin</c> will correspond to
                the last color in the array and <c>marker.cmax</c> will correspond to the
                first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>marker.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.Opacity">
            <summary>
                Sets the opacity of the bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.OpacityArray">
            <summary>
                Sets the opacity of the bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.line.color</c>) or the bounds set in <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>  Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Defaults to <c>false</c> when <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.line.cmin</c>
                and/or <c>marker.line.cmax</c> to be equidistant to this point. Has an effect
                only if in <c>marker.line.color</c>is set to a numerical array. Value should
                have the same units as in <c>marker.line.color</c>. Has no effect when <c>marker.line.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.line.colorscale</c>. Has
                an effect only if in <c>marker.line.color</c>is set to a numerical array.
                In case <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true,
                the default  palette will be chosen according to whether numbers in the
                <c>color</c> array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. If true, <c>marker.line.cmin</c> will correspond
                to the last color in the array and <c>marker.line.cmax</c> will correspond
                to the first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Selected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.SelectedLib.Marker.Color">
            <summary>
                Sets the marker color of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.SelectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.SelectedLib.TextFont.Color">
            <summary>
                Sets the text font color of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.ThetaUnitEnum">
            <summary>
                Sets the unit of input <c>theta</c> values. Has an effect only when on <c>linear</c>
                angular axes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.Unselected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.UnselectedLib.Marker.Color">
            <summary>
                Sets the marker color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.UnselectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BarPolarLib.UnselectedLib.TextFont.Color">
            <summary>
                Sets the text font color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BarPolarLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Box">
            <summary>
                The Box class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Y">
            <summary>
                Sets the y sample data or coordinates. See overview for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.X">
            <summary>
                Sets the x sample data or coordinates. See overview for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.X0">
            <summary>
                Sets the x coordinate for single-box traces or the starting coordinate for
                multi-box traces set using q1/median/q3. See overview for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Y0">
            <summary>
                Sets the y coordinate for single-box traces or the starting coordinate for
                multi-box traces set using q1/median/q3. See overview for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.DX">
            <summary>
                Sets the x coordinate step for multi-box traces set using q1/median/q3.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Dy">
            <summary>
                Sets the y coordinate step for multi-box traces set using q1/median/q3.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
                For box traces, the name will also be used for the position coordinate,
                if <c>x</c> and <c>x0</c> (<c>y</c> and <c>y0</c> if horizontal) are missing
                and the position axis is categorical
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Q1">
            <summary>
                Sets the Quartile 1 values. There should be as many items as the number
                of boxes desired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Median">
            <summary>
                Sets the median values. There should be as many items as the number of boxes
                desired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Q3">
            <summary>
                Sets the Quartile 3 values. There should be as many items as the number
                of boxes desired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.LowerFence">
            <summary>
                Sets the lower fence values. There should be as many items as the number
                of boxes desired. This attribute has effect only under the q1/median/q3
                signature. If <c>lowerfence</c> is not provided but a sample (in <c>y</c>
                or <c>x</c>) is set, we compute the lower as the last sample point below
                1.5 times the IQR.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.UpperFence">
            <summary>
                Sets the upper fence values. There should be as many items as the number
                of boxes desired. This attribute has effect only under the q1/median/q3
                signature. If <c>upperfence</c> is not provided but a sample (in <c>y</c>
                or <c>x</c>) is set, we compute the lower as the last sample point above
                1.5 times the IQR.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Notched">
            <summary>
                Determines whether or not notches are drawn. Notches displays a confidence
                interval around the median. We compute the confidence interval as median
                +/- 1.57 * IQR / sqrt(N), where IQR is the interquartile range and N is
                the sample size. If two boxes&#39; notches do not overlap there is 95% confidence
                their medians differ. See https://sites.google.com/site/davidsstatistics/home/notched-box-plots
                for more info. Defaults to <c>false</c> unless <c>notchwidth</c> or <c>notchspan</c>
                is set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.NotchWidth">
            <summary>
                Sets the width of the notches relative to the box&#39; width. For example,
                with 0, the notches are as wide as the box(es).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.NotchSpan">
            <summary>
                Sets the notch span from the boxes&#39; <c>median</c> values. There should
                be as many items as the number of boxes desired. This attribute has effect
                only under the q1/median/q3 signature. If <c>notchspan</c> is not provided
                but a sample (in <c>y</c> or <c>x</c>) is set, we compute it as 1.57 * IQR
                / sqrt(N), where N is the sample size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.BoxPoints">
            <summary>
                If <c>outliers</c>, only the sample points lying outside the whiskers are
                shown If <c>suspectedoutliers</c>, the outlier points are shown and points
                either less than 4<c>Q1-3</c>Q3 or greater than 4<c>Q3-3</c>Q1 are highlighted
                (see <c>outliercolor</c>) If <c>all</c>, all sample points are shown If
                <c>false</c>, only the box(es) are shown with no sample points Defaults
                to <c>suspectedoutliers</c> when <c>marker.outliercolor</c> or <c>marker.line.outliercolor</c>
                is set. Defaults to <c>all</c> under the q1/median/q3 signature. Otherwise
                defaults to <c>outliers</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Jitter">
            <summary>
                Sets the amount of jitter in the sample points drawn. If <c>0</c>, the sample
                points align along the distribution axis. If <c>1</c>, the sample points
                are drawn in a random jitter of width equal to the width of the box(es).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.PointPos">
            <summary>
                Sets the position of the sample points in relation to the box(es). If <c>0</c>,
                the sample points are places over the center of the box(es). Positive (negative)
                values correspond to positions to the right (left) for vertical boxes and
                above (below) for horizontal boxes
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.BoxMean">
            <summary>
                If <c>true</c>, the mean of the box(es)&#39; underlying distribution is
                drawn as a dashed line inside the box(es). If <c>sd</c> the standard deviation
                is also drawn. Defaults to <c>true</c> when <c>mean</c> is set. Defaults
                to <c>sd</c> when <c>sd</c> is set Otherwise defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Mean">
            <summary>
                Sets the mean values. There should be as many items as the number of boxes
                desired. This attribute has effect only under the q1/median/q3 signature.
                If <c>mean</c> is not provided but a sample (in <c>y</c> or <c>x</c>) is
                set, we compute the mean for each box using the sample values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.SD">
            <summary>
                Sets the standard deviation values. There should be as many items as the
                number of boxes desired. This attribute has effect only under the q1/median/q3
                signature. If <c>sd</c> is not provided but a sample (in <c>y</c> or <c>x</c>)
                is set, we compute the standard deviation for each box using the sample
                values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Orientation">
            <summary>
                Sets the orientation of the box(es). If <c>v</c> (<c>h</c>), the distribution
                is visualized along the vertical (horizontal).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.QuartileMethod">
            <summary>
                Sets the method used to compute the sample&#39;s Q1 and Q3 quartiles. The
                <c>linear</c> method uses the 25th percentile for Q1 and 75th percentile
                for Q3 as computed using method #10 (listed on http://www.amstat.org/publications/jse/v14n3/langford.html).
                The <c>exclusive</c> method uses the median to divide the ordered dataset
                into two halves if the sample is odd, it does not include the median in
                either half - Q1 is then the median of the lower half and Q3 the median
                of the upper half. The <c>inclusive</c> method also uses the median to divide
                the ordered dataset into two halves but if the sample is odd, it includes
                the median in both halves - Q1 is then the median of the lower half and
                Q3 the median of the upper half.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Width">
            <summary>
                Sets the width of the box in data coordinate If <c>0</c> (default value)
                the width is automatically selected based on the positions of other box
                traces in the same subplot.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.FillColor">
            <summary>
                Sets the fill color. Defaults to a half-transparent variant of the line
                color, marker color, or marker line color, whichever is available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.WhiskerWidth">
            <summary>
                Sets the width of the whiskers relative to the box&#39; width. For example,
                with 1, the whiskers are as wide as the box(es).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.OffsetGroup">
            <summary>
                Set several traces linked to the same position axis or matching axes to
                the same offsetgroup where bars of the same position coordinate will line
                up.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.AlignmentGroup">
            <summary>
                Set several traces linked to the same position axis or matching axes to
                the same alignmentgroup. This controls whether bars compute their positional
                range dependently or independently.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Text">
            <summary>
                Sets the text elements associated with each sample value. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.TextArray">
            <summary>
                Sets the text elements associated with each sample value. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.HoverTextArray">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.HoverOn">
            <summary>
                Do the hover effects highlight individual boxes  or sample points or both?
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.XCalendar">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.YCalendar">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Q1Src">
            <summary>
                Sets the source reference on Chart Studio Cloud for  q1 .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.MedianSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  median .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.Q3Src">
            <summary>
                Sets the source reference on Chart Studio Cloud for  q3 .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.LowerFenceSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  lowerfence .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.UpperFenceSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  upperfence .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.NotchSpanSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  notchspan .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.MeanSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  mean .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.SdSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  sd .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Box.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.BoxMeanEnum">
            <summary>
                If <c>true</c>, the mean of the box(es)&#39; underlying distribution is
                drawn as a dashed line inside the box(es). If <c>sd</c> the standard deviation
                is also drawn. Defaults to <c>true</c> when <c>mean</c> is set. Defaults
                to <c>sd</c> when <c>sd</c> is set Otherwise defaults to <c>false</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.BoxPointsEnum">
            <summary>
                If <c>outliers</c>, only the sample points lying outside the whiskers are
                shown If <c>suspectedoutliers</c>, the outlier points are shown and points
                either less than 4<c>Q1-3</c>Q3 or greater than 4<c>Q3-3</c>Q1 are highlighted
                (see <c>outliercolor</c>) If <c>all</c>, all sample points are shown If
                <c>false</c>, only the box(es) are shown with no sample points Defaults
                to <c>suspectedoutliers</c> when <c>marker.outliercolor</c> or <c>marker.line.outliercolor</c>
                is set. Defaults to <c>all</c> under the q1/median/q3 signature. Otherwise
                defaults to <c>outliers</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.HoverOnFlag">
            <summary>
                Do the hover effects highlight individual boxes  or sample points or both?
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.Line.Color">
            <summary>
                Sets the color of line bounding the box(es).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.Line.Width">
            <summary>
                Sets the width (in px) of line bounding the box(es).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.Marker.OutlierColor">
            <summary>
                Sets the color of the outlier sample points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.Marker.Symbol">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.Marker.Opacity">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.Marker.Size">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.MarkerLib.Line.OutlierColor">
            <summary>
                Sets the border line color of the outlier sample points. Defaults to marker.color
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.MarkerLib.Line.OutlierWidth">
            <summary>
                Sets the border line width (in px) of the outlier sample points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.MarkerLib.SymbolEnum">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.OrientationEnum">
            <summary>
                Sets the orientation of the box(es). If <c>v</c> (<c>h</c>), the distribution
                is visualized along the vertical (horizontal).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.QuartileMethodEnum">
            <summary>
                Sets the method used to compute the sample&#39;s Q1 and Q3 quartiles. The
                <c>linear</c> method uses the 25th percentile for Q1 and 75th percentile
                for Q3 as computed using method #10 (listed on http://www.amstat.org/publications/jse/v14n3/langford.html).
                The <c>exclusive</c> method uses the median to divide the ordered dataset
                into two halves if the sample is odd, it does not include the median in
                either half - Q1 is then the median of the lower half and Q3 the median
                of the upper half. The <c>inclusive</c> method also uses the median to divide
                the ordered dataset into two halves but if the sample is odd, it includes
                the median in both halves - Q1 is then the median of the lower half and
                Q3 the median of the upper half.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.SelectedLib.Marker.Color">
            <summary>
                Sets the marker color of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.SelectedLib.Marker.Size">
            <summary>
                Sets the marker size of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.UnselectedLib.Marker.Color">
            <summary>
                Sets the marker color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.BoxLib.UnselectedLib.Marker.Size">
            <summary>
                Sets the marker size of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.XCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.BoxLib.YCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Candlestick">
            <summary>
                The Candlestick class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.X">
            <summary>
                Sets the x coordinates. If absent, linear coordinate will be generated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.Open">
            <summary>
                Sets the open values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.High">
            <summary>
                Sets the high values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.Low">
            <summary>
                Sets the low values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.Close">
            <summary>
                Sets the close values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.Increasing">
            <summary>
                Gets or sets the Increasing.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.Decreasing">
            <summary>
                Gets or sets the Decreasing.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.Text">
            <summary>
                Sets hover text elements associated with each sample point. If a single
                string, the same string appears over all the data points. If an array of
                string, the items are mapped in order to this trace&#39;s sample points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.TextArray">
            <summary>
                Sets hover text elements associated with each sample point. If a single
                string, the same string appears over all the data points. If an array of
                string, the items are mapped in order to this trace&#39;s sample points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.HoverTextArray">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.WhiskerWidth">
            <summary>
                Sets the width of the whiskers relative to the box&#39; width. For example,
                with 1, the whiskers are as wide as the box(es).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.XCalendar">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.OpenSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  open .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.HighSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  high .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.LowSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  low .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.CloseSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  close .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Candlestick.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CandlestickLib.Decreasing">
            <summary>
                The Decreasing class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.Decreasing.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.Decreasing.FillColor">
            <summary>
                Sets the fill color. Defaults to a half-transparent variant of the line
                color, marker color, or marker line color, whichever is available.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CandlestickLib.DecreasingLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.DecreasingLib.Line.Color">
            <summary>
                Sets the color of line bounding the box(es).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.DecreasingLib.Line.Width">
            <summary>
                Sets the width (in px) of line bounding the box(es).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CandlestickLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CandlestickLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabel.Split">
            <summary>
                Show hover information (open, close, high, low) in separate labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CandlestickLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CandlestickLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CandlestickLib.Increasing">
            <summary>
                The Increasing class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.Increasing.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.Increasing.FillColor">
            <summary>
                Sets the fill color. Defaults to a half-transparent variant of the line
                color, marker color, or marker line color, whichever is available.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CandlestickLib.IncreasingLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.IncreasingLib.Line.Color">
            <summary>
                Sets the color of line bounding the box(es).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.IncreasingLib.Line.Width">
            <summary>
                Sets the width (in px) of line bounding the box(es).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CandlestickLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.Line.Width">
            <summary>
                Sets the width (in px) of line bounding the box(es). Note that this style
                setting can also be set per direction via <c>increasing.line.width</c> and
                <c>decreasing.line.width</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CandlestickLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CandlestickLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CandlestickLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CandlestickLib.XCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Carpet">
            <summary>
                The Carpet class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet._Carpet">
            <summary>
                An identifier for this carpet, so that <c>scattercarpet</c> and <c>contourcarpet</c>
                traces can specify a carpet plot on which they lie
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.X">
            <summary>
                A two dimensional array of x coordinates at each carpet point. If ommitted,
                the plot is a cheater plot and the xaxis is hidden by default.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.Y">
            <summary>
                A two dimensional array of y coordinates at each carpet point.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.A">
            <summary>
                An array containing values of the first parameter value
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.A0">
            <summary>
                Alternate to <c>a</c>. Builds a linear space of a coordinates. Use with
                <c>da</c> where <c>a0</c> is the starting coordinate and <c>da</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.DA">
            <summary>
                Sets the a coordinate step. See <c>a0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.B">
            <summary>
                A two dimensional array of y coordinates at each carpet point.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.B0">
            <summary>
                Alternate to <c>b</c>. Builds a linear space of a coordinates. Use with
                <c>db</c> where <c>b0</c> is the starting coordinate and <c>db</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.Db">
            <summary>
                Sets the b coordinate step. See <c>b0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.CheaterSlope">
            <summary>
                The shift applied to each successive row of data in creating a cheater plot.
                Only used if <c>x</c> is been ommitted.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.AAxis">
            <summary>
                Gets or sets the AAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.BAxis">
            <summary>
                Gets or sets the BAxis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.Font">
            <summary>
                The default font used for axis &amp; tick labels on this carpet
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.Color">
            <summary>
                Sets default for all colors associated with this axis all at once: line,
                font, tick, and grid colors. Grid color is lightened by blending this with
                the plot background Individual pieces can override this.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.ASrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  a .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Carpet.BSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  b .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxis">
            <summary>
                The AAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.Color">
            <summary>
                Sets default for all colors associated with this axis all at once: line,
                font, tick, and grid colors. Grid color is lightened by blending this with
                the plot background Individual pieces can override this.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.Smoothing">
            <summary>
                Gets or sets the Smoothing.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.Type">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.AutoRange">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.RangeMode">
            <summary>
                If <c>normal</c>, the range is computed in relation to the extrema of the
                input data. If <c>tozero</c>`, the range extends to 0, regardless of the
                input data If <c>nonnegative</c>, the range is non-negative, regardless
                of the input data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.Range">
            <summary>
                Sets the range of this axis. If the axis <c>type</c> is <c>log</c>, then
                you must take the log of your desired range (e.g. to set the range from
                1 to 100, set the range from 0 to 2). If the axis <c>type</c> is <c>date</c>,
                it should be date strings, like date data, though Date objects and unix
                milliseconds will be accepted and converted to strings. If the axis <c>type</c>
                is <c>category</c>, it should be numbers, using the scale where each category
                is assigned a serial number from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.FixedRange">
            <summary>
                Determines whether or not this axis is zoom-able. If true, then zoom is
                disabled.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.CheaterType">
            <summary>
                Gets or sets the CheaterType.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.TickMode">
            <summary>
                Gets or sets the TickMode.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.ShowTickLabels">
            <summary>
                Determines whether axis labels are drawn on the low side, the high side,
                both, or neither side of the axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.TickFont">
            <summary>
                Sets the tick font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see:  We add one item to d3&#39;s date formatter: <c>%{n}f</c>
                for fractional seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39;
                with tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.CategoryOrder">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.CategoryArray">
            <summary>
                Sets the order in which categories on this axis appear. Only has an effect
                if <c>categoryorder</c> is set to <c>array</c>. Used with <c>categoryorder</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.LabelPadding">
            <summary>
                Extra padding between label and the axis
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.LabelPrefix">
            <summary>
                Sets a axis label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.LabelSuffix">
            <summary>
                Sets a axis label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.ShowLine">
            <summary>
                Determines whether or not a line bounding this axis is drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.LineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.LineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.GridColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.GridWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.ShowGrid">
            <summary>
                Determines whether or not grid lines are drawn. If <c>true</c>, the grid
                lines are drawn at every tick mark.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.MinorGridCount">
            <summary>
                Sets the number of minor grid ticks per major grid tick
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.MinorGridWidth">
            <summary>
                Sets the width (in px) of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.MinorGridColor">
            <summary>
                Sets the color of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.StartLine">
            <summary>
                Determines whether or not a line is drawn at along the starting value of
                this axis. If <c>true</c>, the start line is drawn on top of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.StartLineColor">
            <summary>
                Sets the line color of the start line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.StartLineWidth">
            <summary>
                Sets the width (in px) of the start line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.EndLine">
            <summary>
                Determines whether or not a line is drawn at along the final value of this
                axis. If <c>true</c>, the end line is drawn on top of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.EndlineWidth">
            <summary>
                Sets the width (in px) of the end line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.EndlineColor">
            <summary>
                Sets the line color of the end line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.Tick0">
            <summary>
                The starting index of grid lines along the axis
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.DTick">
            <summary>
                The stride between grid lines along the axis
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.ArrayTick0">
            <summary>
                The starting index of grid lines along the axis
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.ArrayDTick">
            <summary>
                The stride between grid lines along the axis
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxis.CategoryArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  categoryarray .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxisLib.AutoRangeEnum">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxisLib.CategoryOrderEnum">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxisLib.CheaterTypeEnum">
            <summary>
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxisLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxisLib.RangeModeEnum">
            <summary>
                If <c>normal</c>, the range is computed in relation to the extrema of the
                input data. If <c>tozero</c>`, the range extends to 0, regardless of the
                input data If <c>nonnegative</c>, the range is non-negative, regardless
                of the input data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxisLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxisLib.ShowTickLabelsEnum">
            <summary>
                Determines whether axis labels are drawn on the low side, the high side,
                both, or neither side of the axis.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxisLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxisLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TickModeEnum">
            <summary>
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxisLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxisLib.Title.Text">
            <summary>
                Sets the title of this axis. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxisLib.Title.Font">
            <summary>
                Sets this axis&#39; title font. Note that the title&#39;s font used to be
                set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxisLib.Title.Offset">
            <summary>
                An additional amount by which to offset the title from the tick labels,
                given in pixels. Note that this used to be set by the now deprecated <c>titleoffset</c>
                attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.AAxisLib.TypeEnum">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxis">
            <summary>
                The BAxis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.Color">
            <summary>
                Sets default for all colors associated with this axis all at once: line,
                font, tick, and grid colors. Grid color is lightened by blending this with
                the plot background Individual pieces can override this.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.Smoothing">
            <summary>
                Gets or sets the Smoothing.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.Type">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.AutoRange">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.RangeMode">
            <summary>
                If <c>normal</c>, the range is computed in relation to the extrema of the
                input data. If <c>tozero</c>`, the range extends to 0, regardless of the
                input data If <c>nonnegative</c>, the range is non-negative, regardless
                of the input data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.Range">
            <summary>
                Sets the range of this axis. If the axis <c>type</c> is <c>log</c>, then
                you must take the log of your desired range (e.g. to set the range from
                1 to 100, set the range from 0 to 2). If the axis <c>type</c> is <c>date</c>,
                it should be date strings, like date data, though Date objects and unix
                milliseconds will be accepted and converted to strings. If the axis <c>type</c>
                is <c>category</c>, it should be numbers, using the scale where each category
                is assigned a serial number from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.FixedRange">
            <summary>
                Determines whether or not this axis is zoom-able. If true, then zoom is
                disabled.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.CheaterType">
            <summary>
                Gets or sets the CheaterType.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.TickMode">
            <summary>
                Gets or sets the TickMode.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.ShowTickLabels">
            <summary>
                Determines whether axis labels are drawn on the low side, the high side,
                both, or neither side of the axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.TickFont">
            <summary>
                Sets the tick font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see:  We add one item to d3&#39;s date formatter: <c>%{n}f</c>
                for fractional seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39;
                with tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.CategoryOrder">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.CategoryArray">
            <summary>
                Sets the order in which categories on this axis appear. Only has an effect
                if <c>categoryorder</c> is set to <c>array</c>. Used with <c>categoryorder</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.LabelPadding">
            <summary>
                Extra padding between label and the axis
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.LabelPrefix">
            <summary>
                Sets a axis label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.LabelSuffix">
            <summary>
                Sets a axis label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.ShowLine">
            <summary>
                Determines whether or not a line bounding this axis is drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.LineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.LineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.GridColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.GridWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.ShowGrid">
            <summary>
                Determines whether or not grid lines are drawn. If <c>true</c>, the grid
                lines are drawn at every tick mark.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.MinorGridCount">
            <summary>
                Sets the number of minor grid ticks per major grid tick
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.MinorGridWidth">
            <summary>
                Sets the width (in px) of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.MinorGridColor">
            <summary>
                Sets the color of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.StartLine">
            <summary>
                Determines whether or not a line is drawn at along the starting value of
                this axis. If <c>true</c>, the start line is drawn on top of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.StartLineColor">
            <summary>
                Sets the line color of the start line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.StartLineWidth">
            <summary>
                Sets the width (in px) of the start line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.EndLine">
            <summary>
                Determines whether or not a line is drawn at along the final value of this
                axis. If <c>true</c>, the end line is drawn on top of the grid lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.EndlineWidth">
            <summary>
                Sets the width (in px) of the end line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.EndlineColor">
            <summary>
                Sets the line color of the end line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.Tick0">
            <summary>
                The starting index of grid lines along the axis
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.DTick">
            <summary>
                The stride between grid lines along the axis
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.ArrayTick0">
            <summary>
                The starting index of grid lines along the axis
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.ArrayDTick">
            <summary>
                The stride between grid lines along the axis
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxis.CategoryArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  categoryarray .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxisLib.AutoRangeEnum">
            <summary>
                Determines whether or not the range of this axis is computed in relation
                to the input data. See <c>rangemode</c> for more info. If <c>range</c> is
                provided, then <c>autorange</c> is set to <c>false</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxisLib.CategoryOrderEnum">
            <summary>
                Specifies the ordering logic for the case of categorical variables. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxisLib.CheaterTypeEnum">
            <summary>
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxisLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxisLib.RangeModeEnum">
            <summary>
                If <c>normal</c>, the range is computed in relation to the extrema of the
                input data. If <c>tozero</c>`, the range extends to 0, regardless of the
                input data If <c>nonnegative</c>, the range is non-negative, regardless
                of the input data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxisLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxisLib.ShowTickLabelsEnum">
            <summary>
                Determines whether axis labels are drawn on the low side, the high side,
                both, or neither side of the axis.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxisLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxisLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TickModeEnum">
            <summary>
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxisLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxisLib.Title.Text">
            <summary>
                Sets the title of this axis. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxisLib.Title.Font">
            <summary>
                Sets this axis&#39; title font. Note that the title&#39;s font used to be
                set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxisLib.Title.Offset">
            <summary>
                An additional amount by which to offset the title from the tick labels,
                given in pixels. Note that this used to be set by the now deprecated <c>titleoffset</c>
                attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.BAxisLib.TypeEnum">
            <summary>
                Sets the axis type. By default, plotly attempts to determined the axis type
                by looking into the data of the traces that referenced the axis in question.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.CarpetLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.CarpetLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Choropleth">
            <summary>
                The Choropleth class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.Locations">
            <summary>
                Sets the coordinates via location IDs or names. See <c>locationmode</c>
                for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.LocationMode">
            <summary>
                Determines the set of locations used to match entries in <c>locations</c>
                to regions on the map. Values <c>ISO-3</c>, <c>USA-states</c>, &#39;country
                names&#39; correspond to features on the base map and value <c>geojson-id</c>
                corresponds to features from a custom GeoJSON linked to the <c>geojson</c>
                attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.Z">
            <summary>
                Sets the color values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.GeoJson">
            <summary>
                Sets optional GeoJSON data associated with this trace. If not given, the
                features on the base map are used. It can be set as a valid GeoJSON object
                or as a URL string. Note that we only accept GeoJSONs of type <c>FeatureCollection</c>
                or <c>Feature</c> with geometries of type <c>Polygon</c> or <c>MultiPolygon</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.FeatureIdKey">
            <summary>
                Sets the key in GeoJSON features which is used as id to match the items
                included in the <c>locations</c> array. Only has an effect when <c>geojson</c>
                is set. Support nested property, for example <c>properties.name</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.Text">
            <summary>
                Sets the text elements associated with each location.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.TextArray">
            <summary>
                Sets the text elements associated with each location.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.HoverTextArray">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.ZAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>z</c>) or the bounds set in <c>zmin</c> and <c>zmax</c>
                 Defaults to <c>false</c> when <c>zmin</c> and <c>zmax</c> are set by the
                user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.ZMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.ZMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.ZMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>zmin</c> and/or <c>zmax</c>
                to be equidistant to this point. Value should have the same units as in
                <c>z</c>. Has no effect when <c>zauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>zmin</c> and
                <c>zmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>zmin</c> will correspond
                to the last color in the array and <c>zmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.Geo">
            <summary>
                Sets a reference between this trace&#39;s geospatial coordinates and a geographic
                map. If <c>geo</c> (the default value), the geospatial coordinates refer
                to <c>layout.geo</c>. If <c>geo2</c>, the geospatial coordinates refer to
                <c>layout.geo2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.LocationsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  locations .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Choropleth.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.LocationModeEnum">
            <summary>
                Determines the set of locations used to match entries in <c>locations</c>
                to regions on the map. Values <c>ISO-3</c>, <c>USA-states</c>, &#39;country
                names&#39; correspond to features on the base map and value <c>geojson-id</c>
                corresponds to features from a custom GeoJSON linked to the <c>geojson</c>
                attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.Marker.Opacity">
            <summary>
                Sets the opacity of the locations.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.Marker.OpacityArray">
            <summary>
                Sets the opacity of the locations.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBox">
            <summary>
                The ChoroplethMapBox class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.Locations">
            <summary>
                Sets which features found in <c>geojson</c> to plot using their feature
                <c>id</c> field.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.Z">
            <summary>
                Sets the color values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.GeoJson">
            <summary>
                Sets the GeoJSON data associated with this trace. It can be set as a valid
                GeoJSON object or as a URL string. Note that we only accept GeoJSONs of
                type <c>FeatureCollection</c> or <c>Feature</c> with geometries of type
                <c>Polygon</c> or <c>MultiPolygon</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.FeatureIdKey">
            <summary>
                Sets the key in GeoJSON features which is used as id to match the items
                included in the <c>locations</c> array. Support nested property, for example
                <c>properties.name</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.Below">
            <summary>
                Determines if the choropleth polygons will be inserted before the layer
                with the specified ID. By default, choroplethmapbox traces are placed above
                the water layers. If set to &#39;&#39;, the layer will be inserted above
                every existing layer.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.Text">
            <summary>
                Sets the text elements associated with each location.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.TextArray">
            <summary>
                Sets the text elements associated with each location.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.HoverTextArray">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variable <c>properties</c>
                Anything contained in tag <c>&lt;extra&gt;</c> is displayed in the secondary
                box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide
                the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variable <c>properties</c>
                Anything contained in tag <c>&lt;extra&gt;</c> is displayed in the secondary
                box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide
                the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.ZAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>z</c>) or the bounds set in <c>zmin</c> and <c>zmax</c>
                 Defaults to <c>false</c> when <c>zmin</c> and <c>zmax</c> are set by the
                user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.ZMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.ZMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.ZMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>zmin</c> and/or <c>zmax</c>
                to be equidistant to this point. Value should have the same units as in
                <c>z</c>. Has no effect when <c>zauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>zmin</c> and
                <c>zmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>zmin</c> will correspond
                to the last color in the array and <c>zmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.Subplot">
            <summary>
                Sets a reference between this trace&#39;s data coordinates and a mapbox
                subplot. If <c>mapbox</c> (the default value), the data refer to <c>layout.mapbox</c>.
                If <c>mapbox2</c>, the data refer to <c>layout.mapbox2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.LocationsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  locations .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBox.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.Marker.Opacity">
            <summary>
                Sets the opacity of the locations.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.Marker.OpacityArray">
            <summary>
                Sets the opacity of the locations.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ChoroplethMapBoxLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ChoroplethMapBoxLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Cone">
            <summary>
                The Cone class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.X">
            <summary>
                Sets the x coordinates of the vector field and of the displayed cones.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.Y">
            <summary>
                Sets the y coordinates of the vector field and of the displayed cones.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.Z">
            <summary>
                Sets the z coordinates of the vector field and of the displayed cones.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.U">
            <summary>
                Sets the x components of the vector field.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.V">
            <summary>
                Sets the y components of the vector field.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.W">
            <summary>
                Sets the z components of the vector field.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.SizeMode">
            <summary>
                Determines whether <c>sizeref</c> is set as a <c>scaled</c> (i.e unitless)
                scalar (normalized by the max u/v/w norm in the vector field) or as <c>absolute</c>
                value (in the same units as the vector field).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.SizeRef">
            <summary>
                Adjusts the cone size scaling. The size of the cones is determined by their
                u/v/w norm multiplied a factor and <c>sizeref</c>. This factor (computed
                internally) corresponds to the minimum <c>time</c> to travel across two
                successive x/y/z positions at the average velocity of those two successive
                positions. All cones in a given trace use the same factor. With <c>sizemode</c>
                set to <c>scaled</c>, <c>sizeref</c> is unitless, its default value is <c>0.5</c>
                With <c>sizemode</c> set to <c>absolute</c>, <c>sizeref</c> has the same
                units as the u/v/w vector field, its the default value is half the sample&#39;s
                maximum vector norm.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.Anchor">
            <summary>
                Sets the cones&#39; anchor with respect to their x/y/z positions. Note that
                <c>cm</c> denote the cone&#39;s center of mass which corresponds to 1/4
                from the tail to tip.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.Text">
            <summary>
                Sets the text elements associated with the cones. If trace <c>hoverinfo</c>
                contains a <c>text</c> flag and <c>hovertext</c> is not set, these elements
                will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.TextArray">
            <summary>
                Sets the text elements associated with the cones. If trace <c>hoverinfo</c>
                contains a <c>text</c> flag and <c>hovertext</c> is not set, these elements
                will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.HoverTextArray">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variable <c>norm</c> Anything
                contained in tag <c>&lt;extra&gt;</c> is displayed in the secondary box,
                for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the
                secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variable <c>norm</c> Anything
                contained in tag <c>&lt;extra&gt;</c> is displayed in the secondary box,
                for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the
                secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here u/v/w norm) or the bounds set in <c>cmin</c> and <c>cmax</c>
                 Defaults to <c>false</c> when <c>cmin</c> and <c>cmax</c> are set by the
                user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.CMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as u/v/w norm and if set, <c>cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.CMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as u/v/w norm and if set, <c>cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>cmin</c> and/or <c>cmax</c>
                to be equidistant to this point. Value should have the same units as u/v/w
                norm. Has no effect when <c>cauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>cmin</c> and
                <c>cmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>cmin</c> will correspond
                to the last color in the array and <c>cmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.Opacity">
            <summary>
                Sets the opacity of the surface. Please note that in the case of using high
                <c>opacity</c> values for example a value greater than or equal to 0.5 on
                two surfaces (and 0.25 with four surfaces), an overlay of multiple transparent
                surfaces may not perfectly be sorted in depth by the webgl API. This behavior
                may be improved in the near future and is subject to change.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.LightPosition">
            <summary>
                Gets or sets the LightPosition.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.Lighting">
            <summary>
                Gets or sets the Lighting.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.Scene">
            <summary>
                Sets a reference between this trace&#39;s 3D coordinate system and a 3D
                scene. If <c>scene</c> (the default value), the (x,y,z) coordinates refer
                to <c>layout.scene</c>. If <c>scene2</c>, the (x,y,z) coordinates refer
                to <c>layout.scene2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.USrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  u .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.VSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  v .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.WSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  w .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Cone.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.AnchorEnum">
            <summary>
                Sets the cones&#39; anchor with respect to their x/y/z positions. Note that
                <c>cm</c> denote the cone&#39;s center of mass which corresponds to 1/4
                from the tail to tip.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.Lighting">
            <summary>
                The Lighting class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.Lighting.VertexNormalsEpsilon">
            <summary>
                Epsilon for vertex normals calculation avoids math issues arising from degenerate
                geometry.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.Lighting.FaceNormalsEpsilon">
            <summary>
                Epsilon for face normals calculation avoids math issues arising from degenerate
                geometry.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.Lighting.Ambient">
            <summary>
                Ambient light increases overall color visibility but can wash out the image.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.Lighting.Diffuse">
            <summary>
                Represents the extent that incident rays are reflected in a range of angles.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.Lighting.Specular">
            <summary>
                Represents the level that incident rays are reflected in a single direction,
                causing shine.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.Lighting.Roughness">
            <summary>
                Alters specular reflection; the rougher the surface, the wider and less
                contrasty the shine.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.Lighting.Fresnel">
            <summary>
                Represents the reflectance as a dependency of the viewing angle; e.g. paper
                is reflective when viewing it from the edge of the paper (almost 90 degrees),
                causing shine.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.LightPosition">
            <summary>
                The LightPosition class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.LightPosition.X">
            <summary>
                Numeric vector, representing the X coordinate for each vertex.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.LightPosition.Y">
            <summary>
                Numeric vector, representing the Y coordinate for each vertex.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.LightPosition.Z">
            <summary>
                Numeric vector, representing the Z coordinate for each vertex.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.SizeModeEnum">
            <summary>
                Determines whether <c>sizeref</c> is set as a <c>scaled</c> (i.e unitless)
                scalar (normalized by the max u/v/w norm in the vector field) or as <c>absolute</c>
                value (in the same units as the vector field).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ConeLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ConeLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Contour">
            <summary>
                The Contour class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Z">
            <summary>
                Sets the z data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.X">
            <summary>
                Sets the x coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.X0">
            <summary>
                Alternate to <c>x</c>. Builds a linear space of x coordinates. Use with
                <c>dx</c> where <c>x0</c> is the starting coordinate and <c>dx</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.DX">
            <summary>
                Sets the x coordinate step. See <c>x0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Y">
            <summary>
                Sets the y coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Y0">
            <summary>
                Alternate to <c>y</c>. Builds a linear space of y coordinates. Use with
                <c>dy</c> where <c>y0</c> is the starting coordinate and <c>dy</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Dy">
            <summary>
                Sets the y coordinate step. See <c>y0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Text">
            <summary>
                Sets the text elements associated with each z value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Transpose">
            <summary>
                Transposes the z data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.XType">
            <summary>
                If <c>array</c>, the heatmap&#39;s x coordinates are given by <c>x</c> (the
                default behavior when <c>x</c> is provided). If <c>scaled</c>, the heatmap&#39;s
                x coordinates are given by <c>x0</c> and <c>dx</c> (the default behavior
                when <c>x</c> is not provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.YType">
            <summary>
                If <c>array</c>, the heatmap&#39;s y coordinates are given by <c>y</c> (the
                default behavior when <c>y</c> is provided) If <c>scaled</c>, the heatmap&#39;s
                y coordinates are given by <c>y0</c> and <c>dy</c> (the default behavior
                when <c>y</c> is not provided)
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.ZHoverFormat">
            <summary>
                Sets the hover text formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. See: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.HoverOnGaps">
            <summary>
                Determines whether or not gaps (i.e. {nan} or missing values) in the <c>z</c>
                data have hover labels associated with them.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.ConnectGaps">
            <summary>
                Determines whether or not gaps (i.e. {nan} or missing values) in the <c>z</c>
                data are filled in. It is defaulted to true if <c>z</c> is a one dimensional
                array otherwise it is defaulted to false.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.FillColor">
            <summary>
                Sets the fill color if <c>contours.type</c> is <c>constraint</c>. Defaults
                to a half-transparent variant of the line color, marker color, or marker
                line color, whichever is available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.AutoContour">
            <summary>
                Determines whether or not the contour level attributes are picked by an
                algorithm. If <c>true</c>, the number of contour levels can be set in <c>ncontours</c>.
                If <c>false</c>, set the contour level attributes in <c>contours</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.NContours">
            <summary>
                Sets the maximum number of contour levels. The actual number of contours
                will be chosen automatically to be less than or equal to the value of <c>ncontours</c>.
                Has an effect only if <c>autocontour</c> is <c>true</c> or if <c>contours.size</c>
                is missing.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Contours">
            <summary>
                Gets or sets the Contours.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.ZAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>z</c>) or the bounds set in <c>zmin</c> and <c>zmax</c>
                 Defaults to <c>false</c> when <c>zmin</c> and <c>zmax</c> are set by the
                user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.ZMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.ZMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.ZMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>zmin</c> and/or <c>zmax</c>
                to be equidistant to this point. Value should have the same units as in
                <c>z</c>. Has no effect when <c>zauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>zmin</c> and
                <c>zmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>zmin</c> will correspond
                to the last color in the array and <c>zmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.XCalendar">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.YCalendar">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Contour.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpet">
            <summary>
                The ContourCarpet class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.Carpet">
            <summary>
                The <c>carpet</c> of the carpet axes on which this contour trace lies
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.Z">
            <summary>
                Sets the z data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.A">
            <summary>
                Sets the x coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.A0">
            <summary>
                Alternate to <c>x</c>. Builds a linear space of x coordinates. Use with
                <c>dx</c> where <c>x0</c> is the starting coordinate and <c>dx</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.DA">
            <summary>
                Sets the x coordinate step. See <c>x0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.B">
            <summary>
                Sets the y coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.B0">
            <summary>
                Alternate to <c>y</c>. Builds a linear space of y coordinates. Use with
                <c>dy</c> where <c>y0</c> is the starting coordinate and <c>dy</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.Db">
            <summary>
                Sets the y coordinate step. See <c>y0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.Text">
            <summary>
                Sets the text elements associated with each z value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.Transpose">
            <summary>
                Transposes the z data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.AType">
            <summary>
                If <c>array</c>, the heatmap&#39;s x coordinates are given by <c>x</c> (the
                default behavior when <c>x</c> is provided). If <c>scaled</c>, the heatmap&#39;s
                x coordinates are given by <c>x0</c> and <c>dx</c> (the default behavior
                when <c>x</c> is not provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.BType">
            <summary>
                If <c>array</c>, the heatmap&#39;s y coordinates are given by <c>y</c> (the
                default behavior when <c>y</c> is provided) If <c>scaled</c>, the heatmap&#39;s
                y coordinates are given by <c>y0</c> and <c>dy</c> (the default behavior
                when <c>y</c> is not provided)
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.FillColor">
            <summary>
                Sets the fill color if <c>contours.type</c> is <c>constraint</c>. Defaults
                to a half-transparent variant of the line color, marker color, or marker
                line color, whichever is available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.AutoContour">
            <summary>
                Determines whether or not the contour level attributes are picked by an
                algorithm. If <c>true</c>, the number of contour levels can be set in <c>ncontours</c>.
                If <c>false</c>, set the contour level attributes in <c>contours</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.NContours">
            <summary>
                Sets the maximum number of contour levels. The actual number of contours
                will be chosen automatically to be less than or equal to the value of <c>ncontours</c>.
                Has an effect only if <c>autocontour</c> is <c>true</c> or if <c>contours.size</c>
                is missing.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.Contours">
            <summary>
                Gets or sets the Contours.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.ZAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>z</c>) or the bounds set in <c>zmin</c> and <c>zmax</c>
                 Defaults to <c>false</c> when <c>zmin</c> and <c>zmax</c> are set by the
                user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.ZMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.ZMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.ZMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>zmin</c> and/or <c>zmax</c>
                to be equidistant to this point. Value should have the same units as in
                <c>z</c>. Has no effect when <c>zauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>zmin</c> and
                <c>zmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>zmin</c> will correspond
                to the last color in the array and <c>zmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.ASrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  a .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.BSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  b .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpet.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ATypeEnum">
            <summary>
                If <c>array</c>, the heatmap&#39;s x coordinates are given by <c>x</c> (the
                default behavior when <c>x</c> is provided). If <c>scaled</c>, the heatmap&#39;s
                x coordinates are given by <c>x0</c> and <c>dx</c> (the default behavior
                when <c>x</c> is not provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.BTypeEnum">
            <summary>
                If <c>array</c>, the heatmap&#39;s y coordinates are given by <c>y</c> (the
                default behavior when <c>y</c> is provided) If <c>scaled</c>, the heatmap&#39;s
                y coordinates are given by <c>y0</c> and <c>dy</c> (the default behavior
                when <c>y</c> is not provided)
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.Contours">
            <summary>
                The Contours class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Contours.Type">
            <summary>
                If <c>levels</c>, the data is represented as a contour plot with multiple
                levels displayed. If <c>constraint</c>, the data is represented as constraints
                with the invalid region shaded as specified by the <c>operation</c> and
                <c>value</c> parameters.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Contours.Start">
            <summary>
                Sets the starting contour level value. Must be less than <c>contours.end</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Contours.End">
            <summary>
                Sets the end contour level value. Must be more than <c>contours.start</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Contours.Size">
            <summary>
                Sets the step between each contour level. Must be positive.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Contours.Coloring">
            <summary>
                Determines the coloring method showing the contour values. If <c>fill</c>,
                coloring is done evenly between each contour level If <c>lines</c>, coloring
                is done on the contour lines. If <c>none</c>, no coloring is applied on
                this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Contours.ShowLines">
            <summary>
                Determines whether or not the contour lines are drawn. Has an effect only
                if <c>contours.coloring</c> is set to <c>fill</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Contours.ShowLabels">
            <summary>
                Determines whether to label the contour lines with their values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Contours.LabelFont">
            <summary>
                Sets the font used for labeling the contour levels. The default color comes
                from the lines, if shown. The default family and size come from <c>layout.font</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Contours.LabelFormat">
            <summary>
                Sets the contour label formatting rule using d3 formatting mini-language
                which is very similar to Python, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Contours.Operation">
            <summary>
                Sets the constraint operation. <c>=</c> keeps regions equal to <c>value</c>
                <c>&lt;</c> and <c>&lt;=</c> keep regions less than <c>value</c> <c>&gt;</c>
                and <c>&gt;=</c> keep regions greater than <c>value</c> <c>[]</c>, <c>()</c>,
                <c>[)</c>, and <c>(]</c> keep regions inside <c>value[0]</c> to <c>value[1]</c>
                <c>][</c>, <c>)(</c>, <c>](</c>, <c>)[</c> keep regions outside <c>value[0]</c>
                to value[1]` Open vs. closed intervals make no difference to constraint
                display, but all versions are allowed for consistency with filter transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Contours.Value">
            <summary>
                Sets the value or values of the constraint boundary. When <c>operation</c>
                is set to one of the comparison values (=,&lt;,&gt;=,&gt;,&lt;=) <c>value</c>
                is expected to be a number. When <c>operation</c> is set to one of the interval
                values ([],(),[),(],][,)(,](,)[) <c>value</c> is expected to be an array
                of two numbers where the first is the lower bound and the second is the
                upper bound.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ContoursLib.ColoringEnum">
            <summary>
                Determines the coloring method showing the contour values. If <c>fill</c>,
                coloring is done evenly between each contour level If <c>lines</c>, coloring
                is done on the contour lines. If <c>none</c>, no coloring is applied on
                this trace.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ContoursLib.LabelFont">
            <summary>
                The LabelFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ContoursLib.LabelFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ContoursLib.LabelFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.ContoursLib.LabelFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ContoursLib.OperationEnum">
            <summary>
                Sets the constraint operation. <c>=</c> keeps regions equal to <c>value</c>
                <c>&lt;</c> and <c>&lt;=</c> keep regions less than <c>value</c> <c>&gt;</c>
                and <c>&gt;=</c> keep regions greater than <c>value</c> <c>[]</c>, <c>()</c>,
                <c>[)</c>, and <c>(]</c> keep regions inside <c>value[0]</c> to <c>value[1]</c>
                <c>][</c>, <c>)(</c>, <c>](</c>, <c>)[</c> keep regions outside <c>value[0]</c>
                to value[1]` Open vs. closed intervals make no difference to constraint
                display, but all versions are allowed for consistency with filter transforms.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.ContoursLib.TypeEnum">
            <summary>
                If <c>levels</c>, the data is represented as a contour plot with multiple
                levels displayed. If <c>constraint</c>, the data is represented as constraints
                with the invalid region shaded as specified by the <c>operation</c> and
                <c>value</c> parameters.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Line.Color">
            <summary>
                Sets the color of the contour level. Has no effect if <c>contours.coloring</c>
                is set to <c>lines</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Line.Width">
            <summary>
                Sets the contour line width in (in px) Defaults to <c>0.5</c> when <c>contours.type</c>
                is <c>levels</c>. Defaults to <c>2</c> when <c>contour.type</c> is <c>constraint</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Line.Dash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Line.Smoothing">
            <summary>
                Sets the amount of smoothing for the contour lines, where <c>0</c> corresponds
                to no smoothing.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourCarpetLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourCarpetLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.Contours">
            <summary>
                The Contours class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Contours.Type">
            <summary>
                If <c>levels</c>, the data is represented as a contour plot with multiple
                levels displayed. If <c>constraint</c>, the data is represented as constraints
                with the invalid region shaded as specified by the <c>operation</c> and
                <c>value</c> parameters.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Contours.Start">
            <summary>
                Sets the starting contour level value. Must be less than <c>contours.end</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Contours.End">
            <summary>
                Sets the end contour level value. Must be more than <c>contours.start</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Contours.Size">
            <summary>
                Sets the step between each contour level. Must be positive.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Contours.Coloring">
            <summary>
                Determines the coloring method showing the contour values. If <c>fill</c>,
                coloring is done evenly between each contour level If <c>heatmap</c>, a
                heatmap gradient coloring is applied between each contour level. If <c>lines</c>,
                coloring is done on the contour lines. If <c>none</c>, no coloring is applied
                on this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Contours.ShowLines">
            <summary>
                Determines whether or not the contour lines are drawn. Has an effect only
                if <c>contours.coloring</c> is set to <c>fill</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Contours.ShowLabels">
            <summary>
                Determines whether to label the contour lines with their values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Contours.LabelFont">
            <summary>
                Sets the font used for labeling the contour levels. The default color comes
                from the lines, if shown. The default family and size come from <c>layout.font</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Contours.LabelFormat">
            <summary>
                Sets the contour label formatting rule using d3 formatting mini-language
                which is very similar to Python, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Contours.Operation">
            <summary>
                Sets the constraint operation. <c>=</c> keeps regions equal to <c>value</c>
                <c>&lt;</c> and <c>&lt;=</c> keep regions less than <c>value</c> <c>&gt;</c>
                and <c>&gt;=</c> keep regions greater than <c>value</c> <c>[]</c>, <c>()</c>,
                <c>[)</c>, and <c>(]</c> keep regions inside <c>value[0]</c> to <c>value[1]</c>
                <c>][</c>, <c>)(</c>, <c>](</c>, <c>)[</c> keep regions outside <c>value[0]</c>
                to value[1]` Open vs. closed intervals make no difference to constraint
                display, but all versions are allowed for consistency with filter transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Contours.Value">
            <summary>
                Sets the value or values of the constraint boundary. When <c>operation</c>
                is set to one of the comparison values (=,&lt;,&gt;=,&gt;,&lt;=) <c>value</c>
                is expected to be a number. When <c>operation</c> is set to one of the interval
                values ([],(),[),(],][,)(,](,)[) <c>value</c> is expected to be an array
                of two numbers where the first is the lower bound and the second is the
                upper bound.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ContoursLib.ColoringEnum">
            <summary>
                Determines the coloring method showing the contour values. If <c>fill</c>,
                coloring is done evenly between each contour level If <c>heatmap</c>, a
                heatmap gradient coloring is applied between each contour level. If <c>lines</c>,
                coloring is done on the contour lines. If <c>none</c>, no coloring is applied
                on this trace.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ContoursLib.LabelFont">
            <summary>
                The LabelFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ContoursLib.LabelFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ContoursLib.LabelFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.ContoursLib.LabelFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ContoursLib.OperationEnum">
            <summary>
                Sets the constraint operation. <c>=</c> keeps regions equal to <c>value</c>
                <c>&lt;</c> and <c>&lt;=</c> keep regions less than <c>value</c> <c>&gt;</c>
                and <c>&gt;=</c> keep regions greater than <c>value</c> <c>[]</c>, <c>()</c>,
                <c>[)</c>, and <c>(]</c> keep regions inside <c>value[0]</c> to <c>value[1]</c>
                <c>][</c>, <c>)(</c>, <c>](</c>, <c>)[</c> keep regions outside <c>value[0]</c>
                to value[1]` Open vs. closed intervals make no difference to constraint
                display, but all versions are allowed for consistency with filter transforms.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.ContoursLib.TypeEnum">
            <summary>
                If <c>levels</c>, the data is represented as a contour plot with multiple
                levels displayed. If <c>constraint</c>, the data is represented as constraints
                with the invalid region shaded as specified by the <c>operation</c> and
                <c>value</c> parameters.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Line.Color">
            <summary>
                Sets the color of the contour level. Has no effect if <c>contours.coloring</c>
                is set to <c>lines</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Line.Width">
            <summary>
                Sets the contour line width in (in px) Defaults to <c>0.5</c> when <c>contours.type</c>
                is <c>levels</c>. Defaults to <c>2</c> when <c>contour.type</c> is <c>constraint</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Line.Dash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Line.Smoothing">
            <summary>
                Sets the amount of smoothing for the contour lines, where <c>0</c> corresponds
                to no smoothing.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ContourLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.XCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.XTypeEnum">
            <summary>
                If <c>array</c>, the heatmap&#39;s x coordinates are given by <c>x</c> (the
                default behavior when <c>x</c> is provided). If <c>scaled</c>, the heatmap&#39;s
                x coordinates are given by <c>x0</c> and <c>dx</c> (the default behavior
                when <c>x</c> is not provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.YCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ContourLib.YTypeEnum">
            <summary>
                If <c>array</c>, the heatmap&#39;s y coordinates are given by <c>y</c> (the
                default behavior when <c>y</c> is provided) If <c>scaled</c>, the heatmap&#39;s
                y coordinates are given by <c>y0</c> and <c>dy</c> (the default behavior
                when <c>y</c> is not provided)
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBox">
            <summary>
                The DensityMapBox class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.Lon">
            <summary>
                Sets the longitude coordinates (in degrees East).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.Lat">
            <summary>
                Sets the latitude coordinates (in degrees North).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.Z">
            <summary>
                Sets the points&#39; weight. For example, a value of 10 would be equivalent
                to having 10 points of weight 1 in the same spot
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.Radius">
            <summary>
                Sets the radius of influence of one <c>lon</c> / <c>lat</c> point in pixels.
                Increasing the value makes the densitymapbox trace smoother, but less detailed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.RadiusArray">
            <summary>
                Sets the radius of influence of one <c>lon</c> / <c>lat</c> point in pixels.
                Increasing the value makes the densitymapbox trace smoother, but less detailed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.Below">
            <summary>
                Determines if the densitymapbox trace will be inserted before the layer
                with the specified ID. By default, densitymapbox traces are placed below
                the first layer of type symbol If set to &#39;&#39;, the layer will be inserted
                above every existing layer.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.Text">
            <summary>
                Sets text elements associated with each (lon,lat) pair If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (lon,lat) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.TextArray">
            <summary>
                Sets text elements associated with each (lon,lat) pair If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (lon,lat) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.HoverText">
            <summary>
                Sets hover text elements associated with each (lon,lat) pair If a single
                string, the same string appears over all the data points. If an array of
                string, the items are mapped in order to the this trace&#39;s (lon,lat)
                coordinates. To be seen, trace <c>hoverinfo</c> must contain a <c>text</c>
                flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.HoverTextArray">
            <summary>
                Sets hover text elements associated with each (lon,lat) pair If a single
                string, the same string appears over all the data points. If an array of
                string, the items are mapped in order to the this trace&#39;s (lon,lat)
                coordinates. To be seen, trace <c>hoverinfo</c> must contain a <c>text</c>
                flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.ZAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>z</c>) or the bounds set in <c>zmin</c> and <c>zmax</c>
                 Defaults to <c>false</c> when <c>zmin</c> and <c>zmax</c> are set by the
                user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.ZMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.ZMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.ZMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>zmin</c> and/or <c>zmax</c>
                to be equidistant to this point. Value should have the same units as in
                <c>z</c>. Has no effect when <c>zauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>zmin</c> and
                <c>zmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>zmin</c> will correspond
                to the last color in the array and <c>zmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.Subplot">
            <summary>
                Sets a reference between this trace&#39;s data coordinates and a mapbox
                subplot. If <c>mapbox</c> (the default value), the data refer to <c>layout.mapbox</c>.
                If <c>mapbox2</c>, the data refer to <c>layout.mapbox2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.LonSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  lon .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.LatSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  lat .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.RadiusSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  radius .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBox.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.DensityMapBoxLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.DensityMapBoxLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Funnel">
            <summary>
                The Funnel class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.X">
            <summary>
                Sets the x coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.X0">
            <summary>
                Alternate to <c>x</c>. Builds a linear space of x coordinates. Use with
                <c>dx</c> where <c>x0</c> is the starting coordinate and <c>dx</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.DX">
            <summary>
                Sets the x coordinate step. See <c>x0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Y">
            <summary>
                Sets the y coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Y0">
            <summary>
                Alternate to <c>y</c>. Builds a linear space of y coordinates. Use with
                <c>dy</c> where <c>y0</c> is the starting coordinate and <c>dy</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Dy">
            <summary>
                Sets the y coordinate step. See <c>y0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.HoverText">
            <summary>
                Sets hover text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.HoverTextArray">
            <summary>
                Sets hover text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>percentInitial</c>,
                <c>percentPrevious</c> and <c>percentTotal</c>. Anything contained in tag
                <c>&lt;extra&gt;</c> is displayed in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>percentInitial</c>,
                <c>percentPrevious</c> and <c>percentTotal</c>. Anything contained in tag
                <c>&lt;extra&gt;</c> is displayed in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.TextInfo">
            <summary>
                Determines which trace information appear on the graph. In the case of having
                multiple funnels, percentages &amp; totals are computed separately (per
                trace).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>percentInitial</c>, <c>percentPrevious</c>, <c>percentTotal</c>,
                <c>label</c> and <c>value</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>percentInitial</c>, <c>percentPrevious</c>, <c>percentTotal</c>,
                <c>label</c> and <c>value</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Text">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.TextArray">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.TextPosition">
            <summary>
                Specifies the location of the <c>text</c>. <c>inside</c> positions <c>text</c>
                inside, next to the bar end (rotated and scaled if needed). <c>outside</c>
                positions <c>text</c> outside, next to the bar end (scaled if needed), unless
                there is another bar stacked on this one, then the text gets pushed inside.
                <c>auto</c> tries to position <c>text</c> inside the bar, but if the bar
                is too small and no bar is stacked on this one the text is moved outside.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.TextPositionArray">
            <summary>
                Specifies the location of the <c>text</c>. <c>inside</c> positions <c>text</c>
                inside, next to the bar end (rotated and scaled if needed). <c>outside</c>
                positions <c>text</c> outside, next to the bar end (scaled if needed), unless
                there is another bar stacked on this one, then the text gets pushed inside.
                <c>auto</c> tries to position <c>text</c> inside the bar, but if the bar
                is too small and no bar is stacked on this one the text is moved outside.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.InsideTextAnchor">
            <summary>
                Determines if texts are kept at center or start/end points in <c>textposition</c>
                <c>inside</c> mode.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.TextAngle">
            <summary>
                Sets the angle of the tick labels with respect to the bar. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically. With <c>auto</c>
                the texts may automatically be rotated to fit with the maximum size in bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.TextFont">
            <summary>
                Sets the font used for <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.InsideTextFont">
            <summary>
                Sets the font used for <c>text</c> lying inside the bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.OutsideTextFont">
            <summary>
                Sets the font used for <c>text</c> lying outside the bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.ConstrainText">
            <summary>
                Constrain the size of text inside or outside a bar to be no larger than
                the bar itself.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.ClipOnAxis">
            <summary>
                Determines whether the text nodes are clipped about the subplot axes. To
                show the text nodes above axis lines and tick labels, make sure to set <c>xaxis.layer</c>
                and <c>yaxis.layer</c> to &#39;below traces&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Orientation">
            <summary>
                Sets the orientation of the funnels. With <c>v</c> (<c>h</c>), the value
                of the each bar spans along the vertical (horizontal). By default funnels
                are tend to be oriented horizontally; unless only <c>y</c> array is presented
                or orientation is set to <c>v</c>. Also regarding graphs including only
                <c>horizontal</c> funnels, <c>autorange</c> on the <c>y-axis</c> are set
                to <c>reversed</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Offset">
            <summary>
                Shifts the position where the bar is drawn (in position axis units). In
                <c>group</c> barmode, traces that set <c>offset</c> will be excluded and
                drawn in <c>overlay</c> mode instead.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Width">
            <summary>
                Sets the bar width (in position axis units).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.Connector">
            <summary>
                Gets or sets the Connector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.OffsetGroup">
            <summary>
                Set several traces linked to the same position axis or matching axes to
                the same offsetgroup where bars of the same position coordinate will line
                up.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.AlignmentGroup">
            <summary>
                Set several traces linked to the same position axis or matching axes to
                the same alignmentgroup. This controls whether bars compute their positional
                range dependently or independently.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Funnel.TextPositionSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  textposition .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelArea">
            <summary>
                The FunnelArea class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.Labels">
            <summary>
                Sets the sector labels. If <c>labels</c> entries are duplicated, we sum
                associated <c>values</c> or simply count occurrences if <c>values</c> is
                not provided. For other array attributes (including color) we use the first
                non-empty entry among all occurrences of the label.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.Label0">
            <summary>
                Alternate to <c>labels</c>. Builds a numeric set of labels. Use with <c>dlabel</c>
                where <c>label0</c> is the starting label and <c>dlabel</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.DLabel">
            <summary>
                Sets the label step. See <c>label0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.Values">
            <summary>
                Sets the values of the sectors. If omitted, we count occurrences of each
                label.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.Text">
            <summary>
                Sets text elements associated with each sector. If trace <c>textinfo</c>
                contains a <c>text</c> flag, these elements will be seen on the chart. If
                trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.HoverText">
            <summary>
                Sets hover text elements associated with each sector. If a single string,
                the same string appears for all data points. If an array of string, the
                items are mapped in order of this trace&#39;s sectors. To be seen, trace
                <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.HoverTextArray">
            <summary>
                Sets hover text elements associated with each sector. If a single string,
                the same string appears for all data points. If an array of string, the
                items are mapped in order of this trace&#39;s sectors. To be seen, trace
                <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.ScaleGroup">
            <summary>
                If there are multiple funnelareas that should be sized according to their
                totals, link them by providing a non-empty group id here shared by every
                trace in the same group.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.TextInfo">
            <summary>
                Determines which trace information appear on the graph.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>label</c>, <c>color</c>, <c>value</c>, <c>text</c> and <c>percent</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>label</c>, <c>color</c>, <c>value</c>, <c>text</c> and <c>percent</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>label</c>,
                <c>color</c>, <c>value</c>, <c>text</c> and <c>percent</c>. Anything contained
                in tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>label</c>,
                <c>color</c>, <c>value</c>, <c>text</c> and <c>percent</c>. Anything contained
                in tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.TextPosition">
            <summary>
                Specifies the location of the <c>textinfo</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.TextPositionArray">
            <summary>
                Specifies the location of the <c>textinfo</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.TextFont">
            <summary>
                Sets the font used for <c>textinfo</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.InsideTextFont">
            <summary>
                Sets the font used for <c>textinfo</c> lying inside the sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.Domain">
            <summary>
                Gets or sets the Domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.AspectRatio">
            <summary>
                Sets the ratio between height and width
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.BaseRatio">
            <summary>
                Sets the ratio between bottom length and maximum top length.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.LabelsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  labels .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.ValuesSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  values .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelArea.TextPositionSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  textposition .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.Domain">
            <summary>
                The Domain class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.Domain.X">
            <summary>
                Sets the horizontal domain of this funnelarea trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.Domain.Y">
            <summary>
                Sets the vertical domain of this funnelarea trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.Domain.Row">
            <summary>
                If there is a layout grid, use the domain for this row in the grid for this
                funnelarea trace .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.Domain.Column">
            <summary>
                If there is a layout grid, use the domain for this column in the grid for
                this funnelarea trace .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.InsideTextFont">
            <summary>
                The InsideTextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.InsideTextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.InsideTextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.InsideTextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.InsideTextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.InsideTextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.InsideTextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.InsideTextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.InsideTextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.InsideTextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.Marker.Colors">
            <summary>
                Sets the color of each sector. If not specified, the default trace color
                set is used to pick the sector colors.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.Marker.ColorsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  colors .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.MarkerLib.Line.Color">
            <summary>
                Sets the color of the line enclosing each sector. Defaults to the <c>paper_bgcolor</c>
                value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets the color of the line enclosing each sector. Defaults to the <c>paper_bgcolor</c>
                value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the line enclosing each sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the line enclosing each sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.TextInfoFlag">
            <summary>
                Determines which trace information appear on the graph.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.TextPositionEnum">
            <summary>
                Specifies the location of the <c>textinfo</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.Title.Text">
            <summary>
                Sets the title of the chart. If it is empty, no title is displayed. Note
                that before the existence of <c>title.text</c>, the title&#39;s contents
                used to be defined as the <c>title</c> attribute itself. This behavior has
                been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.Title.Font">
            <summary>
                Sets the font used for <c>title</c>. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.Title.Position">
            <summary>
                Specifies the location of the <c>title</c>. Note that the title&#39;s position
                used to be set by the now deprecated <c>titleposition</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TitleLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TitleLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TitleLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TitleLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TitleLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelAreaLib.TitleLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.TitleLib.PositionEnum">
            <summary>
                Specifies the location of the <c>title</c>. Note that the title&#39;s position
                used to be set by the now deprecated <c>titleposition</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelAreaLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.Connector">
            <summary>
                The Connector class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Connector.FillColor">
            <summary>
                Sets the fill color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Connector.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Connector.Visible">
            <summary>
                Determines if connector regions and lines are drawn.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.ConnectorLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.ConnectorLib.Line.Color">
            <summary>
                Sets the line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.ConnectorLib.Line.Width">
            <summary>
                Sets the line width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.ConnectorLib.Line.Dash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.ConstrainTextEnum">
            <summary>
                Constrain the size of text inside or outside a bar to be no larger than
                the bar itself.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.InsideTextAnchorEnum">
            <summary>
                Determines if texts are kept at center or start/end points in <c>textposition</c>
                <c>inside</c> mode.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.InsideTextFont">
            <summary>
                The InsideTextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.InsideTextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.InsideTextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.InsideTextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.InsideTextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.InsideTextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.InsideTextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.InsideTextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.InsideTextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.InsideTextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.ColorArray">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.color</c>) or the bounds set in <c>marker.cmin</c>
                and <c>marker.cmax</c>  Has an effect only if in <c>marker.color</c>is set
                to a numerical array. Defaults to <c>false</c> when <c>marker.cmin</c> and
                <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>marker.color</c>is set to a numerical array. Value should have the
                same units as in <c>marker.color</c>. Has no effect when <c>marker.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.color</c>is set
                to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.cmin</c>
                and <c>marker.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if in <c>marker.color</c>is set to a numerical array. In case
                <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true, the default
                 palette will be chosen according to whether numbers in the <c>color</c>
                array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. If true, <c>marker.cmin</c> will correspond to
                the last color in the array and <c>marker.cmax</c> will correspond to the
                first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>marker.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.Opacity">
            <summary>
                Sets the opacity of the bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.OpacityArray">
            <summary>
                Sets the opacity of the bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.line.color</c>) or the bounds set in <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>  Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Defaults to <c>false</c> when <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.line.cmin</c>
                and/or <c>marker.line.cmax</c> to be equidistant to this point. Has an effect
                only if in <c>marker.line.color</c>is set to a numerical array. Value should
                have the same units as in <c>marker.line.color</c>. Has no effect when <c>marker.line.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.line.colorscale</c>. Has
                an effect only if in <c>marker.line.color</c>is set to a numerical array.
                In case <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true,
                the default  palette will be chosen according to whether numbers in the
                <c>color</c> array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. If true, <c>marker.line.cmin</c> will correspond
                to the last color in the array and <c>marker.line.cmax</c> will correspond
                to the first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.OrientationEnum">
            <summary>
                Sets the orientation of the funnels. With <c>v</c> (<c>h</c>), the value
                of the each bar spans along the vertical (horizontal). By default funnels
                are tend to be oriented horizontally; unless only <c>y</c> array is presented
                or orientation is set to <c>v</c>. Also regarding graphs including only
                <c>horizontal</c> funnels, <c>autorange</c> on the <c>y-axis</c> are set
                to <c>reversed</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.OutsideTextFont">
            <summary>
                The OutsideTextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.OutsideTextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.OutsideTextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.OutsideTextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.OutsideTextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.OutsideTextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.OutsideTextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.OutsideTextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.OutsideTextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.OutsideTextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.TextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.TextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.FunnelLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.TextInfoFlag">
            <summary>
                Determines which trace information appear on the graph. In the case of having
                multiple funnels, percentages &amp; totals are computed separately (per
                trace).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.TextPositionEnum">
            <summary>
                Specifies the location of the <c>text</c>. <c>inside</c> positions <c>text</c>
                inside, next to the bar end (rotated and scaled if needed). <c>outside</c>
                positions <c>text</c> outside, next to the bar end (scaled if needed), unless
                there is another bar stacked on this one, then the text gets pushed inside.
                <c>auto</c> tries to position <c>text</c> inside the bar, but if the bar
                is too small and no bar is stacked on this one the text is moved outside.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.FunnelLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMap">
            <summary>
                The HeatMap class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.Z">
            <summary>
                Sets the z data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.X">
            <summary>
                Sets the x coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.X0">
            <summary>
                Alternate to <c>x</c>. Builds a linear space of x coordinates. Use with
                <c>dx</c> where <c>x0</c> is the starting coordinate and <c>dx</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.DX">
            <summary>
                Sets the x coordinate step. See <c>x0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.Y">
            <summary>
                Sets the y coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.Y0">
            <summary>
                Alternate to <c>y</c>. Builds a linear space of y coordinates. Use with
                <c>dy</c> where <c>y0</c> is the starting coordinate and <c>dy</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.Dy">
            <summary>
                Sets the y coordinate step. See <c>y0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.Text">
            <summary>
                Sets the text elements associated with each z value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.Transpose">
            <summary>
                Transposes the z data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.XType">
            <summary>
                If <c>array</c>, the heatmap&#39;s x coordinates are given by <c>x</c> (the
                default behavior when <c>x</c> is provided). If <c>scaled</c>, the heatmap&#39;s
                x coordinates are given by <c>x0</c> and <c>dx</c> (the default behavior
                when <c>x</c> is not provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.YType">
            <summary>
                If <c>array</c>, the heatmap&#39;s y coordinates are given by <c>y</c> (the
                default behavior when <c>y</c> is provided) If <c>scaled</c>, the heatmap&#39;s
                y coordinates are given by <c>y0</c> and <c>dy</c> (the default behavior
                when <c>y</c> is not provided)
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.ZSmooth">
            <summary>
                Picks a smoothing algorithm use to smooth <c>z</c> data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.HoverOnGaps">
            <summary>
                Determines whether or not gaps (i.e. {nan} or missing values) in the <c>z</c>
                data have hover labels associated with them.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.ConnectGaps">
            <summary>
                Determines whether or not gaps (i.e. {nan} or missing values) in the <c>z</c>
                data are filled in. It is defaulted to true if <c>z</c> is a one dimensional
                array and <c>zsmooth</c> is not false; otherwise it is defaulted to false.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.XGap">
            <summary>
                Sets the horizontal gap (in pixels) between bricks.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.YGap">
            <summary>
                Sets the vertical gap (in pixels) between bricks.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.ZHoverFormat">
            <summary>
                Sets the hover text formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. See: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.ZAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>z</c>) or the bounds set in <c>zmin</c> and <c>zmax</c>
                 Defaults to <c>false</c> when <c>zmin</c> and <c>zmax</c> are set by the
                user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.ZMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.ZMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.ZMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>zmin</c> and/or <c>zmax</c>
                to be equidistant to this point. Value should have the same units as in
                <c>z</c>. Has no effect when <c>zauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>zmin</c> and
                <c>zmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>zmin</c> will correspond
                to the last color in the array and <c>zmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.XCalendar">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.YCalendar">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMap.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGl">
            <summary>
                The HeatMapGl class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.Z">
            <summary>
                Sets the z data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.X">
            <summary>
                Sets the x coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.X0">
            <summary>
                Alternate to <c>x</c>. Builds a linear space of x coordinates. Use with
                <c>dx</c> where <c>x0</c> is the starting coordinate and <c>dx</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.DX">
            <summary>
                Sets the x coordinate step. See <c>x0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.Y">
            <summary>
                Sets the y coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.Y0">
            <summary>
                Alternate to <c>y</c>. Builds a linear space of y coordinates. Use with
                <c>dy</c> where <c>y0</c> is the starting coordinate and <c>dy</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.Dy">
            <summary>
                Sets the y coordinate step. See <c>y0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.Text">
            <summary>
                Sets the text elements associated with each z value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.Transpose">
            <summary>
                Transposes the z data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.XType">
            <summary>
                If <c>array</c>, the heatmap&#39;s x coordinates are given by <c>x</c> (the
                default behavior when <c>x</c> is provided). If <c>scaled</c>, the heatmap&#39;s
                x coordinates are given by <c>x0</c> and <c>dx</c> (the default behavior
                when <c>x</c> is not provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.YType">
            <summary>
                If <c>array</c>, the heatmap&#39;s y coordinates are given by <c>y</c> (the
                default behavior when <c>y</c> is provided) If <c>scaled</c>, the heatmap&#39;s
                y coordinates are given by <c>y0</c> and <c>dy</c> (the default behavior
                when <c>y</c> is not provided)
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.ZAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>z</c>) or the bounds set in <c>zmin</c> and <c>zmax</c>
                 Defaults to <c>false</c> when <c>zmin</c> and <c>zmax</c> are set by the
                user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.ZMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.ZMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.ZMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>zmin</c> and/or <c>zmax</c>
                to be equidistant to this point. Value should have the same units as in
                <c>z</c>. Has no effect when <c>zauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>zmin</c> and
                <c>zmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>zmin</c> will correspond
                to the last color in the array and <c>zmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGl.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapGlLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.XTypeEnum">
            <summary>
                If <c>array</c>, the heatmap&#39;s x coordinates are given by <c>x</c> (the
                default behavior when <c>x</c> is provided). If <c>scaled</c>, the heatmap&#39;s
                x coordinates are given by <c>x0</c> and <c>dx</c> (the default behavior
                when <c>x</c> is not provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapGlLib.YTypeEnum">
            <summary>
                If <c>array</c>, the heatmap&#39;s y coordinates are given by <c>y</c> (the
                default behavior when <c>y</c> is provided) If <c>scaled</c>, the heatmap&#39;s
                y coordinates are given by <c>y0</c> and <c>dy</c> (the default behavior
                when <c>y</c> is not provided)
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HeatMapLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.XCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.XTypeEnum">
            <summary>
                If <c>array</c>, the heatmap&#39;s x coordinates are given by <c>x</c> (the
                default behavior when <c>x</c> is provided). If <c>scaled</c>, the heatmap&#39;s
                x coordinates are given by <c>x0</c> and <c>dx</c> (the default behavior
                when <c>x</c> is not provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.YCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.YTypeEnum">
            <summary>
                If <c>array</c>, the heatmap&#39;s y coordinates are given by <c>y</c> (the
                default behavior when <c>y</c> is provided) If <c>scaled</c>, the heatmap&#39;s
                y coordinates are given by <c>y0</c> and <c>dy</c> (the default behavior
                when <c>y</c> is not provided)
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HeatMapLib.ZSmoothEnum">
            <summary>
                Picks a smoothing algorithm use to smooth <c>z</c> data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram">
            <summary>
                The Histogram class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.X">
            <summary>
                Sets the sample data to be binned on the x axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.Y">
            <summary>
                Sets the sample data to be binned on the y axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.Text">
            <summary>
                Sets hover text elements associated with each bar. If a single string, the
                same string appears over all bars. If an array of string, the items are
                mapped in order to the this trace&#39;s coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.TextArray">
            <summary>
                Sets hover text elements associated with each bar. If a single string, the
                same string appears over all bars. If an array of string, the items are
                mapped in order to the this trace&#39;s coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.HoverTextArray">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.Orientation">
            <summary>
                Sets the orientation of the bars. With <c>v</c> (<c>h</c>), the value of
                the each bar spans along the vertical (horizontal).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.HistFunc">
            <summary>
                Specifies the binning function used for this histogram trace. If <c>count</c>,
                the histogram values are computed by counting the number of values lying
                inside each bin. If <c>sum</c>, <c>avg</c>, <c>min</c>, <c>max</c>, the
                histogram values are computed using the sum, the average, the minimum or
                the maximum of the values lying inside each bin respectively.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.HistNorm">
            <summary>
                Specifies the type of normalization used for this histogram trace. If *&#39;,
                the span of each bar corresponds to the number of occurrences (i.e. the
                number of data points lying inside the bins). If <c>percent</c> / <c>probability</c>,
                the span of each bar corresponds to the percentage / fraction of occurrences
                with respect to the total number of sample points (here, the sum of all
                bin HEIGHTS equals 100% / 1). If <c>density</c>, the span of each bar corresponds
                to the number of occurrences in a bin divided by the size of the bin interval
                (here, the sum of all bin AREAS equals the total number of sample points).
                If &#39;probability density*, the area of each bar corresponds to the probability
                that an event will fall into the corresponding bin (here, the sum of all
                bin AREAS equals 1).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.Cumulative">
            <summary>
                Gets or sets the Cumulative.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.NBinsX">
            <summary>
                Specifies the maximum number of desired bins. This value will be used in
                an algorithm that will decide the optimal bin size such that the histogram
                best visualizes the distribution of the data. Ignored if <c>xbins.size</c>
                is provided.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.XBins">
            <summary>
                Gets or sets the XBins.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.NBinsY">
            <summary>
                Specifies the maximum number of desired bins. This value will be used in
                an algorithm that will decide the optimal bin size such that the histogram
                best visualizes the distribution of the data. Ignored if <c>ybins.size</c>
                is provided.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.YBins">
            <summary>
                Gets or sets the YBins.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.AutoBinX">
            <summary>
                Obsolete: since v1.42 each bin attribute is auto-determined separately and
                <c>autobinx</c> is not needed. However, we accept &#39;autobinx: true&#39;
                or <c>false</c> and will update <c>xbins</c> accordingly before deleting
                <c>autobinx</c> from the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.AutoBinY">
            <summary>
                Obsolete: since v1.42 each bin attribute is auto-determined separately and
                <c>autobiny</c> is not needed. However, we accept &#39;autobiny: true&#39;
                or <c>false</c> and will update <c>ybins</c> accordingly before deleting
                <c>autobiny</c> from the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.BinGroup">
            <summary>
                Set a group of histogram traces which will have compatible bin settings.
                Note that traces on the same subplot and with the same <c>orientation</c>
                under <c>barmode</c> <c>stack</c>, <c>relative</c> and <c>group</c> are
                forced into the same bingroup, Using <c>bingroup</c>, traces under <c>barmode</c>
                <c>overlay</c> and on different axes (of the same axis type) can have compatible
                bin settings. Note that histogram and histogram2d* trace can share the same
                <c>bingroup</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variable <c>binNumber</c>
                Anything contained in tag <c>&lt;extra&gt;</c> is displayed in the secondary
                box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide
                the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variable <c>binNumber</c>
                Anything contained in tag <c>&lt;extra&gt;</c> is displayed in the secondary
                box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide
                the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.OffsetGroup">
            <summary>
                Set several traces linked to the same position axis or matching axes to
                the same offsetgroup where bars of the same position coordinate will line
                up.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.AlignmentGroup">
            <summary>
                Set several traces linked to the same position axis or matching axes to
                the same alignmentgroup. This controls whether bars compute their positional
                range dependently or independently.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.ErrorX">
            <summary>
                Gets or sets the ErrorX.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.ErrorY">
            <summary>
                Gets or sets the ErrorY.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.XCalendar">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.YCalendar">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2D">
            <summary>
                The Histogram2D class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.X">
            <summary>
                Sets the sample data to be binned on the x axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.Y">
            <summary>
                Sets the sample data to be binned on the y axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.Z">
            <summary>
                Sets the aggregation data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.HistNorm">
            <summary>
                Specifies the type of normalization used for this histogram trace. If *&#39;,
                the span of each bar corresponds to the number of occurrences (i.e. the
                number of data points lying inside the bins). If <c>percent</c> / <c>probability</c>,
                the span of each bar corresponds to the percentage / fraction of occurrences
                with respect to the total number of sample points (here, the sum of all
                bin HEIGHTS equals 100% / 1). If <c>density</c>, the span of each bar corresponds
                to the number of occurrences in a bin divided by the size of the bin interval
                (here, the sum of all bin AREAS equals the total number of sample points).
                If &#39;probability density*, the area of each bar corresponds to the probability
                that an event will fall into the corresponding bin (here, the sum of all
                bin AREAS equals 1).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.HistFunc">
            <summary>
                Specifies the binning function used for this histogram trace. If <c>count</c>,
                the histogram values are computed by counting the number of values lying
                inside each bin. If <c>sum</c>, <c>avg</c>, <c>min</c>, <c>max</c>, the
                histogram values are computed using the sum, the average, the minimum or
                the maximum of the values lying inside each bin respectively.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.NBinsX">
            <summary>
                Specifies the maximum number of desired bins. This value will be used in
                an algorithm that will decide the optimal bin size such that the histogram
                best visualizes the distribution of the data. Ignored if <c>xbins.size</c>
                is provided.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.XBins">
            <summary>
                Gets or sets the XBins.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.NBinsY">
            <summary>
                Specifies the maximum number of desired bins. This value will be used in
                an algorithm that will decide the optimal bin size such that the histogram
                best visualizes the distribution of the data. Ignored if <c>ybins.size</c>
                is provided.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.YBins">
            <summary>
                Gets or sets the YBins.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.AutoBinX">
            <summary>
                Obsolete: since v1.42 each bin attribute is auto-determined separately and
                <c>autobinx</c> is not needed. However, we accept &#39;autobinx: true&#39;
                or <c>false</c> and will update <c>xbins</c> accordingly before deleting
                <c>autobinx</c> from the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.AutoBinY">
            <summary>
                Obsolete: since v1.42 each bin attribute is auto-determined separately and
                <c>autobiny</c> is not needed. However, we accept &#39;autobiny: true&#39;
                or <c>false</c> and will update <c>ybins</c> accordingly before deleting
                <c>autobiny</c> from the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.BinGroup">
            <summary>
                Set the <c>xbingroup</c> and <c>ybingroup</c> default prefix For example,
                setting a <c>bingroup</c> of <c>1</c> on two histogram2d traces will make
                them their x-bins and y-bins match separately.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.XBinGroup">
            <summary>
                Set a group of histogram traces which will have compatible x-bin settings.
                Using <c>xbingroup</c>, histogram2d and histogram2dcontour traces  (on axes
                of the same axis type) can have compatible x-bin settings. Note that the
                same <c>xbingroup</c> value can be used to set (1D) histogram <c>bingroup</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.YBinGroup">
            <summary>
                Set a group of histogram traces which will have compatible y-bin settings.
                Using <c>ybingroup</c>, histogram2d and histogram2dcontour traces  (on axes
                of the same axis type) can have compatible y-bin settings. Note that the
                same <c>ybingroup</c> value can be used to set (1D) histogram <c>bingroup</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.XGap">
            <summary>
                Sets the horizontal gap (in pixels) between bricks.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.YGap">
            <summary>
                Sets the vertical gap (in pixels) between bricks.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.ZSmooth">
            <summary>
                Picks a smoothing algorithm use to smooth <c>z</c> data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.ZHoverFormat">
            <summary>
                Sets the hover text formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. See: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variable <c>z</c> Anything
                contained in tag <c>&lt;extra&gt;</c> is displayed in the secondary box,
                for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the
                secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variable <c>z</c> Anything
                contained in tag <c>&lt;extra&gt;</c> is displayed in the secondary box,
                for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the
                secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.ZAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>z</c>) or the bounds set in <c>zmin</c> and <c>zmax</c>
                 Defaults to <c>false</c> when <c>zmin</c> and <c>zmax</c> are set by the
                user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.ZMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.ZMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.ZMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>zmin</c> and/or <c>zmax</c>
                to be equidistant to this point. Value should have the same units as in
                <c>z</c>. Has no effect when <c>zauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>zmin</c> and
                <c>zmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>zmin</c> will correspond
                to the last color in the array and <c>zmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.XCalendar">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.YCalendar">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2D.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContour">
            <summary>
                The Histogram2DContour class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.X">
            <summary>
                Sets the sample data to be binned on the x axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.Y">
            <summary>
                Sets the sample data to be binned on the y axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.Z">
            <summary>
                Sets the aggregation data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.HistNorm">
            <summary>
                Specifies the type of normalization used for this histogram trace. If *&#39;,
                the span of each bar corresponds to the number of occurrences (i.e. the
                number of data points lying inside the bins). If <c>percent</c> / <c>probability</c>,
                the span of each bar corresponds to the percentage / fraction of occurrences
                with respect to the total number of sample points (here, the sum of all
                bin HEIGHTS equals 100% / 1). If <c>density</c>, the span of each bar corresponds
                to the number of occurrences in a bin divided by the size of the bin interval
                (here, the sum of all bin AREAS equals the total number of sample points).
                If &#39;probability density*, the area of each bar corresponds to the probability
                that an event will fall into the corresponding bin (here, the sum of all
                bin AREAS equals 1).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.HistFunc">
            <summary>
                Specifies the binning function used for this histogram trace. If <c>count</c>,
                the histogram values are computed by counting the number of values lying
                inside each bin. If <c>sum</c>, <c>avg</c>, <c>min</c>, <c>max</c>, the
                histogram values are computed using the sum, the average, the minimum or
                the maximum of the values lying inside each bin respectively.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.NBinsX">
            <summary>
                Specifies the maximum number of desired bins. This value will be used in
                an algorithm that will decide the optimal bin size such that the histogram
                best visualizes the distribution of the data. Ignored if <c>xbins.size</c>
                is provided.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.XBins">
            <summary>
                Gets or sets the XBins.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.NBinsY">
            <summary>
                Specifies the maximum number of desired bins. This value will be used in
                an algorithm that will decide the optimal bin size such that the histogram
                best visualizes the distribution of the data. Ignored if <c>ybins.size</c>
                is provided.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.YBins">
            <summary>
                Gets or sets the YBins.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.AutoBinX">
            <summary>
                Obsolete: since v1.42 each bin attribute is auto-determined separately and
                <c>autobinx</c> is not needed. However, we accept &#39;autobinx: true&#39;
                or <c>false</c> and will update <c>xbins</c> accordingly before deleting
                <c>autobinx</c> from the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.AutoBinY">
            <summary>
                Obsolete: since v1.42 each bin attribute is auto-determined separately and
                <c>autobiny</c> is not needed. However, we accept &#39;autobiny: true&#39;
                or <c>false</c> and will update <c>ybins</c> accordingly before deleting
                <c>autobiny</c> from the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.BinGroup">
            <summary>
                Set the <c>xbingroup</c> and <c>ybingroup</c> default prefix For example,
                setting a <c>bingroup</c> of <c>1</c> on two histogram2d traces will make
                them their x-bins and y-bins match separately.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.XBinGroup">
            <summary>
                Set a group of histogram traces which will have compatible x-bin settings.
                Using <c>xbingroup</c>, histogram2d and histogram2dcontour traces  (on axes
                of the same axis type) can have compatible x-bin settings. Note that the
                same <c>xbingroup</c> value can be used to set (1D) histogram <c>bingroup</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.YBinGroup">
            <summary>
                Set a group of histogram traces which will have compatible y-bin settings.
                Using <c>ybingroup</c>, histogram2d and histogram2dcontour traces  (on axes
                of the same axis type) can have compatible y-bin settings. Note that the
                same <c>ybingroup</c> value can be used to set (1D) histogram <c>bingroup</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.AutoContour">
            <summary>
                Determines whether or not the contour level attributes are picked by an
                algorithm. If <c>true</c>, the number of contour levels can be set in <c>ncontours</c>.
                If <c>false</c>, set the contour level attributes in <c>contours</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.NContours">
            <summary>
                Sets the maximum number of contour levels. The actual number of contours
                will be chosen automatically to be less than or equal to the value of <c>ncontours</c>.
                Has an effect only if <c>autocontour</c> is <c>true</c> or if <c>contours.size</c>
                is missing.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.Contours">
            <summary>
                Gets or sets the Contours.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.ZHoverFormat">
            <summary>
                Sets the hover text formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. See: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variable <c>z</c> Anything
                contained in tag <c>&lt;extra&gt;</c> is displayed in the secondary box,
                for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the
                secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variable <c>z</c> Anything
                contained in tag <c>&lt;extra&gt;</c> is displayed in the secondary box,
                for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the
                secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.ZAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>z</c>) or the bounds set in <c>zmin</c> and <c>zmax</c>
                 Defaults to <c>false</c> when <c>zmin</c> and <c>zmax</c> are set by the
                user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.ZMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.ZMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as in <c>z</c> and if set, <c>zmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.ZMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>zmin</c> and/or <c>zmax</c>
                to be equidistant to this point. Value should have the same units as in
                <c>z</c>. Has no effect when <c>zauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>zmin</c> and
                <c>zmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>zmin</c> will correspond
                to the last color in the array and <c>zmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.XCalendar">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.YCalendar">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContour.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.Contours">
            <summary>
                The Contours class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Contours.Type">
            <summary>
                If <c>levels</c>, the data is represented as a contour plot with multiple
                levels displayed. If <c>constraint</c>, the data is represented as constraints
                with the invalid region shaded as specified by the <c>operation</c> and
                <c>value</c> parameters.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Contours.Start">
            <summary>
                Sets the starting contour level value. Must be less than <c>contours.end</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Contours.End">
            <summary>
                Sets the end contour level value. Must be more than <c>contours.start</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Contours.Size">
            <summary>
                Sets the step between each contour level. Must be positive.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Contours.Coloring">
            <summary>
                Determines the coloring method showing the contour values. If <c>fill</c>,
                coloring is done evenly between each contour level If <c>heatmap</c>, a
                heatmap gradient coloring is applied between each contour level. If <c>lines</c>,
                coloring is done on the contour lines. If <c>none</c>, no coloring is applied
                on this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Contours.ShowLines">
            <summary>
                Determines whether or not the contour lines are drawn. Has an effect only
                if <c>contours.coloring</c> is set to <c>fill</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Contours.ShowLabels">
            <summary>
                Determines whether to label the contour lines with their values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Contours.LabelFont">
            <summary>
                Sets the font used for labeling the contour levels. The default color comes
                from the lines, if shown. The default family and size come from <c>layout.font</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Contours.LabelFormat">
            <summary>
                Sets the contour label formatting rule using d3 formatting mini-language
                which is very similar to Python, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Contours.Operation">
            <summary>
                Sets the constraint operation. <c>=</c> keeps regions equal to <c>value</c>
                <c>&lt;</c> and <c>&lt;=</c> keep regions less than <c>value</c> <c>&gt;</c>
                and <c>&gt;=</c> keep regions greater than <c>value</c> <c>[]</c>, <c>()</c>,
                <c>[)</c>, and <c>(]</c> keep regions inside <c>value[0]</c> to <c>value[1]</c>
                <c>][</c>, <c>)(</c>, <c>](</c>, <c>)[</c> keep regions outside <c>value[0]</c>
                to value[1]` Open vs. closed intervals make no difference to constraint
                display, but all versions are allowed for consistency with filter transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Contours.Value">
            <summary>
                Sets the value or values of the constraint boundary. When <c>operation</c>
                is set to one of the comparison values (=,&lt;,&gt;=,&gt;,&lt;=) <c>value</c>
                is expected to be a number. When <c>operation</c> is set to one of the interval
                values ([],(),[),(],][,)(,](,)[) <c>value</c> is expected to be an array
                of two numbers where the first is the lower bound and the second is the
                upper bound.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ContoursLib.ColoringEnum">
            <summary>
                Determines the coloring method showing the contour values. If <c>fill</c>,
                coloring is done evenly between each contour level If <c>heatmap</c>, a
                heatmap gradient coloring is applied between each contour level. If <c>lines</c>,
                coloring is done on the contour lines. If <c>none</c>, no coloring is applied
                on this trace.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ContoursLib.LabelFont">
            <summary>
                The LabelFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ContoursLib.LabelFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ContoursLib.LabelFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.ContoursLib.LabelFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ContoursLib.OperationEnum">
            <summary>
                Sets the constraint operation. <c>=</c> keeps regions equal to <c>value</c>
                <c>&lt;</c> and <c>&lt;=</c> keep regions less than <c>value</c> <c>&gt;</c>
                and <c>&gt;=</c> keep regions greater than <c>value</c> <c>[]</c>, <c>()</c>,
                <c>[)</c>, and <c>(]</c> keep regions inside <c>value[0]</c> to <c>value[1]</c>
                <c>][</c>, <c>)(</c>, <c>](</c>, <c>)[</c> keep regions outside <c>value[0]</c>
                to value[1]` Open vs. closed intervals make no difference to constraint
                display, but all versions are allowed for consistency with filter transforms.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.ContoursLib.TypeEnum">
            <summary>
                If <c>levels</c>, the data is represented as a contour plot with multiple
                levels displayed. If <c>constraint</c>, the data is represented as constraints
                with the invalid region shaded as specified by the <c>operation</c> and
                <c>value</c> parameters.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.HistFuncEnum">
            <summary>
                Specifies the binning function used for this histogram trace. If <c>count</c>,
                the histogram values are computed by counting the number of values lying
                inside each bin. If <c>sum</c>, <c>avg</c>, <c>min</c>, <c>max</c>, the
                histogram values are computed using the sum, the average, the minimum or
                the maximum of the values lying inside each bin respectively.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.HistNormEnum">
            <summary>
                Specifies the type of normalization used for this histogram trace. If *&#39;,
                the span of each bar corresponds to the number of occurrences (i.e. the
                number of data points lying inside the bins). If <c>percent</c> / <c>probability</c>,
                the span of each bar corresponds to the percentage / fraction of occurrences
                with respect to the total number of sample points (here, the sum of all
                bin HEIGHTS equals 100% / 1). If <c>density</c>, the span of each bar corresponds
                to the number of occurrences in a bin divided by the size of the bin interval
                (here, the sum of all bin AREAS equals the total number of sample points).
                If &#39;probability density*, the area of each bar corresponds to the probability
                that an event will fall into the corresponding bin (here, the sum of all
                bin AREAS equals 1).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Line.Color">
            <summary>
                Sets the color of the contour level. Has no effect if <c>contours.coloring</c>
                is set to <c>lines</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Line.Width">
            <summary>
                Sets the contour line width in (in px)
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Line.Dash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Line.Smoothing">
            <summary>
                Sets the amount of smoothing for the contour lines, where <c>0</c> corresponds
                to no smoothing.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Marker.Color">
            <summary>
                Sets the aggregation data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.XBins">
            <summary>
                The XBins class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.XBins.Start">
            <summary>
                Sets the starting value for the x axis bins. Defaults to the minimum data
                value, shifted down if necessary to make nice round values and to remove
                ambiguous bin edges. For example, if most of the data is integers we shift
                the bin edges 0.5 down, so a <c>size</c> of 5 would have a default <c>start</c>
                of -0.5, so it is clear that 0-4 are in the first bin, 5-9 in the second,
                but continuous data gets a start of 0 and bins [0,5), [5,10) etc. Dates
                behave similarly, and <c>start</c> should be a date string. For category
                data, <c>start</c> is based on the category serial numbers, and defaults
                to -0.5. 
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.XBins.End">
            <summary>
                Sets the end value for the x axis bins. The last bin may not end exactly
                at this value, we increment the bin edge by <c>size</c> from <c>start</c>
                until we reach or exceed <c>end</c>. Defaults to the maximum data value.
                Like <c>start</c>, for dates use a date string, and for category data <c>end</c>
                is based on the category serial numbers.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.XBins.Size">
            <summary>
                Sets the size of each x axis bin. Default behavior: If <c>nbinsx</c> is
                0 or omitted, we choose a nice round bin size such that the number of bins
                is about the same as the typical number of samples in each bin. If <c>nbinsx</c>
                is provided, we choose a nice round bin size giving no more than that many
                bins. For date data, use milliseconds or <c>M&lt;n&gt;</c> for months, as
                in <c>axis.dtick</c>. For category data, the number of categories to bin
                together (always defaults to 1). 
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.XCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.YBins">
            <summary>
                The YBins class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.YBins.Start">
            <summary>
                Sets the starting value for the y axis bins. Defaults to the minimum data
                value, shifted down if necessary to make nice round values and to remove
                ambiguous bin edges. For example, if most of the data is integers we shift
                the bin edges 0.5 down, so a <c>size</c> of 5 would have a default <c>start</c>
                of -0.5, so it is clear that 0-4 are in the first bin, 5-9 in the second,
                but continuous data gets a start of 0 and bins [0,5), [5,10) etc. Dates
                behave similarly, and <c>start</c> should be a date string. For category
                data, <c>start</c> is based on the category serial numbers, and defaults
                to -0.5. 
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.YBins.End">
            <summary>
                Sets the end value for the y axis bins. The last bin may not end exactly
                at this value, we increment the bin edge by <c>size</c> from <c>start</c>
                until we reach or exceed <c>end</c>. Defaults to the maximum data value.
                Like <c>start</c>, for dates use a date string, and for category data <c>end</c>
                is based on the category serial numbers.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DContourLib.YBins.Size">
            <summary>
                Sets the size of each y axis bin. Default behavior: If <c>nbinsy</c> is
                0 or omitted, we choose a nice round bin size such that the number of bins
                is about the same as the typical number of samples in each bin. If <c>nbinsy</c>
                is provided, we choose a nice round bin size giving no more than that many
                bins. For date data, use milliseconds or <c>M&lt;n&gt;</c> for months, as
                in <c>axis.dtick</c>. For category data, the number of categories to bin
                together (always defaults to 1). 
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DContourLib.YCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.HistFuncEnum">
            <summary>
                Specifies the binning function used for this histogram trace. If <c>count</c>,
                the histogram values are computed by counting the number of values lying
                inside each bin. If <c>sum</c>, <c>avg</c>, <c>min</c>, <c>max</c>, the
                histogram values are computed using the sum, the average, the minimum or
                the maximum of the values lying inside each bin respectively.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.HistNormEnum">
            <summary>
                Specifies the type of normalization used for this histogram trace. If *&#39;,
                the span of each bar corresponds to the number of occurrences (i.e. the
                number of data points lying inside the bins). If <c>percent</c> / <c>probability</c>,
                the span of each bar corresponds to the percentage / fraction of occurrences
                with respect to the total number of sample points (here, the sum of all
                bin HEIGHTS equals 100% / 1). If <c>density</c>, the span of each bar corresponds
                to the number of occurrences in a bin divided by the size of the bin interval
                (here, the sum of all bin AREAS equals the total number of sample points).
                If &#39;probability density*, the area of each bar corresponds to the probability
                that an event will fall into the corresponding bin (here, the sum of all
                bin AREAS equals 1).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.Marker.Color">
            <summary>
                Sets the aggregation data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.XBins">
            <summary>
                The XBins class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.XBins.Start">
            <summary>
                Sets the starting value for the x axis bins. Defaults to the minimum data
                value, shifted down if necessary to make nice round values and to remove
                ambiguous bin edges. For example, if most of the data is integers we shift
                the bin edges 0.5 down, so a <c>size</c> of 5 would have a default <c>start</c>
                of -0.5, so it is clear that 0-4 are in the first bin, 5-9 in the second,
                but continuous data gets a start of 0 and bins [0,5), [5,10) etc. Dates
                behave similarly, and <c>start</c> should be a date string. For category
                data, <c>start</c> is based on the category serial numbers, and defaults
                to -0.5. 
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.XBins.End">
            <summary>
                Sets the end value for the x axis bins. The last bin may not end exactly
                at this value, we increment the bin edge by <c>size</c> from <c>start</c>
                until we reach or exceed <c>end</c>. Defaults to the maximum data value.
                Like <c>start</c>, for dates use a date string, and for category data <c>end</c>
                is based on the category serial numbers.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.XBins.Size">
            <summary>
                Sets the size of each x axis bin. Default behavior: If <c>nbinsx</c> is
                0 or omitted, we choose a nice round bin size such that the number of bins
                is about the same as the typical number of samples in each bin. If <c>nbinsx</c>
                is provided, we choose a nice round bin size giving no more than that many
                bins. For date data, use milliseconds or <c>M&lt;n&gt;</c> for months, as
                in <c>axis.dtick</c>. For category data, the number of categories to bin
                together (always defaults to 1). 
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.XCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.YBins">
            <summary>
                The YBins class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.YBins.Start">
            <summary>
                Sets the starting value for the y axis bins. Defaults to the minimum data
                value, shifted down if necessary to make nice round values and to remove
                ambiguous bin edges. For example, if most of the data is integers we shift
                the bin edges 0.5 down, so a <c>size</c> of 5 would have a default <c>start</c>
                of -0.5, so it is clear that 0-4 are in the first bin, 5-9 in the second,
                but continuous data gets a start of 0 and bins [0,5), [5,10) etc. Dates
                behave similarly, and <c>start</c> should be a date string. For category
                data, <c>start</c> is based on the category serial numbers, and defaults
                to -0.5. 
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.YBins.End">
            <summary>
                Sets the end value for the y axis bins. The last bin may not end exactly
                at this value, we increment the bin edge by <c>size</c> from <c>start</c>
                until we reach or exceed <c>end</c>. Defaults to the maximum data value.
                Like <c>start</c>, for dates use a date string, and for category data <c>end</c>
                is based on the category serial numbers.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Histogram2DLib.YBins.Size">
            <summary>
                Sets the size of each y axis bin. Default behavior: If <c>nbinsy</c> is
                0 or omitted, we choose a nice round bin size such that the number of bins
                is about the same as the typical number of samples in each bin. If <c>nbinsy</c>
                is provided, we choose a nice round bin size giving no more than that many
                bins. For date data, use milliseconds or <c>M&lt;n&gt;</c> for months, as
                in <c>axis.dtick</c>. For category data, the number of categories to bin
                together (always defaults to 1). 
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.YCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Histogram2DLib.ZSmoothEnum">
            <summary>
                Picks a smoothing algorithm use to smooth <c>z</c> data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.Cumulative">
            <summary>
                The Cumulative class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Cumulative.Enabled">
            <summary>
                If true, display the cumulative distribution by summing the binned values.
                Use the <c>direction</c> and <c>centralbin</c> attributes to tune the accumulation
                method. Note: in this mode, the <c>density</c> <c>histnorm</c> settings
                behave the same as their equivalents without <c>density</c>: *&#39; and
                <c>density</c> both rise to the number of data points, and <c>probability</c>
                and &#39;probability density* both rise to the number of sample points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Cumulative.Direction">
            <summary>
                Only applies if cumulative is enabled. If <c>increasing</c> (default) we
                sum all prior bins, so the result increases from left to right. If <c>decreasing</c>
                we sum later bins so the result decreases from left to right.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Cumulative.CurrentBin">
            <summary>
                Only applies if cumulative is enabled. Sets whether the current bin is included,
                excluded, or has half of its value included in the current cumulative value.
                <c>include</c> is the default for compatibility with various other tools,
                however it introduces a half-bin bias to the results. <c>exclude</c> makes
                the opposite half-bin bias, and <c>half</c> removes it.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.CumulativeLib.CurrentBinEnum">
            <summary>
                Only applies if cumulative is enabled. Sets whether the current bin is included,
                excluded, or has half of its value included in the current cumulative value.
                <c>include</c> is the default for compatibility with various other tools,
                however it introduces a half-bin bias to the results. <c>exclude</c> makes
                the opposite half-bin bias, and <c>half</c> removes it.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.CumulativeLib.DirectionEnum">
            <summary>
                Only applies if cumulative is enabled. If <c>increasing</c> (default) we
                sum all prior bins, so the result increases from left to right. If <c>decreasing</c>
                we sum later bins so the result decreases from left to right.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.ErrorX">
            <summary>
                The ErrorX class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorX.Visible">
            <summary>
                Determines whether or not this set of error bars is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorX.Type">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorX.Symmetric">
            <summary>
                Determines whether or not the error bars have the same length in both direction
                (top/bottom for vertical bars, left/right for horizontal bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorX.Array">
            <summary>
                Sets the data corresponding the length of each error bar. Values are plotted
                relative to the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorX.ArrayMinus">
            <summary>
                Sets the data corresponding the length of each error bar in the bottom (left)
                direction for vertical (horizontal) bars Values are plotted relative to
                the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorX.Value">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorX.ValueMinus">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars in the bottom (left) direction for vertical
                (horizontal) bars
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorX.TraceRef">
            <summary>
                Gets or sets the TraceRef.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorX.TraceRefMinus">
            <summary>
                Gets or sets the TraceRefMinus.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorX.CopyYStyle">
            <summary>
                Gets or sets the CopyYStyle.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorX.Color">
            <summary>
                Sets the stoke color of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorX.Thickness">
            <summary>
                Sets the thickness (in px) of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorX.Width">
            <summary>
                Sets the width (in px) of the cross-bar at both ends of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorX.ArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  array .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorX.ArrayMinusSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  arrayminus .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.ErrorXLib.TypeEnum">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.ErrorY">
            <summary>
                The ErrorY class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorY.Visible">
            <summary>
                Determines whether or not this set of error bars is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorY.Type">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorY.Symmetric">
            <summary>
                Determines whether or not the error bars have the same length in both direction
                (top/bottom for vertical bars, left/right for horizontal bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorY.Array">
            <summary>
                Sets the data corresponding the length of each error bar. Values are plotted
                relative to the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorY.ArrayMinus">
            <summary>
                Sets the data corresponding the length of each error bar in the bottom (left)
                direction for vertical (horizontal) bars Values are plotted relative to
                the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorY.Value">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorY.ValueMinus">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars in the bottom (left) direction for vertical
                (horizontal) bars
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorY.TraceRef">
            <summary>
                Gets or sets the TraceRef.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorY.TraceRefMinus">
            <summary>
                Gets or sets the TraceRefMinus.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorY.Color">
            <summary>
                Sets the stoke color of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorY.Thickness">
            <summary>
                Sets the thickness (in px) of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorY.Width">
            <summary>
                Sets the width (in px) of the cross-bar at both ends of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorY.ArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  array .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.ErrorY.ArrayMinusSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  arrayminus .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.ErrorYLib.TypeEnum">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.HistFuncEnum">
            <summary>
                Specifies the binning function used for this histogram trace. If <c>count</c>,
                the histogram values are computed by counting the number of values lying
                inside each bin. If <c>sum</c>, <c>avg</c>, <c>min</c>, <c>max</c>, the
                histogram values are computed using the sum, the average, the minimum or
                the maximum of the values lying inside each bin respectively.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.HistNormEnum">
            <summary>
                Specifies the type of normalization used for this histogram trace. If *&#39;,
                the span of each bar corresponds to the number of occurrences (i.e. the
                number of data points lying inside the bins). If <c>percent</c> / <c>probability</c>,
                the span of each bar corresponds to the percentage / fraction of occurrences
                with respect to the total number of sample points (here, the sum of all
                bin HEIGHTS equals 100% / 1). If <c>density</c>, the span of each bar corresponds
                to the number of occurrences in a bin divided by the size of the bin interval
                (here, the sum of all bin AREAS equals the total number of sample points).
                If &#39;probability density*, the area of each bar corresponds to the probability
                that an event will fall into the corresponding bin (here, the sum of all
                bin AREAS equals 1).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.ColorArray">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.color</c>) or the bounds set in <c>marker.cmin</c>
                and <c>marker.cmax</c>  Has an effect only if in <c>marker.color</c>is set
                to a numerical array. Defaults to <c>false</c> when <c>marker.cmin</c> and
                <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>marker.color</c>is set to a numerical array. Value should have the
                same units as in <c>marker.color</c>. Has no effect when <c>marker.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.color</c>is set
                to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.cmin</c>
                and <c>marker.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if in <c>marker.color</c>is set to a numerical array. In case
                <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true, the default
                 palette will be chosen according to whether numbers in the <c>color</c>
                array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. If true, <c>marker.cmin</c> will correspond to
                the last color in the array and <c>marker.cmax</c> will correspond to the
                first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>marker.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.Opacity">
            <summary>
                Sets the opacity of the bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.OpacityArray">
            <summary>
                Sets the opacity of the bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.line.color</c>) or the bounds set in <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>  Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Defaults to <c>false</c> when <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.line.cmin</c>
                and/or <c>marker.line.cmax</c> to be equidistant to this point. Has an effect
                only if in <c>marker.line.color</c>is set to a numerical array. Value should
                have the same units as in <c>marker.line.color</c>. Has no effect when <c>marker.line.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.line.colorscale</c>. Has
                an effect only if in <c>marker.line.color</c>is set to a numerical array.
                In case <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true,
                the default  palette will be chosen according to whether numbers in the
                <c>color</c> array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. If true, <c>marker.line.cmin</c> will correspond
                to the last color in the array and <c>marker.line.cmax</c> will correspond
                to the first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.OrientationEnum">
            <summary>
                Sets the orientation of the bars. With <c>v</c> (<c>h</c>), the value of
                the each bar spans along the vertical (horizontal).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Selected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.SelectedLib.Marker.Color">
            <summary>
                Sets the marker color of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.SelectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.SelectedLib.TextFont.Color">
            <summary>
                Sets the text font color of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.Unselected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.UnselectedLib.Marker.Color">
            <summary>
                Sets the marker color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.UnselectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.UnselectedLib.TextFont.Color">
            <summary>
                Sets the text font color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.XBins">
            <summary>
                The XBins class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.XBins.Start">
            <summary>
                Sets the starting value for the x axis bins. Defaults to the minimum data
                value, shifted down if necessary to make nice round values and to remove
                ambiguous bin edges. For example, if most of the data is integers we shift
                the bin edges 0.5 down, so a <c>size</c> of 5 would have a default <c>start</c>
                of -0.5, so it is clear that 0-4 are in the first bin, 5-9 in the second,
                but continuous data gets a start of 0 and bins [0,5), [5,10) etc. Dates
                behave similarly, and <c>start</c> should be a date string. For category
                data, <c>start</c> is based on the category serial numbers, and defaults
                to -0.5. If multiple non-overlaying histograms share a subplot, the first
                explicit <c>start</c> is used exactly and all others are shifted down (if
                necessary) to differ from that one by an integer number of bins.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.XBins.End">
            <summary>
                Sets the end value for the x axis bins. The last bin may not end exactly
                at this value, we increment the bin edge by <c>size</c> from <c>start</c>
                until we reach or exceed <c>end</c>. Defaults to the maximum data value.
                Like <c>start</c>, for dates use a date string, and for category data <c>end</c>
                is based on the category serial numbers.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.XBins.Size">
            <summary>
                Sets the size of each x axis bin. Default behavior: If <c>nbinsx</c> is
                0 or omitted, we choose a nice round bin size such that the number of bins
                is about the same as the typical number of samples in each bin. If <c>nbinsx</c>
                is provided, we choose a nice round bin size giving no more than that many
                bins. For date data, use milliseconds or <c>M&lt;n&gt;</c> for months, as
                in <c>axis.dtick</c>. For category data, the number of categories to bin
                together (always defaults to 1). If multiple non-overlaying histograms share
                a subplot, the first explicit <c>size</c> is used and all others discarded.
                If no <c>size</c> is provided,the sample data from all traces is combined
                to determine <c>size</c> as described above.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.XCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.YBins">
            <summary>
                The YBins class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.YBins.Start">
            <summary>
                Sets the starting value for the y axis bins. Defaults to the minimum data
                value, shifted down if necessary to make nice round values and to remove
                ambiguous bin edges. For example, if most of the data is integers we shift
                the bin edges 0.5 down, so a <c>size</c> of 5 would have a default <c>start</c>
                of -0.5, so it is clear that 0-4 are in the first bin, 5-9 in the second,
                but continuous data gets a start of 0 and bins [0,5), [5,10) etc. Dates
                behave similarly, and <c>start</c> should be a date string. For category
                data, <c>start</c> is based on the category serial numbers, and defaults
                to -0.5. If multiple non-overlaying histograms share a subplot, the first
                explicit <c>start</c> is used exactly and all others are shifted down (if
                necessary) to differ from that one by an integer number of bins.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.YBins.End">
            <summary>
                Sets the end value for the y axis bins. The last bin may not end exactly
                at this value, we increment the bin edge by <c>size</c> from <c>start</c>
                until we reach or exceed <c>end</c>. Defaults to the maximum data value.
                Like <c>start</c>, for dates use a date string, and for category data <c>end</c>
                is based on the category serial numbers.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.HistogramLib.YBins.Size">
            <summary>
                Sets the size of each y axis bin. Default behavior: If <c>nbinsy</c> is
                0 or omitted, we choose a nice round bin size such that the number of bins
                is about the same as the typical number of samples in each bin. If <c>nbinsy</c>
                is provided, we choose a nice round bin size giving no more than that many
                bins. For date data, use milliseconds or <c>M&lt;n&gt;</c> for months, as
                in <c>axis.dtick</c>. For category data, the number of categories to bin
                together (always defaults to 1). If multiple non-overlaying histograms share
                a subplot, the first explicit <c>size</c> is used and all others discarded.
                If no <c>size</c> is provided,the sample data from all traces is combined
                to determine <c>size</c> as described above.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.HistogramLib.YCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Image">
            <summary>
                The Image class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.Z">
            <summary>
                A 2-dimensional array in which each element is an array of 3 or 4 numbers
                representing a color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.ColorModel">
            <summary>
                Color model used to map the numerical color components described in <c>z</c>
                into colors.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.ZMin">
            <summary>
                Array defining the lower bound for each color component. Note that the default
                value will depend on the colormodel. For the <c>rgb</c> colormodel, it is
                [0, 0, 0]. For the <c>rgba</c> colormodel, it is [0, 0, 0, 0]. For the <c>hsl</c>
                colormodel, it is [0, 0, 0]. For the <c>hsla</c> colormodel, it is [0, 0,
                0, 0].
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.ZMax">
            <summary>
                Array defining the higher bound for each color component. Note that the
                default value will depend on the colormodel. For the <c>rgb</c> colormodel,
                it is [255, 255, 255]. For the <c>rgba</c> colormodel, it is [255, 255,
                255, 1]. For the <c>hsl</c> colormodel, it is [360, 100, 100]. For the <c>hsla</c>
                colormodel, it is [360, 100, 100, 1].
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.X0">
            <summary>
                Set the image&#39;s x position.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.Y0">
            <summary>
                Set the image&#39;s y position.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.DX">
            <summary>
                Set the pixel&#39;s horizontal size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.Dy">
            <summary>
                Set the pixel&#39;s vertical size
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.Text">
            <summary>
                Sets the text elements associated with each z value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>z</c>, <c>color</c>
                and <c>colormodel</c>. Anything contained in tag <c>&lt;extra&gt;</c> is
                displayed in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>z</c>, <c>color</c>
                and <c>colormodel</c>. Anything contained in tag <c>&lt;extra&gt;</c> is
                displayed in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Image.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ImageLib.ColorModelEnum">
            <summary>
                Color model used to map the numerical color components described in <c>z</c>
                into colors.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ImageLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ImageLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ImageLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ImageLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ImageLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ImageLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ImageLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Indicator">
            <summary>
                The Indicator class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.Mode">
            <summary>
                Determines how the value is displayed on the graph. <c>number</c> displays
                the value numerically in text. <c>delta</c> displays the difference to a
                reference value in text. Finally, <c>gauge</c> displays the value graphically
                on an axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.Value">
            <summary>
                Sets the number to be displayed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.Align">
            <summary>
                Sets the horizontal alignment of the <c>text</c> within the box. Note that
                this attribute has no effect if an angular gauge is displayed: in this case,
                it is always centered
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.Domain">
            <summary>
                Gets or sets the Domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.Number">
            <summary>
                Gets or sets the Number.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.Delta">
            <summary>
                Gets or sets the Delta.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.Gauge">
            <summary>
                The gauge of the Indicator plot.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Indicator.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the <c>text</c> within the box. Note that
                this attribute has no effect if an angular gauge is displayed: in this case,
                it is always centered
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.Delta">
            <summary>
                The Delta class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Delta.Reference">
            <summary>
                Sets the reference value to compute the delta. By default, it is set to
                the current value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Delta.Position">
            <summary>
                Sets the position of delta with respect to the number.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Delta.Relative">
            <summary>
                Show relative change
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Delta.ValueFormat">
            <summary>
                Sets the value formatting rule using d3 formatting mini-language which is
                similar to those of Python. See https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Delta.Increasing">
            <summary>
                Gets or sets the Increasing.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Delta.Decreasing">
            <summary>
                Gets or sets the Decreasing.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Delta.Font">
            <summary>
                Set the font used to display the delta
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.DeltaLib.Decreasing">
            <summary>
                The Decreasing class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.DeltaLib.Decreasing.Symbol">
            <summary>
                Sets the symbol to display for increasing value
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.DeltaLib.Decreasing.Color">
            <summary>
                Sets the color for increasing value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.DeltaLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.DeltaLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.DeltaLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.DeltaLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.DeltaLib.Increasing">
            <summary>
                The Increasing class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.DeltaLib.Increasing.Symbol">
            <summary>
                Sets the symbol to display for increasing value
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.DeltaLib.Increasing.Color">
            <summary>
                Sets the color for increasing value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.DeltaLib.PositionEnum">
            <summary>
                Sets the position of delta with respect to the number.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.Domain">
            <summary>
                The Domain class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Domain.X">
            <summary>
                Sets the horizontal domain of this indicator trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Domain.Y">
            <summary>
                Sets the vertical domain of this indicator trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Domain.Row">
            <summary>
                If there is a layout grid, use the domain for this row in the grid for this
                indicator trace .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Domain.Column">
            <summary>
                If there is a layout grid, use the domain for this column in the grid for
                this indicator trace .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.Gauge">
            <summary>
                The Gauge class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Gauge.Shape">
            <summary>
                Set the shape of the gauge
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Gauge.Bar">
            <summary>
                Set the appearance of the gauge&#39;s value
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Gauge.BgColor">
            <summary>
                Sets the gauge background color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Gauge.BorderColor">
            <summary>
                Sets the color of the border enclosing the gauge.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Gauge.BorderWidth">
            <summary>
                Sets the width (in px) of the border enclosing the gauge.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Gauge.Axis">
            <summary>
                Gets or sets the Axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Gauge.Steps">
            <summary>
                Gets or sets the Steps.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Gauge.Threshold">
            <summary>
                Gets or sets the Threshold.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis">
            <summary>
                The Axis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.Range">
            <summary>
                Sets the range of this axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.Visible">
            <summary>
                A single toggle to hide the axis while preserving interaction like dragging.
                Default is true when a cheater plot is present on the axis, otherwise false
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Axis.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.AxisLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Bar">
            <summary>
                The Bar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Bar.Color">
            <summary>
                Sets the background color of the arc.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Bar.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Bar.Thickness">
            <summary>
                Sets the thickness of the bar as a fraction of the total thickness of the
                gauge.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.BarLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.BarLib.Line.Color">
            <summary>
                Sets the color of the line enclosing each sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.BarLib.Line.Width">
            <summary>
                Sets the width (in px) of the line enclosing each sector.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.ShapeEnum">
            <summary>
                Set the shape of the gauge
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Step">
            <summary>
                The Step class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Step.Color">
            <summary>
                Sets the background color of the arc.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Step.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Step.Thickness">
            <summary>
                Sets the thickness of the bar as a fraction of the total thickness of the
                gauge.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Step.Range">
            <summary>
                Sets the range of this axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Step.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Step.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.StepLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.StepLib.Line.Color">
            <summary>
                Sets the color of the line enclosing each sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.StepLib.Line.Width">
            <summary>
                Sets the width (in px) of the line enclosing each sector.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Threshold">
            <summary>
                The Threshold class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Threshold.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Threshold.Thickness">
            <summary>
                Sets the thickness of the threshold line as a fraction of the thickness
                of the gauge.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.Threshold.Value">
            <summary>
                Sets a treshold value drawn as a line.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.ThresholdLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.ThresholdLib.Line.Color">
            <summary>
                Sets the color of the threshold line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.GaugeLib.ThresholdLib.Line.Width">
            <summary>
                Sets the width (in px) of the threshold line.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.ModeFlag">
            <summary>
                Determines how the value is displayed on the graph. <c>number</c> displays
                the value numerically in text. <c>delta</c> displays the difference to a
                reference value in text. Finally, <c>gauge</c> displays the value graphically
                on an axis.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.Number">
            <summary>
                The Number class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Number.ValueFormat">
            <summary>
                Sets the value formatting rule using d3 formatting mini-language which is
                similar to those of Python. See https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Number.Font">
            <summary>
                Set the font used to display main number
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Number.Prefix">
            <summary>
                Sets a prefix appearing before the number.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Number.Suffix">
            <summary>
                Sets a suffix appearing next to the number.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.NumberLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.NumberLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.NumberLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.NumberLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Title.Text">
            <summary>
                Sets the title of this indicator.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Title.Align">
            <summary>
                Sets the horizontal alignment of the title. It defaults to <c>center</c>
                except for bullet charts for which it defaults to right.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.Title.Font">
            <summary>
                Set the font used to display the title
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.TitleLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the title. It defaults to <c>center</c>
                except for bullet charts for which it defaults to right.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IndicatorLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IndicatorLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurface">
            <summary>
                The IsoSurface class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.X">
            <summary>
                Sets the X coordinates of the vertices on X axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Y">
            <summary>
                Sets the Y coordinates of the vertices on Y axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Z">
            <summary>
                Sets the Z coordinates of the vertices on Z axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Value">
            <summary>
                Sets the 4th dimension (value) of the vertices.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.IsoMin">
            <summary>
                Sets the minimum boundary for iso-surface plot.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.IsoMax">
            <summary>
                Sets the maximum boundary for iso-surface plot.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Surface">
            <summary>
                Gets or sets the Surface.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.SpaceFrame">
            <summary>
                Gets or sets the SpaceFrame.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Slices">
            <summary>
                Gets or sets the Slices.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Caps">
            <summary>
                Gets or sets the Caps.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Text">
            <summary>
                Sets the text elements associated with the vertices. If trace <c>hoverinfo</c>
                contains a <c>text</c> flag and <c>hovertext</c> is not set, these elements
                will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.TextArray">
            <summary>
                Sets the text elements associated with the vertices. If trace <c>hoverinfo</c>
                contains a <c>text</c> flag and <c>hovertext</c> is not set, these elements
                will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.HoverTextArray">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here <c>value</c>) or the bounds set in <c>cmin</c> and <c>cmax</c>
                 Defaults to <c>false</c> when <c>cmin</c> and <c>cmax</c> are set by the
                user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.CMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as <c>value</c> and if set, <c>cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.CMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as <c>value</c> and if set, <c>cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>cmin</c> and/or <c>cmax</c>
                to be equidistant to this point. Value should have the same units as <c>value</c>.
                Has no effect when <c>cauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>cmin</c> and
                <c>cmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>cmin</c> will correspond
                to the last color in the array and <c>cmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Opacity">
            <summary>
                Sets the opacity of the surface. Please note that in the case of using high
                <c>opacity</c> values for example a value greater than or equal to 0.5 on
                two surfaces (and 0.25 with four surfaces), an overlay of multiple transparent
                surfaces may not perfectly be sorted in depth by the webgl API. This behavior
                may be improved in the near future and is subject to change.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.LightPosition">
            <summary>
                Gets or sets the LightPosition.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Lighting">
            <summary>
                Gets or sets the Lighting.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.FlatShading">
            <summary>
                Determines whether or not normal smoothing is applied to the meshes, creating
                meshes with an angular, low-poly look via flat reflections.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Contour">
            <summary>
                Gets or sets the Contour.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.Scene">
            <summary>
                Sets a reference between this trace&#39;s 3D coordinate system and a 3D
                scene. If <c>scene</c> (the default value), the (x,y,z) coordinates refer
                to <c>layout.scene</c>. If <c>scene2</c>, the (x,y,z) coordinates refer
                to <c>layout.scene2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.ValueSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  value .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurface.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.Caps">
            <summary>
                The Caps class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Caps.X">
            <summary>
                Gets or sets the X.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Caps.Y">
            <summary>
                Gets or sets the Y.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Caps.Z">
            <summary>
                Gets or sets the Z.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.CapsLib.X">
            <summary>
                The X class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.CapsLib.X.Show">
            <summary>
                Sets the fill ratio of the <c>slices</c>. The default fill value of the
                x <c>slices</c> is 1 meaning that they are entirely shaded. On the other
                hand Applying a <c>fill</c> ratio less than one would allow the creation
                of openings parallel to the edges.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.CapsLib.X.Fill">
            <summary>
                Sets the fill ratio of the <c>caps</c>. The default fill value of the <c>caps</c>
                is 1 meaning that they are entirely shaded. On the other hand Applying a
                <c>fill</c> ratio less than one would allow the creation of openings parallel
                to the edges.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.CapsLib.Y">
            <summary>
                The Y class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.CapsLib.Y.Show">
            <summary>
                Sets the fill ratio of the <c>slices</c>. The default fill value of the
                y <c>slices</c> is 1 meaning that they are entirely shaded. On the other
                hand Applying a <c>fill</c> ratio less than one would allow the creation
                of openings parallel to the edges.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.CapsLib.Y.Fill">
            <summary>
                Sets the fill ratio of the <c>caps</c>. The default fill value of the <c>caps</c>
                is 1 meaning that they are entirely shaded. On the other hand Applying a
                <c>fill</c> ratio less than one would allow the creation of openings parallel
                to the edges.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.CapsLib.Z">
            <summary>
                The Z class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.CapsLib.Z.Show">
            <summary>
                Sets the fill ratio of the <c>slices</c>. The default fill value of the
                z <c>slices</c> is 1 meaning that they are entirely shaded. On the other
                hand Applying a <c>fill</c> ratio less than one would allow the creation
                of openings parallel to the edges.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.CapsLib.Z.Fill">
            <summary>
                Sets the fill ratio of the <c>caps</c>. The default fill value of the <c>caps</c>
                is 1 meaning that they are entirely shaded. On the other hand Applying a
                <c>fill</c> ratio less than one would allow the creation of openings parallel
                to the edges.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.Contour">
            <summary>
                The Contour class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Contour.Show">
            <summary>
                Sets whether or not dynamic contours are shown on hover
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Contour.Color">
            <summary>
                Sets the color of the contour lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Contour.Width">
            <summary>
                Sets the width of the contour lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.Lighting">
            <summary>
                The Lighting class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Lighting.VertexNormalsEpsilon">
            <summary>
                Epsilon for vertex normals calculation avoids math issues arising from degenerate
                geometry.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Lighting.FaceNormalsEpsilon">
            <summary>
                Epsilon for face normals calculation avoids math issues arising from degenerate
                geometry.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Lighting.Ambient">
            <summary>
                Ambient light increases overall color visibility but can wash out the image.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Lighting.Diffuse">
            <summary>
                Represents the extent that incident rays are reflected in a range of angles.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Lighting.Specular">
            <summary>
                Represents the level that incident rays are reflected in a single direction,
                causing shine.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Lighting.Roughness">
            <summary>
                Alters specular reflection; the rougher the surface, the wider and less
                contrasty the shine.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Lighting.Fresnel">
            <summary>
                Represents the reflectance as a dependency of the viewing angle; e.g. paper
                is reflective when viewing it from the edge of the paper (almost 90 degrees),
                causing shine.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.LightPosition">
            <summary>
                The LightPosition class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.LightPosition.X">
            <summary>
                Numeric vector, representing the X coordinate for each vertex.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.LightPosition.Y">
            <summary>
                Numeric vector, representing the Y coordinate for each vertex.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.LightPosition.Z">
            <summary>
                Numeric vector, representing the Z coordinate for each vertex.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.Slices">
            <summary>
                The Slices class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Slices.X">
            <summary>
                Gets or sets the X.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Slices.Y">
            <summary>
                Gets or sets the Y.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Slices.Z">
            <summary>
                Gets or sets the Z.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.SlicesLib.X">
            <summary>
                The X class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.SlicesLib.X.Show">
            <summary>
                Determines whether or not slice planes about the x dimension are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.SlicesLib.X.Locations">
            <summary>
                Specifies the location(s) of slices on the axis. When not specified slices
                would be created for all points of the axis x except start and end.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.SlicesLib.X.Fill">
            <summary>
                Sets the fill ratio of the <c>slices</c>. The default fill value of the
                <c>slices</c> is 1 meaning that they are entirely shaded. On the other hand
                Applying a <c>fill</c> ratio less than one would allow the creation of openings
                parallel to the edges.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.SlicesLib.X.LocationsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  locations .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.SlicesLib.Y">
            <summary>
                The Y class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.SlicesLib.Y.Show">
            <summary>
                Determines whether or not slice planes about the y dimension are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.SlicesLib.Y.Locations">
            <summary>
                Specifies the location(s) of slices on the axis. When not specified slices
                would be created for all points of the axis y except start and end.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.SlicesLib.Y.Fill">
            <summary>
                Sets the fill ratio of the <c>slices</c>. The default fill value of the
                <c>slices</c> is 1 meaning that they are entirely shaded. On the other hand
                Applying a <c>fill</c> ratio less than one would allow the creation of openings
                parallel to the edges.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.SlicesLib.Y.LocationsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  locations .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.SlicesLib.Z">
            <summary>
                The Z class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.SlicesLib.Z.Show">
            <summary>
                Determines whether or not slice planes about the z dimension are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.SlicesLib.Z.Locations">
            <summary>
                Specifies the location(s) of slices on the axis. When not specified slices
                would be created for all points of the axis z except start and end.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.SlicesLib.Z.Fill">
            <summary>
                Sets the fill ratio of the <c>slices</c>. The default fill value of the
                <c>slices</c> is 1 meaning that they are entirely shaded. On the other hand
                Applying a <c>fill</c> ratio less than one would allow the creation of openings
                parallel to the edges.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.SlicesLib.Z.LocationsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  locations .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.SpaceFrame">
            <summary>
                The SpaceFrame class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.SpaceFrame.Show">
            <summary>
                Displays/hides tetrahedron shapes between minimum and maximum iso-values.
                Often useful when either caps or surfaces are disabled or filled with values
                less than 1.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.SpaceFrame.Fill">
            <summary>
                Sets the fill ratio of the <c>spaceframe</c> elements. The default fill
                value is 0.15 meaning that only 15% of the area of every faces of tetras
                would be shaded. Applying a greater <c>fill</c> ratio would allow the creation
                of stronger elements or could be sued to have entirely closed areas (in
                case of using 1).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.Surface">
            <summary>
                The Surface class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Surface.Show">
            <summary>
                Hides/displays surfaces between minimum and maximum iso-values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Surface.Count">
            <summary>
                Sets the number of iso-surfaces between minimum and maximum iso-values.
                By default this value is 2 meaning that only minimum and maximum surfaces
                would be drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Surface.Fill">
            <summary>
                Sets the fill ratio of the iso-surface. The default fill value of the surface
                is 1 meaning that they are entirely shaded. On the other hand Applying a
                <c>fill</c> ratio less than one would allow the creation of openings parallel
                to the edges.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.IsoSurfaceLib.Surface.Pattern">
            <summary>
                Sets the surface pattern of the iso-surface 3-D sections. The default pattern
                of the surface is <c>all</c> meaning that the rest of surface elements would
                be shaded. The check options (either 1 or 2) could be used to draw half
                of the squares on the surface. Using various combinations of capital <c>A</c>,
                <c>B</c>, <c>C</c>, <c>D</c> and <c>E</c> may also be used to reduce the
                number of triangles on the iso-surfaces and creating other patterns of interest.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.SurfaceLib.PatternFlag">
            <summary>
                Sets the surface pattern of the iso-surface 3-D sections. The default pattern
                of the surface is <c>all</c> meaning that the rest of surface elements would
                be shaded. The check options (either 1 or 2) could be used to draw half
                of the squares on the surface. Using various combinations of capital <c>A</c>,
                <c>B</c>, <c>C</c>, <c>D</c> and <c>E</c> may also be used to reduce the
                number of triangles on the iso-surfaces and creating other patterns of interest.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.IsoSurfaceLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3D">
            <summary>
                The Mesh3D class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.X">
            <summary>
                Sets the X coordinates of the vertices. The nth element of vectors <c>x</c>,
                <c>y</c> and <c>z</c> jointly represent the X, Y and Z coordinates of the
                nth vertex.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.Y">
            <summary>
                Sets the Y coordinates of the vertices. The nth element of vectors <c>x</c>,
                <c>y</c> and <c>z</c> jointly represent the X, Y and Z coordinates of the
                nth vertex.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.Z">
            <summary>
                Sets the Z coordinates of the vertices. The nth element of vectors <c>x</c>,
                <c>y</c> and <c>z</c> jointly represent the X, Y and Z coordinates of the
                nth vertex.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.I">
            <summary>
                A vector of vertex indices, i.e. integer values between 0 and the length
                of the vertex vectors, representing the <c>first</c> vertex of a triangle.
                For example, &#39;{i[m], j[m], k[m]}&#39; together represent face m (triangle
                m) in the mesh, where &#39;i[m] = n&#39; points to the triplet &#39;{x[n],
                y[n], z[n]}&#39; in the vertex arrays. Therefore, each element in <c>i</c>
                represents a point in space, which is the first vertex of a triangle.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.J">
            <summary>
                A vector of vertex indices, i.e. integer values between 0 and the length
                of the vertex vectors, representing the <c>second</c> vertex of a triangle.
                For example, &#39;{i[m], j[m], k[m]}&#39;  together represent face m (triangle
                m) in the mesh, where &#39;j[m] = n&#39; points to the triplet &#39;{x[n],
                y[n], z[n]}&#39; in the vertex arrays. Therefore, each element in <c>j</c>
                represents a point in space, which is the second vertex of a triangle.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.K">
            <summary>
                A vector of vertex indices, i.e. integer values between 0 and the length
                of the vertex vectors, representing the <c>third</c> vertex of a triangle.
                For example, &#39;{i[m], j[m], k[m]}&#39; together represent face m (triangle
                m) in the mesh, where &#39;k[m] = n&#39; points to the triplet  &#39;{x[n],
                y[n], z[n]}&#39; in the vertex arrays. Therefore, each element in <c>k</c>
                represents a point in space, which is the third vertex of a triangle.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.Text">
            <summary>
                Sets the text elements associated with the vertices. If trace <c>hoverinfo</c>
                contains a <c>text</c> flag and <c>hovertext</c> is not set, these elements
                will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.TextArray">
            <summary>
                Sets the text elements associated with the vertices. If trace <c>hoverinfo</c>
                contains a <c>text</c> flag and <c>hovertext</c> is not set, these elements
                will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.HoverTextArray">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.DelaunaYAxis">
            <summary>
                Sets the Delaunay axis, which is the axis that is perpendicular to the surface
                of the Delaunay triangulation. It has an effect if <c>i</c>, <c>j</c>, <c>k</c>
                are not provided and <c>alphahull</c> is set to indicate Delaunay triangulation.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.AlphaHull">
            <summary>
                Determines how the mesh surface triangles are derived from the set of vertices
                (points) represented by the <c>x</c>, <c>y</c> and <c>z</c> arrays, if the
                <c>i</c>, <c>j</c>, <c>k</c> arrays are not supplied. For general use of
                <c>mesh3d</c> it is preferred that <c>i</c>, <c>j</c>, <c>k</c> are supplied.
                If <c>-1</c>, Delaunay triangulation is used, which is mainly suitable if
                the mesh is a single, more or less layer surface that is perpendicular to
                <c>delaunayaxis</c>. In case the <c>delaunayaxis</c> intersects the mesh
                surface at more than one point it will result triangles that are very long
                in the dimension of <c>delaunayaxis</c>. If <c>&gt;0</c>, the alpha-shape
                algorithm is used. In this case, the positive <c>alphahull</c> value signals
                the use of the alpha-shape algorithm, _and_ its value acts as the parameter
                for the mesh fitting. If <c>0</c>,  the convex-hull algorithm is used. It
                is suitable for convex bodies or if the intention is to enclose the <c>x</c>,
                <c>y</c> and <c>z</c> point set into a convex hull.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.Intensity">
            <summary>
                Sets the intensity values for vertices or cells as defined by <c>intensitymode</c>.
                It can be used for plotting fields on meshes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.IntensityMode">
            <summary>
                Determines the source of <c>intensity</c> values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.Color">
            <summary>
                Sets the color of the whole mesh
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.VertexColor">
            <summary>
                Sets the color of each vertex Overrides <c>color</c>. While Red, green and
                blue colors are in the range of 0 and 255; in the case of having vertex
                color data in RGBA format, the alpha color should be normalized to be between
                0 and 1.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.FaceColor">
            <summary>
                Sets the color of each face Overrides <c>color</c> and <c>vertexcolor</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here <c>intensity</c>) or the bounds set in <c>cmin</c> and
                <c>cmax</c>  Defaults to <c>false</c> when <c>cmin</c> and <c>cmax</c> are
                set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.CMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as <c>intensity</c> and if set, <c>cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.CMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as <c>intensity</c> and if set, <c>cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>cmin</c> and/or <c>cmax</c>
                to be equidistant to this point. Value should have the same units as <c>intensity</c>.
                Has no effect when <c>cauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>cmin</c> and
                <c>cmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>cmin</c> will correspond
                to the last color in the array and <c>cmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.Opacity">
            <summary>
                Sets the opacity of the surface. Please note that in the case of using high
                <c>opacity</c> values for example a value greater than or equal to 0.5 on
                two surfaces (and 0.25 with four surfaces), an overlay of multiple transparent
                surfaces may not perfectly be sorted in depth by the webgl API. This behavior
                may be improved in the near future and is subject to change.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.FlatShading">
            <summary>
                Determines whether or not normal smoothing is applied to the meshes, creating
                meshes with an angular, low-poly look via flat reflections.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.Contour">
            <summary>
                Gets or sets the Contour.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.LightPosition">
            <summary>
                Gets or sets the LightPosition.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.Lighting">
            <summary>
                Gets or sets the Lighting.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.XCalendar">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.YCalendar">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.ZCalendar">
            <summary>
                Sets the calendar system to use with <c>z</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.Scene">
            <summary>
                Sets a reference between this trace&#39;s 3D coordinate system and a 3D
                scene. If <c>scene</c> (the default value), the (x,y,z) coordinates refer
                to <c>layout.scene</c>. If <c>scene2</c>, the (x,y,z) coordinates refer
                to <c>layout.scene2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.ISrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  i .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.JSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  j .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.KSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  k .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.IntensitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  intensity .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.VertexColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  vertexcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.FaceColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  facecolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3D.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.Contour">
            <summary>
                The Contour class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.Contour.Show">
            <summary>
                Sets whether or not dynamic contours are shown on hover
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.Contour.Color">
            <summary>
                Sets the color of the contour lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.Contour.Width">
            <summary>
                Sets the width of the contour lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.DelaunaYAxisEnum">
            <summary>
                Sets the Delaunay axis, which is the axis that is perpendicular to the surface
                of the Delaunay triangulation. It has an effect if <c>i</c>, <c>j</c>, <c>k</c>
                are not provided and <c>alphahull</c> is set to indicate Delaunay triangulation.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.IntensityModeEnum">
            <summary>
                Determines the source of <c>intensity</c> values.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.Lighting">
            <summary>
                The Lighting class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.Lighting.VertexNormalsEpsilon">
            <summary>
                Epsilon for vertex normals calculation avoids math issues arising from degenerate
                geometry.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.Lighting.FaceNormalsEpsilon">
            <summary>
                Epsilon for face normals calculation avoids math issues arising from degenerate
                geometry.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.Lighting.Ambient">
            <summary>
                Ambient light increases overall color visibility but can wash out the image.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.Lighting.Diffuse">
            <summary>
                Represents the extent that incident rays are reflected in a range of angles.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.Lighting.Specular">
            <summary>
                Represents the level that incident rays are reflected in a single direction,
                causing shine.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.Lighting.Roughness">
            <summary>
                Alters specular reflection; the rougher the surface, the wider and less
                contrasty the shine.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.Lighting.Fresnel">
            <summary>
                Represents the reflectance as a dependency of the viewing angle; e.g. paper
                is reflective when viewing it from the edge of the paper (almost 90 degrees),
                causing shine.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.LightPosition">
            <summary>
                The LightPosition class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.LightPosition.X">
            <summary>
                Numeric vector, representing the X coordinate for each vertex.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.LightPosition.Y">
            <summary>
                Numeric vector, representing the Y coordinate for each vertex.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.LightPosition.Z">
            <summary>
                Numeric vector, representing the Z coordinate for each vertex.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Mesh3DLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.XCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.YCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Mesh3DLib.ZCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>z</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Ohlc">
            <summary>
                The Ohlc class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.X">
            <summary>
                Sets the x coordinates. If absent, linear coordinate will be generated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.Open">
            <summary>
                Sets the open values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.High">
            <summary>
                Sets the high values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.Low">
            <summary>
                Sets the low values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.Close">
            <summary>
                Sets the close values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.Increasing">
            <summary>
                Gets or sets the Increasing.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.Decreasing">
            <summary>
                Gets or sets the Decreasing.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.Text">
            <summary>
                Sets hover text elements associated with each sample point. If a single
                string, the same string appears over all the data points. If an array of
                string, the items are mapped in order to this trace&#39;s sample points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.TextArray">
            <summary>
                Sets hover text elements associated with each sample point. If a single
                string, the same string appears over all the data points. If an array of
                string, the items are mapped in order to this trace&#39;s sample points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.HoverTextArray">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.TickWidth">
            <summary>
                Sets the width of the open/close tick marks relative to the <c>x</c> minimal
                interval.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.XCalendar">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.OpenSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  open .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.HighSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  high .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.LowSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  low .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.CloseSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  close .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Ohlc.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.OhlcLib.Decreasing">
            <summary>
                The Decreasing class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.Decreasing.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.OhlcLib.DecreasingLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.DecreasingLib.Line.Color">
            <summary>
                Sets the line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.DecreasingLib.Line.Width">
            <summary>
                Sets the line width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.DecreasingLib.Line.Dash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.OhlcLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.OhlcLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabel.Split">
            <summary>
                Show hover information (open, close, high, low) in separate labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.OhlcLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.OhlcLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.OhlcLib.Increasing">
            <summary>
                The Increasing class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.Increasing.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.OhlcLib.IncreasingLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.IncreasingLib.Line.Color">
            <summary>
                Sets the line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.IncreasingLib.Line.Width">
            <summary>
                Sets the line width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.IncreasingLib.Line.Dash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.OhlcLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.Line.Width">
            <summary>
                [object Object] Note that this style setting can also be set per direction
                via <c>increasing.line.width</c> and <c>decreasing.line.width</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.Line.Dash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>). Note that this style
                setting can also be set per direction via <c>increasing.line.dash</c> and
                <c>decreasing.line.dash</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.OhlcLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.OhlcLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.OhlcLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.OhlcLib.XCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCats">
            <summary>
                The ParCats class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.Domain">
            <summary>
                Gets or sets the Domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.HoverOn">
            <summary>
                Sets the hover interaction mode for the parcats diagram. If <c>category</c>,
                hover interaction take place per category. If <c>color</c>, hover interactions
                take place per color per category. If <c>dimension</c>, hover interactions
                take place across all categories per dimension.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>count</c>,
                <c>probability</c>, <c>category</c>, <c>categorycount</c>, <c>colorcount</c>
                and <c>bandcolorcount</c>. Anything contained in tag <c>&lt;extra&gt;</c>
                is displayed in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.Arrangement">
            <summary>
                Sets the drag interaction mode for categories and dimensions. If <c>perpendicular</c>,
                the categories can only move along a line perpendicular to the paths. If
                <c>freeform</c>, the categories can freely move on the plane. If <c>fixed</c>,
                the categories and dimensions are stationary.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.BundleColors">
            <summary>
                Sort paths so that like colors are bundled together within each category.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.SortPaths">
            <summary>
                Sets the path sorting algorithm. If <c>forward</c>, sort paths based on
                dimension categories from left to right. If <c>backward</c>, sort paths
                based on dimensions categories from right to left.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.LabelFont">
            <summary>
                Sets the font for the <c>dimension</c> labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.TickFont">
            <summary>
                Sets the font for the <c>category</c> labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.Dimensions">
            <summary>
                Gets or sets the Dimensions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.Counts">
            <summary>
                The number of observations represented by each state. Defaults to 1 so that
                each state represents one observation
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.CountsArray">
            <summary>
                The number of observations represented by each state. Defaults to 1 so that
                each state represents one observation
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCats.CountsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  counts .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.ArrangementEnum">
            <summary>
                Sets the drag interaction mode for categories and dimensions. If <c>perpendicular</c>,
                the categories can only move along a line perpendicular to the paths. If
                <c>freeform</c>, the categories can freely move on the plane. If <c>fixed</c>,
                the categories and dimensions are stationary.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.Dimension">
            <summary>
                The Dimension class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Dimension.Label">
            <summary>
                The shown name of the dimension.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Dimension.CategoryOrder">
            <summary>
                Specifies the ordering logic for the categories in the dimension. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Dimension.CategoryArray">
            <summary>
                Sets the order in which categories in this dimension appear. Only has an
                effect if <c>categoryorder</c> is set to <c>array</c>. Used with <c>categoryorder</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Dimension.TickText">
            <summary>
                Sets alternative tick labels for the categories in this dimension. Only
                has an effect if <c>categoryorder</c> is set to <c>array</c>. Should be
                an array the same length as <c>categoryarray</c> Used with <c>categoryorder</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Dimension.Values">
            <summary>
                Dimension values. <c>values[n]</c> represents the category value of the
                <c>n</c>th point in the dataset, therefore the <c>values</c> vector for
                all dimensions must be the same (longer vectors will be truncated).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Dimension.DisplayIndex">
            <summary>
                The display index of dimension, from left to right, zero indexed, defaults
                to dimension index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Dimension.Visible">
            <summary>
                Shows the dimension when set to <c>true</c> (the default). Hides the dimension
                for <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Dimension.CategoryArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  categoryarray .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Dimension.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Dimension.ValuesSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  values .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.DimensionLib.CategoryOrderEnum">
            <summary>
                Specifies the ordering logic for the categories in the dimension. By default,
                plotly uses <c>trace</c>, which specifies the order that is present in the
                data supplied. Set <c>categoryorder</c> to &#39;category ascending&#39;
                or &#39;category descending&#39; if order should be determined by the alphanumerical
                order of the category names. Set <c>categoryorder</c> to <c>array</c> to
                derive the ordering from the attribute <c>categoryarray</c>. If a category
                is not found in the <c>categoryarray</c> array, the sorting behavior for
                that attribute will be identical to the <c>trace</c> mode. The unspecified
                categories will follow the categories in <c>categoryarray</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.Domain">
            <summary>
                The Domain class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Domain.X">
            <summary>
                Sets the horizontal domain of this parcats trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Domain.Y">
            <summary>
                Sets the vertical domain of this parcats trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Domain.Row">
            <summary>
                If there is a layout grid, use the domain for this row in the grid for this
                parcats trace .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Domain.Column">
            <summary>
                If there is a layout grid, use the domain for this column in the grid for
                this parcats trace .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.HoverOnEnum">
            <summary>
                Sets the hover interaction mode for the parcats diagram. If <c>category</c>,
                hover interaction take place per category. If <c>color</c>, hover interactions
                take place per color per category. If <c>dimension</c>, hover interactions
                take place across all categories per dimension.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LabelFont">
            <summary>
                The LabelFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LabelFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LabelFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LabelFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Line.Color">
            <summary>
                Sets thelinecolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>line.cmin</c> and <c>line.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Line.ColorArray">
            <summary>
                Sets thelinecolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>line.cmin</c> and <c>line.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>line.color</c>) or the bounds set in <c>line.cmin</c>
                and <c>line.cmax</c>  Has an effect only if in <c>line.color</c>is set to
                a numerical array. Defaults to <c>false</c> when <c>line.cmin</c> and <c>line.cmax</c>
                are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>line.color</c>is
                set to a numerical array. Value should have the same units as in <c>line.color</c>
                and if set, <c>line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>line.color</c>is
                set to a numerical array. Value should have the same units as in <c>line.color</c>
                and if set, <c>line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>line.cmin</c> and/or
                <c>line.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>line.color</c>is set to a numerical array. Value should have the same
                units as in <c>line.color</c>. Has no effect when <c>line.cauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>line.color</c>is set to
                a numerical array. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>line.cmin</c>
                and <c>line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>line.colorscale</c>. Has an effect
                only if in <c>line.color</c>is set to a numerical array. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>line.color</c>is
                set to a numerical array. If true, <c>line.cmin</c> will correspond to the
                last color in the array and <c>line.cmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Line.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>line.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Line.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Line.Shape">
            <summary>
                Sets the shape of the paths. If <c>linear</c>, paths are composed of straight
                lines. If <c>hspline</c>, paths are composed of horizontal curved splines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Line.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>count</c>
                and <c>probability</c>. Anything contained in tag <c>&lt;extra&gt;</c> is
                displayed in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.LineLib.ShapeEnum">
            <summary>
                Sets the shape of the paths. If <c>linear</c>, paths are composed of straight
                lines. If <c>hspline</c>, paths are composed of horizontal curved splines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.SortPathsEnum">
            <summary>
                Sets the path sorting algorithm. If <c>forward</c>, sort paths based on
                dimension categories from left to right. If <c>backward</c>, sort paths
                based on dimensions categories from right to left.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCatsLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCatsLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoords">
            <summary>
                The ParCoords class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.Domain">
            <summary>
                Gets or sets the Domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.LabelAngle">
            <summary>
                Sets the angle of the labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the labels vertically. Tilted labels with
                <c>labelangle</c> may be positioned better inside margins when <c>labelposition</c>
                is set to <c>bottom</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.LabelSide">
            <summary>
                Specifies the location of the <c>label</c>. <c>top</c> positions labels
                above, next to the title <c>bottom</c> positions labels below the graph
                Tilted labels with <c>labelangle</c> may be positioned better inside margins
                when <c>labelposition</c> is set to <c>bottom</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.LabelFont">
            <summary>
                Sets the font for the <c>dimension</c> labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.TickFont">
            <summary>
                Sets the font for the <c>dimension</c> tick values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.RangeFont">
            <summary>
                Sets the font for the <c>dimension</c> range values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.Dimensions">
            <summary>
                Gets or sets the Dimensions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoords.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.Dimension">
            <summary>
                The Dimension class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Dimension.Label">
            <summary>
                The shown name of the dimension.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Dimension.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Dimension.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Dimension.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Dimension.Visible">
            <summary>
                Shows the dimension when set to <c>true</c> (the default). Hides the dimension
                for <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Dimension.Range">
            <summary>
                The domain range that represents the full, shown axis extent. Defaults to
                the <c>values</c> extent. Must be an array of &#39;[fromValue, toValue]&#39;
                with finite numbers as elements.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Dimension.ConstraintRange">
            <summary>
                The domain range to which the filter on the dimension is constrained. Must
                be an array of &#39;[fromValue, toValue]&#39; with &#39;fromValue &lt;=
                toValue&#39;, or if <c>multiselect</c> is not disabled, you may give an
                array of arrays, where each inner array is &#39;[fromValue, toValue]&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Dimension.MultiSelect">
            <summary>
                Do we allow multiple selection ranges or just a single range?
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Dimension.Values">
            <summary>
                Dimension values. <c>values[n]</c> represents the value of the <c>n</c>th
                point in the dataset, therefore the <c>values</c> vector for all dimensions
                must be the same (longer vectors will be truncated). Each value must be
                a finite number.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Dimension.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Dimension.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Dimension.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Dimension.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Dimension.ValuesSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  values .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.Domain">
            <summary>
                The Domain class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Domain.X">
            <summary>
                Sets the horizontal domain of this parcoords trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Domain.Y">
            <summary>
                Sets the vertical domain of this parcoords trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Domain.Row">
            <summary>
                If there is a layout grid, use the domain for this row in the grid for this
                parcoords trace .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Domain.Column">
            <summary>
                If there is a layout grid, use the domain for this column in the grid for
                this parcoords trace .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LabelFont">
            <summary>
                The LabelFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LabelFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LabelFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LabelFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LabelSideEnum">
            <summary>
                Specifies the location of the <c>label</c>. <c>top</c> positions labels
                above, next to the title <c>bottom</c> positions labels below the graph
                Tilted labels with <c>labelangle</c> may be positioned better inside margins
                when <c>labelposition</c> is set to <c>bottom</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Line.Color">
            <summary>
                Sets thelinecolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>line.cmin</c> and <c>line.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Line.ColorArray">
            <summary>
                Sets thelinecolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>line.cmin</c> and <c>line.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>line.color</c>) or the bounds set in <c>line.cmin</c>
                and <c>line.cmax</c>  Has an effect only if in <c>line.color</c>is set to
                a numerical array. Defaults to <c>false</c> when <c>line.cmin</c> and <c>line.cmax</c>
                are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>line.color</c>is
                set to a numerical array. Value should have the same units as in <c>line.color</c>
                and if set, <c>line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>line.color</c>is
                set to a numerical array. Value should have the same units as in <c>line.color</c>
                and if set, <c>line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>line.cmin</c> and/or
                <c>line.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>line.color</c>is set to a numerical array. Value should have the same
                units as in <c>line.color</c>. Has no effect when <c>line.cauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>line.color</c>is set to
                a numerical array. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>line.cmin</c>
                and <c>line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>line.colorscale</c>. Has an effect
                only if in <c>line.color</c>is set to a numerical array. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>line.color</c>is
                set to a numerical array. If true, <c>line.cmin</c> will correspond to the
                last color in the array and <c>line.cmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Line.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>line.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Line.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.LineLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.RangeFont">
            <summary>
                The RangeFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.RangeFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.RangeFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.RangeFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ParCoordsLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ParCoordsLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Pie">
            <summary>
                The Pie class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Labels">
            <summary>
                Sets the sector labels. If <c>labels</c> entries are duplicated, we sum
                associated <c>values</c> or simply count occurrences if <c>values</c> is
                not provided. For other array attributes (including color) we use the first
                non-empty entry among all occurrences of the label.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Label0">
            <summary>
                Alternate to <c>labels</c>. Builds a numeric set of labels. Use with <c>dlabel</c>
                where <c>label0</c> is the starting label and <c>dlabel</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.DLabel">
            <summary>
                Sets the label step. See <c>label0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Values">
            <summary>
                Sets the values of the sectors. If omitted, we count occurrences of each
                label.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Text">
            <summary>
                Sets text elements associated with each sector. If trace <c>textinfo</c>
                contains a <c>text</c> flag, these elements will be seen on the chart. If
                trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.HoverText">
            <summary>
                Sets hover text elements associated with each sector. If a single string,
                the same string appears for all data points. If an array of string, the
                items are mapped in order of this trace&#39;s sectors. To be seen, trace
                <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.HoverTextArray">
            <summary>
                Sets hover text elements associated with each sector. If a single string,
                the same string appears for all data points. If an array of string, the
                items are mapped in order of this trace&#39;s sectors. To be seen, trace
                <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.ScaleGroup">
            <summary>
                If there are multiple pie charts that should be sized according to their
                totals, link them by providing a non-empty group id here shared by every
                trace in the same group.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.TextInfo">
            <summary>
                Determines which trace information appear on the graph.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>label</c>,
                <c>color</c>, <c>value</c>, <c>percent</c> and <c>text</c>. Anything contained
                in tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>label</c>,
                <c>color</c>, <c>value</c>, <c>percent</c> and <c>text</c>. Anything contained
                in tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>label</c>, <c>color</c>, <c>value</c>, <c>percent</c> and <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>label</c>, <c>color</c>, <c>value</c>, <c>percent</c> and <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.TextPosition">
            <summary>
                Specifies the location of the <c>textinfo</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.TextPositionArray">
            <summary>
                Specifies the location of the <c>textinfo</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.TextFont">
            <summary>
                Sets the font used for <c>textinfo</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.InsideTextOrientation">
            <summary>
                Controls the orientation of the text inside chart sectors. When set to <c>auto</c>,
                text may be oriented in any direction in order to be as big as possible
                in the middle of a sector. The <c>horizontal</c> option orients text to
                be parallel with the bottom of the chart, and may make text smaller in order
                to achieve that goal. The <c>radial</c> option orients text along the radius
                of the sector. The <c>tangential</c> option orients text perpendicular to
                the radius of the sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.InsideTextFont">
            <summary>
                Sets the font used for <c>textinfo</c> lying inside the sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.OutsideTextFont">
            <summary>
                Sets the font used for <c>textinfo</c> lying outside the sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.AutoMargin">
            <summary>
                Determines whether outside text labels can push the margins.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Domain">
            <summary>
                Gets or sets the Domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Hole">
            <summary>
                Sets the fraction of the radius to cut out of the pie. Use this to make
                a donut chart.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Sort">
            <summary>
                Determines whether or not the sectors are reordered from largest to smallest.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Direction">
            <summary>
                Specifies the direction at which succeeding sectors follow one another.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Rotation">
            <summary>
                Instead of the first slice starting at 12 o&#39;clock, rotate to some other
                angle.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.Pull">
            <summary>
                Sets the fraction of larger radius to pull the sectors out from the center.
                This can be a constant to pull all slices apart from each other equally
                or an array to highlight one or more slices.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.PullArray">
            <summary>
                Sets the fraction of larger radius to pull the sectors out from the center.
                This can be a constant to pull all slices apart from each other equally
                or an array to highlight one or more slices.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.LabelsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  labels .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.ValuesSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  values .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.TextPositionSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  textposition .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Pie.PullSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  pull .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.DirectionEnum">
            <summary>
                Specifies the direction at which succeeding sectors follow one another.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.Domain">
            <summary>
                The Domain class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.Domain.X">
            <summary>
                Sets the horizontal domain of this pie trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.Domain.Y">
            <summary>
                Sets the vertical domain of this pie trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.Domain.Row">
            <summary>
                If there is a layout grid, use the domain for this row in the grid for this
                pie trace .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.Domain.Column">
            <summary>
                If there is a layout grid, use the domain for this column in the grid for
                this pie trace .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.InsideTextFont">
            <summary>
                The InsideTextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.InsideTextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.InsideTextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.InsideTextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.InsideTextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.InsideTextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.InsideTextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.InsideTextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.InsideTextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.InsideTextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.InsideTextOrientationEnum">
            <summary>
                Controls the orientation of the text inside chart sectors. When set to <c>auto</c>,
                text may be oriented in any direction in order to be as big as possible
                in the middle of a sector. The <c>horizontal</c> option orients text to
                be parallel with the bottom of the chart, and may make text smaller in order
                to achieve that goal. The <c>radial</c> option orients text along the radius
                of the sector. The <c>tangential</c> option orients text perpendicular to
                the radius of the sector.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.Marker.Colors">
            <summary>
                Sets the color of each sector. If not specified, the default trace color
                set is used to pick the sector colors.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.Marker.ColorsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  colors .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.MarkerLib.Line.Color">
            <summary>
                Sets the color of the line enclosing each sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets the color of the line enclosing each sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the line enclosing each sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the line enclosing each sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.OutsideTextFont">
            <summary>
                The OutsideTextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.OutsideTextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.OutsideTextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.OutsideTextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.OutsideTextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.OutsideTextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.OutsideTextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.OutsideTextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.OutsideTextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.OutsideTextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.TextInfoFlag">
            <summary>
                Determines which trace information appear on the graph.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.TextPositionEnum">
            <summary>
                Specifies the location of the <c>textinfo</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.Title.Text">
            <summary>
                Sets the title of the chart. If it is empty, no title is displayed. Note
                that before the existence of <c>title.text</c>, the title&#39;s contents
                used to be defined as the <c>title</c> attribute itself. This behavior has
                been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.Title.Font">
            <summary>
                Sets the font used for <c>title</c>. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.Title.Position">
            <summary>
                Specifies the location of the <c>title</c>. Note that the title&#39;s position
                used to be set by the now deprecated <c>titleposition</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TitleLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TitleLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TitleLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TitleLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TitleLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PieLib.TitleLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.TitleLib.PositionEnum">
            <summary>
                Specifies the location of the <c>title</c>. Note that the title&#39;s position
                used to be set by the now deprecated <c>titleposition</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PieLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PointCloud">
            <summary>
                The PointCloud class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.X">
            <summary>
                Sets the x coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.Y">
            <summary>
                Sets the y coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.XY">
            <summary>
                Faster alternative to specifying <c>x</c> and <c>y</c> separately. If supplied,
                it must be a typed <c>Float32Array</c> array that represents points such
                that &#39;xy[i &#39; 2] = x[i]&#39; and &#39;xy[i &#39; 2 + 1] = y[i]&#39;
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.Indices">
            <summary>
                A sequential value, 0..n, supply it to avoid creating this array inside
                plotting. If specified, it must be a typed <c>Int32Array</c> array. Its
                length must be equal to or greater than the number of points. For the best
                performance and memory use, create one large <c>indices</c> typed array
                that is guaranteed to be at least as long as the largest number of points
                during use, and reuse it on each <c>Plotly.restyle()</c> call.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.XBounds">
            <summary>
                Specify <c>xbounds</c> in the shape of `[xMin, xMax] to avoid looping through
                the <c>xy</c> typed array. Use it in conjunction with <c>xy</c> and <c>ybounds</c>
                for the performance benefits.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.YBounds">
            <summary>
                Specify <c>ybounds</c> in the shape of `[yMin, yMax] to avoid looping through
                the <c>xy</c> typed array. Use it in conjunction with <c>xy</c> and <c>xbounds</c>
                for the performance benefits.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.Text">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.TextArray">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.XYSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  xy .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.IndicesSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  indices .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.XBoundsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  xbounds .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.YBoundsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ybounds .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloud.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PointCloudLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PointCloudLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PointCloudLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PointCloudLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PointCloudLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.Marker.Color">
            <summary>
                Sets the marker fill color. It accepts a specific color.If the color is
                not fully opaque and there are hundreds of thousandsof points, it may cause
                slower zooming and panning.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.Marker.Opacity">
            <summary>
                Sets the marker opacity. The default value is <c>1</c> (fully opaque). If
                the markers are not fully opaque and there are hundreds of thousands of
                points, it may cause slower zooming and panning. Opacity fades the color
                even if <c>blend</c> is left on <c>false</c> even if there is no translucency
                effect in that case.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.Marker.Blend">
            <summary>
                Determines if colors are blended together for a translucency effect in case
                <c>opacity</c> is specified as a value less then <c>1</c>. Setting <c>blend</c>
                to <c>true</c> reduces zoom/pan speed if used with large numbers of points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.Marker.SizeMin">
            <summary>
                Sets the minimum size (in px) of the rendered marker points, effective when
                the <c>pointcloud</c> shows a million or more points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.Marker.SizeMax">
            <summary>
                Sets the maximum size (in px) of the rendered marker points. Effective when
                the <c>pointcloud</c> shows only few points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.Marker.Border">
            <summary>
                Gets or sets the Border.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PointCloudLib.MarkerLib.Border">
            <summary>
                The Border class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.MarkerLib.Border.Color">
            <summary>
                Sets the stroke color. It accepts a specific color. If the color is not
                fully opaque and there are hundreds of thousands of points, it may cause
                slower zooming and panning.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.MarkerLib.Border.AreaRatio">
            <summary>
                Specifies what fraction of the marker area is covered with the border.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PointCloudLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.PointCloudLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.PointCloudLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Sankey">
            <summary>
                The Sankey class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired. Note that this attribute
                is superseded by <c>node.hoverinfo</c> and <c>node.hoverinfo</c> for nodes
                and links respectively.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.Domain">
            <summary>
                Gets or sets the Domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.Orientation">
            <summary>
                Sets the orientation of the Sankey diagram.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.ValueFormat">
            <summary>
                Sets the value formatting rule using d3 formatting mini-language which is
                similar to those of Python. See https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.ValueSuffix">
            <summary>
                Adds a unit to follow the value in the hover tooltip. Add a space if a separation
                is necessary from the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.Arrangement">
            <summary>
                If value is <c>snap</c> (the default), the node arrangement is assisted
                by automatic snapping of elements to preserve space between nodes specified
                via <c>nodepad</c>. If value is <c>perpendicular</c>, the nodes can only
                move along a line perpendicular to the flow. If value is <c>freeform</c>,
                the nodes can freely move on the plane. If value is <c>fixed</c>, the nodes
                are stationary.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.TextFont">
            <summary>
                Sets the font for node labels
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.Node">
            <summary>
                The nodes of the Sankey plot.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.Link">
            <summary>
                The links of the Sankey plot.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sankey.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.ArrangementEnum">
            <summary>
                If value is <c>snap</c> (the default), the node arrangement is assisted
                by automatic snapping of elements to preserve space between nodes specified
                via <c>nodepad</c>. If value is <c>perpendicular</c>, the nodes can only
                move along a line perpendicular to the flow. If value is <c>freeform</c>,
                the nodes can freely move on the plane. If value is <c>fixed</c>, the nodes
                are stationary.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.Domain">
            <summary>
                The Domain class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Domain.X">
            <summary>
                Sets the horizontal domain of this sankey trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Domain.Y">
            <summary>
                Sets the vertical domain of this sankey trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Domain.Row">
            <summary>
                If there is a layout grid, use the domain for this row in the grid for this
                sankey trace .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Domain.Column">
            <summary>
                If there is a layout grid, use the domain for this column in the grid for
                this sankey trace .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired. Note that this attribute
                is superseded by <c>node.hoverinfo</c> and <c>node.hoverinfo</c> for nodes
                and links respectively.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.Link">
            <summary>
                The Link class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.Label">
            <summary>
                The shown name of the link.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.Color">
            <summary>
                Sets the <c>link</c> color. It can be a single value, or an array for specifying
                color for each <c>link</c>. If <c>link.color</c> is omitted, then by default,
                a translucent grey link will be used.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.ColorArray">
            <summary>
                Sets the <c>link</c> color. It can be a single value, or an array for specifying
                color for each <c>link</c>. If <c>link.color</c> is omitted, then by default,
                a translucent grey link will be used.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.CustomData">
            <summary>
                Assigns extra data to each link.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.Source">
            <summary>
                An integer number &#39;[0..nodes.length - 1]&#39; that represents the source
                node.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.Target">
            <summary>
                An integer number &#39;[0..nodes.length - 1]&#39; that represents the target
                node.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.Value">
            <summary>
                A numeric value representing the flow volume value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.HoverInfo">
            <summary>
                Determines which trace information appear when hovering links. If <c>none</c>
                or <c>skip</c> are set, no information is displayed upon hovering. But,
                if <c>none</c> is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>value</c>
                and <c>label</c>. Anything contained in tag <c>&lt;extra&gt;</c> is displayed
                in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>value</c>
                and <c>label</c>. Anything contained in tag <c>&lt;extra&gt;</c> is displayed
                in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.ColorScales">
            <summary>
                Gets or sets the ColorScales.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.LabelSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  label .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.SourceSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  source .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.TargetSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  target .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.ValueSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  value .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Link.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.LinkLib.ConcentrationScales">
            <summary>
                The ConcentrationScales class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.ConcentrationScales.Label">
            <summary>
                The label of the links to color based on their concentration within a flow.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.ConcentrationScales.CMax">
            <summary>
                Sets the upper bound of the color domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.ConcentrationScales.CMin">
            <summary>
                Sets the lower bound of the color domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.ConcentrationScales.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>cmin</c> and
                <c>cmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.ConcentrationScales.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.ConcentrationScales.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverInfoEnum">
            <summary>
                Determines which trace information appear when hovering links. If <c>none</c>
                or <c>skip</c> are set, no information is displayed upon hovering. But,
                if <c>none</c> is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.LinkLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.Line.Color">
            <summary>
                Sets the color of the <c>line</c> around each <c>link</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.Line.ColorArray">
            <summary>
                Sets the color of the <c>line</c> around each <c>link</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.Line.Width">
            <summary>
                Sets the width (in px) of the <c>line</c> around each <c>link</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the <c>line</c> around each <c>link</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.LinkLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.Node">
            <summary>
                The Node class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.Label">
            <summary>
                The shown name of the node.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.Groups">
            <summary>
                Groups of nodes. Each group is defined by an array with the indices of the
                nodes it contains. Multiple groups can be specified.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.X">
            <summary>
                The normalized horizontal position of the node.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.Y">
            <summary>
                The normalized vertical position of the node.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.Color">
            <summary>
                Sets the <c>node</c> color. It can be a single value, or an array for specifying
                color for each <c>node</c>. If <c>node.color</c> is omitted, then the default
                <c>Plotly</c> color palette will be cycled through to have a variety of
                colors. These defaults are not fully opaque, to allow some visibility of
                what is beneath the node.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.ColorArray">
            <summary>
                Sets the <c>node</c> color. It can be a single value, or an array for specifying
                color for each <c>node</c>. If <c>node.color</c> is omitted, then the default
                <c>Plotly</c> color palette will be cycled through to have a variety of
                colors. These defaults are not fully opaque, to allow some visibility of
                what is beneath the node.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.CustomData">
            <summary>
                Assigns extra data to each node.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.Pad">
            <summary>
                Sets the padding (in px) between the <c>nodes</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.Thickness">
            <summary>
                Sets the thickness (in px) of the <c>nodes</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.HoverInfo">
            <summary>
                Determines which trace information appear when hovering nodes. If <c>none</c>
                or <c>skip</c> are set, no information is displayed upon hovering. But,
                if <c>none</c> is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>value</c>
                and <c>label</c>. Anything contained in tag <c>&lt;extra&gt;</c> is displayed
                in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>value</c>
                and <c>label</c>. Anything contained in tag <c>&lt;extra&gt;</c> is displayed
                in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.LabelSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  label .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Node.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverInfoEnum">
            <summary>
                Determines which trace information appear when hovering nodes. If <c>none</c>
                or <c>skip</c> are set, no information is displayed upon hovering. But,
                if <c>none</c> is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.NodeLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.Line.Color">
            <summary>
                Sets the color of the <c>line</c> around each <c>node</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.Line.ColorArray">
            <summary>
                Sets the color of the <c>line</c> around each <c>node</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.Line.Width">
            <summary>
                Sets the width (in px) of the <c>line</c> around each <c>node</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the <c>line</c> around each <c>node</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.NodeLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.OrientationEnum">
            <summary>
                Sets the orientation of the Sankey diagram.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SankeyLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SankeyLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter">
            <summary>
                The Scatter class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.X">
            <summary>
                Sets the x coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.X0">
            <summary>
                Alternate to <c>x</c>. Builds a linear space of x coordinates. Use with
                <c>dx</c> where <c>x0</c> is the starting coordinate and <c>dx</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.DX">
            <summary>
                Sets the x coordinate step. See <c>x0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Y">
            <summary>
                Sets the y coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Y0">
            <summary>
                Alternate to <c>y</c>. Builds a linear space of y coordinates. Use with
                <c>dy</c> where <c>y0</c> is the starting coordinate and <c>dy</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Dy">
            <summary>
                Sets the y coordinate step. See <c>y0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.StackGroup">
            <summary>
                Set several scatter traces (on the same subplot) to the same stackgroup
                in order to add their y values (or their x values if <c>orientation</c>
                is <c>h</c>). If blank or omitted this trace will not be stacked. Stacking
                also turns <c>fill</c> on by default, using <c>tonexty</c> (<c>tonextx</c>)
                if <c>orientation</c> is <c>h</c> (<c>v</c>) and sets the default <c>mode</c>
                to <c>lines</c> irrespective of point count. You can only stack on a numeric
                (linear or log) axis. Traces in a <c>stackgroup</c> will only fill to (or
                be filled to) other traces in the same group. With multiple <c>stackgroup</c>s
                or some traces stacked and some not, if fill-linked traces are not already
                consecutive, the later ones will be pushed down in the drawing order.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Orientation">
            <summary>
                Only relevant when <c>stackgroup</c> is used, and only the first <c>orientation</c>
                found in the <c>stackgroup</c> will be used - including if <c>visible</c>
                is <c>legendonly</c> but not if it is <c>false</c>. Sets the stacking direction.
                With <c>v</c> (<c>h</c>), the y (x) values of subsequent traces are added.
                Also affects the default value of <c>fill</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.GroupNorm">
            <summary>
                Only relevant when <c>stackgroup</c> is used, and only the first <c>groupnorm</c>
                found in the <c>stackgroup</c> will be used - including if <c>visible</c>
                is <c>legendonly</c> but not if it is <c>false</c>. Sets the normalization
                for the sum of this <c>stackgroup</c>. With <c>fraction</c>, the value of
                each trace at each location is divided by the sum of all trace values at
                that location. <c>percent</c> is the same but multiplied by 100 to show
                percentages. If there are multiple subplots, or multiple <c>stackgroup</c>s
                on one subplot, each will be normalized within its own set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.StackGaps">
            <summary>
                Only relevant when <c>stackgroup</c> is used, and only the first <c>stackgaps</c>
                found in the <c>stackgroup</c> will be used - including if <c>visible</c>
                is <c>legendonly</c> but not if it is <c>false</c>. Determines how we handle
                locations at which other traces in this group have data but this one does
                not. With &#39;infer zero&#39; we insert a zero at these locations. With
                <c>interpolate</c> we linearly interpolate between existing values, and
                extrapolate a constant beyond the existing values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Text">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.TextArray">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.HoverText">
            <summary>
                Sets hover text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.HoverTextArray">
            <summary>
                Sets hover text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Mode">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover. If there are less than
                20 points and the trace is not stacked then the default is <c>lines+markers</c>.
                Otherwise, <c>lines</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.HoverOn">
            <summary>
                Do the hover effects highlight individual points (markers or line points)
                or do they highlight filled regions? If the fill is <c>toself</c> or <c>tonext</c>
                and there are no markers or text, then the default is <c>fills</c>, otherwise
                it is <c>points</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.ConnectGaps">
            <summary>
                Determines whether or not gaps (i.e. {nan} or missing values) in the provided
                data arrays are connected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.ClipOnAxis">
            <summary>
                Determines whether or not markers and text nodes are clipped about the subplot
                axes. To show markers and text nodes above axis lines and tick labels, make
                sure to set <c>xaxis.layer</c> and <c>yaxis.layer</c> to &#39;below traces&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Fill">
            <summary>
                Sets the area to fill with a solid color. Defaults to <c>none</c> unless
                this trace is stacked, then it gets <c>tonexty</c> (<c>tonextx</c>) if <c>orientation</c>
                is <c>v</c> (<c>h</c>) Use with <c>fillcolor</c> if not <c>none</c>. <c>tozerox</c>
                and <c>tozeroy</c> fill to x=0 and y=0 respectively. <c>tonextx</c> and
                <c>tonexty</c> fill between the endpoints of this trace and the endpoints
                of the trace before it, connecting those endpoints with straight lines (to
                make a stacked area graph); if there is no trace before it, they behave
                like <c>tozerox</c> and <c>tozeroy</c>. <c>toself</c> connects the endpoints
                of the trace (or each segment of the trace if it has gaps) into a closed
                shape. <c>tonext</c> fills the space between two traces if one completely
                encloses the other (eg consecutive contour lines), and behaves like <c>toself</c>
                if there is no trace before it. <c>tonext</c> should not be used if one
                trace does not enclose the other. Traces in a <c>stackgroup</c> will only
                fill to (or be filled to) other traces in the same group. With multiple
                <c>stackgroup</c>s or some traces stacked and some not, if fill-linked traces
                are not already consecutive, the later ones will be pushed down in the drawing
                order.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.FillColor">
            <summary>
                Sets the fill color. Defaults to a half-transparent variant of the line
                color, marker color, or marker line color, whichever is available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.TextPosition">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.TextPositionArray">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.TextFont">
            <summary>
                Sets the text font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.R">
            <summary>
                r coordinates in scatter traces are deprecated!Please switch to the <c>scatterpolar</c>
                trace type.Sets the radial coordinatesfor legacy polar chart only.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.T">
            <summary>
                t coordinates in scatter traces are deprecated!Please switch to the <c>scatterpolar</c>
                trace type.Sets the angular coordinatesfor legacy polar chart only.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.ErrorX">
            <summary>
                Gets or sets the ErrorX.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.ErrorY">
            <summary>
                Gets or sets the ErrorY.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.XCalendar">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.YCalendar">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.TextPositionSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  textposition .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.RSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  r .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter.TSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  t .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3D">
            <summary>
                The Scatter3D class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.X">
            <summary>
                Sets the x coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Y">
            <summary>
                Sets the y coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Z">
            <summary>
                Sets the z coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Text">
            <summary>
                Sets text elements associated with each (x,y,z) triplet. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y,z) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.TextArray">
            <summary>
                Sets text elements associated with each (x,y,z) triplet. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y,z) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.HoverText">
            <summary>
                Sets text elements associated with each (x,y,z) triplet. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y,z) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.HoverTextArray">
            <summary>
                Sets text elements associated with each (x,y,z) triplet. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y,z) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Mode">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover. If there are less than
                20 points and the trace is not stacked then the default is <c>lines+markers</c>.
                Otherwise, <c>lines</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.SurfaceAxis">
            <summary>
                If <c>-1</c>, the scatter points are not fill with a surface If <c>0</c>,
                <c>1</c>, <c>2</c>, the scatter points are filled with a Delaunay surface
                about the x, y, z respectively.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.SurfaceColor">
            <summary>
                Sets the surface fill color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Projection">
            <summary>
                Gets or sets the Projection.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.ConnectGaps">
            <summary>
                Determines whether or not gaps (i.e. {nan} or missing values) in the provided
                data arrays are connected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.TextPosition">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.TextPositionArray">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.ErrorX">
            <summary>
                Gets or sets the ErrorX.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.ErrorY">
            <summary>
                Gets or sets the ErrorY.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.ErrorZ">
            <summary>
                Gets or sets the ErrorZ.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.XCalendar">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.YCalendar">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.ZCalendar">
            <summary>
                Sets the calendar system to use with <c>z</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.Scene">
            <summary>
                Sets a reference between this trace&#39;s 3D coordinate system and a 3D
                scene. If <c>scene</c> (the default value), the (x,y,z) coordinates refer
                to <c>layout.scene</c>. If <c>scene2</c>, the (x,y,z) coordinates refer
                to <c>layout.scene2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.TextPositionSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  textposition .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3D.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.ErrorX">
            <summary>
                The ErrorX class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorX.Visible">
            <summary>
                Determines whether or not this set of error bars is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorX.Type">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorX.Symmetric">
            <summary>
                Determines whether or not the error bars have the same length in both direction
                (top/bottom for vertical bars, left/right for horizontal bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorX.Array">
            <summary>
                Sets the data corresponding the length of each error bar. Values are plotted
                relative to the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorX.ArrayMinus">
            <summary>
                Sets the data corresponding the length of each error bar in the bottom (left)
                direction for vertical (horizontal) bars Values are plotted relative to
                the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorX.Value">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorX.ValueMinus">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars in the bottom (left) direction for vertical
                (horizontal) bars
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorX.TraceRef">
            <summary>
                Gets or sets the TraceRef.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorX.TraceRefMinus">
            <summary>
                Gets or sets the TraceRefMinus.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorX.CopyZStyle">
            <summary>
                Gets or sets the CopyZStyle.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorX.Color">
            <summary>
                Sets the stoke color of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorX.Thickness">
            <summary>
                Sets the thickness (in px) of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorX.Width">
            <summary>
                Sets the width (in px) of the cross-bar at both ends of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorX.ArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  array .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorX.ArrayMinusSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  arrayminus .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.ErrorXLib.TypeEnum">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.ErrorY">
            <summary>
                The ErrorY class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorY.Visible">
            <summary>
                Determines whether or not this set of error bars is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorY.Type">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorY.Symmetric">
            <summary>
                Determines whether or not the error bars have the same length in both direction
                (top/bottom for vertical bars, left/right for horizontal bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorY.Array">
            <summary>
                Sets the data corresponding the length of each error bar. Values are plotted
                relative to the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorY.ArrayMinus">
            <summary>
                Sets the data corresponding the length of each error bar in the bottom (left)
                direction for vertical (horizontal) bars Values are plotted relative to
                the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorY.Value">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorY.ValueMinus">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars in the bottom (left) direction for vertical
                (horizontal) bars
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorY.TraceRef">
            <summary>
                Gets or sets the TraceRef.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorY.TraceRefMinus">
            <summary>
                Gets or sets the TraceRefMinus.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorY.CopyZStyle">
            <summary>
                Gets or sets the CopyZStyle.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorY.Color">
            <summary>
                Sets the stoke color of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorY.Thickness">
            <summary>
                Sets the thickness (in px) of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorY.Width">
            <summary>
                Sets the width (in px) of the cross-bar at both ends of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorY.ArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  array .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorY.ArrayMinusSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  arrayminus .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.ErrorYLib.TypeEnum">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.ErrorZ">
            <summary>
                The ErrorZ class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorZ.Visible">
            <summary>
                Determines whether or not this set of error bars is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorZ.Type">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorZ.Symmetric">
            <summary>
                Determines whether or not the error bars have the same length in both direction
                (top/bottom for vertical bars, left/right for horizontal bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorZ.Array">
            <summary>
                Sets the data corresponding the length of each error bar. Values are plotted
                relative to the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorZ.ArrayMinus">
            <summary>
                Sets the data corresponding the length of each error bar in the bottom (left)
                direction for vertical (horizontal) bars Values are plotted relative to
                the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorZ.Value">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorZ.ValueMinus">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars in the bottom (left) direction for vertical
                (horizontal) bars
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorZ.TraceRef">
            <summary>
                Gets or sets the TraceRef.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorZ.TraceRefMinus">
            <summary>
                Gets or sets the TraceRefMinus.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorZ.Color">
            <summary>
                Sets the stoke color of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorZ.Thickness">
            <summary>
                Sets the thickness (in px) of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorZ.Width">
            <summary>
                Sets the width (in px) of the cross-bar at both ends of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorZ.ArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  array .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ErrorZ.ArrayMinusSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  arrayminus .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.ErrorZLib.TypeEnum">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Line.Width">
            <summary>
                Sets the line width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Line.Dash">
            <summary>
                Sets the dash style of the lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Line.Color">
            <summary>
                Sets thelinecolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>line.cmin</c> and <c>line.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Line.ColorArray">
            <summary>
                Sets thelinecolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>line.cmin</c> and <c>line.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>line.color</c>) or the bounds set in <c>line.cmin</c>
                and <c>line.cmax</c>  Has an effect only if in <c>line.color</c>is set to
                a numerical array. Defaults to <c>false</c> when <c>line.cmin</c> and <c>line.cmax</c>
                are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>line.color</c>is
                set to a numerical array. Value should have the same units as in <c>line.color</c>
                and if set, <c>line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>line.color</c>is
                set to a numerical array. Value should have the same units as in <c>line.color</c>
                and if set, <c>line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>line.cmin</c> and/or
                <c>line.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>line.color</c>is set to a numerical array. Value should have the same
                units as in <c>line.color</c>. Has no effect when <c>line.cauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>line.color</c>is set to
                a numerical array. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>line.cmin</c>
                and <c>line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>line.colorscale</c>. Has an effect
                only if in <c>line.color</c>is set to a numerical array. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>line.color</c>is
                set to a numerical array. If true, <c>line.cmin</c> will correspond to the
                last color in the array and <c>line.cmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Line.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>line.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Line.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.LineLib.DashEnum">
            <summary>
                Sets the dash style of the lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.Symbol">
            <summary>
                Sets the marker symbol type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.SymbolArray">
            <summary>
                Sets the marker symbol type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.Size">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.SizeArray">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.SizeRef">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the scale factor used to determine the rendered size of marker points. Use
                with <c>sizemin</c> and <c>sizemode</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.SizeMin">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the minimum size (in px) of the rendered marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.SizeMode">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.Opacity">
            <summary>
                Sets the marker opacity. Note that the marker opacity for scatter3d traces
                must be a scalar value for performance reasons. To set a blending opacity
                value (i.e. which is not transparent), set <c>marker.color</c> to an rgba
                color and use its alpha channel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.ColorArray">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.color</c>) or the bounds set in <c>marker.cmin</c>
                and <c>marker.cmax</c>  Has an effect only if in <c>marker.color</c>is set
                to a numerical array. Defaults to <c>false</c> when <c>marker.cmin</c> and
                <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>marker.color</c>is set to a numerical array. Value should have the
                same units as in <c>marker.color</c>. Has no effect when <c>marker.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.color</c>is set
                to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.cmin</c>
                and <c>marker.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if in <c>marker.color</c>is set to a numerical array. In case
                <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true, the default
                 palette will be chosen according to whether numbers in the <c>color</c>
                array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. If true, <c>marker.cmin</c> will correspond to
                the last color in the array and <c>marker.cmax</c> will correspond to the
                first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>marker.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.SymbolSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  symbol .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.line.color</c>) or the bounds set in <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>  Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Defaults to <c>false</c> when <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.line.cmin</c>
                and/or <c>marker.line.cmax</c> to be equidistant to this point. Has an effect
                only if in <c>marker.line.color</c>is set to a numerical array. Value should
                have the same units as in <c>marker.line.color</c>. Has no effect when <c>marker.line.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.line.colorscale</c>. Has
                an effect only if in <c>marker.line.color</c>is set to a numerical array.
                In case <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true,
                the default  palette will be chosen according to whether numbers in the
                <c>color</c> array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. If true, <c>marker.line.cmin</c> will correspond
                to the last color in the array and <c>marker.line.cmax</c> will correspond
                to the first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.SizeModeEnum">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.MarkerLib.SymbolEnum">
            <summary>
                Sets the marker symbol type.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.ModeFlag">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover. If there are less than
                20 points and the trace is not stacked then the default is <c>lines+markers</c>.
                Otherwise, <c>lines</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.Projection">
            <summary>
                The Projection class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Projection.X">
            <summary>
                Gets or sets the X.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Projection.Y">
            <summary>
                Gets or sets the Y.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Projection.Z">
            <summary>
                Gets or sets the Z.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.ProjectionLib.X">
            <summary>
                The X class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ProjectionLib.X.Show">
            <summary>
                Sets whether or not projections are shown along the x axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ProjectionLib.X.Opacity">
            <summary>
                Sets the projection color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ProjectionLib.X.Scale">
            <summary>
                Sets the scale factor determining the size of the projection marker points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.ProjectionLib.Y">
            <summary>
                The Y class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ProjectionLib.Y.Show">
            <summary>
                Sets whether or not projections are shown along the y axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ProjectionLib.Y.Opacity">
            <summary>
                Sets the projection color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ProjectionLib.Y.Scale">
            <summary>
                Sets the scale factor determining the size of the projection marker points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.ProjectionLib.Z">
            <summary>
                The Z class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ProjectionLib.Z.Show">
            <summary>
                Sets whether or not projections are shown along the z axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ProjectionLib.Z.Opacity">
            <summary>
                Sets the projection color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.ProjectionLib.Z.Scale">
            <summary>
                Sets the scale factor determining the size of the projection marker points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.SurfaceAxisEnum">
            <summary>
                If <c>-1</c>, the scatter points are not fill with a surface If <c>0</c>,
                <c>1</c>, <c>2</c>, the scatter points are filled with a Delaunay surface
                about the x, y, z respectively.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Scatter3DLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.TextPositionEnum">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.XCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.YCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Scatter3DLib.ZCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>z</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpet">
            <summary>
                The ScatterCarpet class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Carpet">
            <summary>
                An identifier for this carpet, so that <c>scattercarpet</c> and <c>contourcarpet</c>
                traces can specify a carpet plot on which they lie
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.A">
            <summary>
                Sets the a-axis coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.B">
            <summary>
                Sets the b-axis coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Mode">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover. If there are less than
                20 points and the trace is not stacked then the default is <c>lines+markers</c>.
                Otherwise, <c>lines</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Text">
            <summary>
                Sets text elements associated with each (a,b) point. If a single string,
                the same string appears over all the data points. If an array of strings,
                the items are mapped in order to the the data points in (a,b). If trace
                <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c> is not
                set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.TextArray">
            <summary>
                Sets text elements associated with each (a,b) point. If a single string,
                the same string appears over all the data points. If an array of strings,
                the items are mapped in order to the the data points in (a,b). If trace
                <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c> is not
                set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>a</c>, <c>b</c> and <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>a</c>, <c>b</c> and <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.HoverText">
            <summary>
                Sets hover text elements associated with each (a,b) point. If a single string,
                the same string appears over all the data points. If an array of strings,
                the items are mapped in order to the the data points in (a,b). To be seen,
                trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.HoverTextArray">
            <summary>
                Sets hover text elements associated with each (a,b) point. If a single string,
                the same string appears over all the data points. If an array of strings,
                the items are mapped in order to the the data points in (a,b). To be seen,
                trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.ConnectGaps">
            <summary>
                Determines whether or not gaps (i.e. {nan} or missing values) in the provided
                data arrays are connected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Fill">
            <summary>
                Sets the area to fill with a solid color. Use with <c>fillcolor</c> if not
                <c>none</c>. scatterternary has a subset of the options available to scatter.
                <c>toself</c> connects the endpoints of the trace (or each segment of the
                trace if it has gaps) into a closed shape. <c>tonext</c> fills the space
                between two traces if one completely encloses the other (eg consecutive
                contour lines), and behaves like <c>toself</c> if there is no trace before
                it. <c>tonext</c> should not be used if one trace does not enclose the other.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.FillColor">
            <summary>
                Sets the fill color. Defaults to a half-transparent variant of the line
                color, marker color, or marker line color, whichever is available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.TextFont">
            <summary>
                Sets the text font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.TextPosition">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.TextPositionArray">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.HoverOn">
            <summary>
                Do the hover effects highlight individual points (markers or line points)
                or do they highlight filled regions? If the fill is <c>toself</c> or <c>tonext</c>
                and there are no markers or text, then the default is <c>fills</c>, otherwise
                it is <c>points</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.ASrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  a .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.BSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  b .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.TextPositionSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  textposition .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpet.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.FillEnum">
            <summary>
                Sets the area to fill with a solid color. Use with <c>fillcolor</c> if not
                <c>none</c>. scatterternary has a subset of the options available to scatter.
                <c>toself</c> connects the endpoints of the trace (or each segment of the
                trace if it has gaps) into a closed shape. <c>tonext</c> fills the space
                between two traces if one completely encloses the other (eg consecutive
                contour lines), and behaves like <c>toself</c> if there is no trace before
                it. <c>tonext</c> should not be used if one trace does not enclose the other.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.HoverOnFlag">
            <summary>
                Do the hover effects highlight individual points (markers or line points)
                or do they highlight filled regions? If the fill is <c>toself</c> or <c>tonext</c>
                and there are no markers or text, then the default is <c>fills</c>, otherwise
                it is <c>points</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Line.Color">
            <summary>
                Sets the line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Line.Width">
            <summary>
                Sets the line width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Line.Dash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Line.Shape">
            <summary>
                Determines the line shape. With <c>spline</c> the lines are drawn using
                spline interpolation. The other available values correspond to step-wise
                line shapes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Line.Smoothing">
            <summary>
                Has an effect only if <c>shape</c> is set to <c>spline</c> Sets the amount
                of smoothing. <c>0</c> corresponds to no smoothing (equivalent to a <c>linear</c>
                shape).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.LineLib.ShapeEnum">
            <summary>
                Determines the line shape. With <c>spline</c> the lines are drawn using
                spline interpolation. The other available values correspond to step-wise
                line shapes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.Symbol">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.SymbolArray">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.Opacity">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.OpacityArray">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.MaxDisplayed">
            <summary>
                Sets a maximum number of points to be drawn on the graph. <c>0</c> corresponds
                to no limit.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.Size">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.SizeArray">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.SizeRef">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the scale factor used to determine the rendered size of marker points. Use
                with <c>sizemin</c> and <c>sizemode</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.SizeMin">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the minimum size (in px) of the rendered marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.SizeMode">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.Gradient">
            <summary>
                Gets or sets the Gradient.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.ColorArray">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.color</c>) or the bounds set in <c>marker.cmin</c>
                and <c>marker.cmax</c>  Has an effect only if in <c>marker.color</c>is set
                to a numerical array. Defaults to <c>false</c> when <c>marker.cmin</c> and
                <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>marker.color</c>is set to a numerical array. Value should have the
                same units as in <c>marker.color</c>. Has no effect when <c>marker.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.color</c>is set
                to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.cmin</c>
                and <c>marker.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if in <c>marker.color</c>is set to a numerical array. In case
                <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true, the default
                 palette will be chosen according to whether numbers in the <c>color</c>
                array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. If true, <c>marker.cmin</c> will correspond to
                the last color in the array and <c>marker.cmax</c> will correspond to the
                first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>marker.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.SymbolSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  symbol .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Gradient">
            <summary>
                The Gradient class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Gradient.Type">
            <summary>
                Sets the type of gradient used to fill the markers
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Gradient.TypeArray">
            <summary>
                Sets the type of gradient used to fill the markers
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Gradient.Color">
            <summary>
                Sets the final color of the gradient fill: the center color for radial,
                the right for horizontal, or the bottom for vertical.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Gradient.ColorArray">
            <summary>
                Sets the final color of the gradient fill: the center color for radial,
                the right for horizontal, or the bottom for vertical.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Gradient.TypeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  type .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Gradient.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.GradientLib.TypeEnum">
            <summary>
                Sets the type of gradient used to fill the markers
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.line.color</c>) or the bounds set in <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>  Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Defaults to <c>false</c> when <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.line.cmin</c>
                and/or <c>marker.line.cmax</c> to be equidistant to this point. Has an effect
                only if in <c>marker.line.color</c>is set to a numerical array. Value should
                have the same units as in <c>marker.line.color</c>. Has no effect when <c>marker.line.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.line.colorscale</c>. Has
                an effect only if in <c>marker.line.color</c>is set to a numerical array.
                In case <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true,
                the default  palette will be chosen according to whether numbers in the
                <c>color</c> array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. If true, <c>marker.line.cmin</c> will correspond
                to the last color in the array and <c>marker.line.cmax</c> will correspond
                to the first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.SizeModeEnum">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.MarkerLib.SymbolEnum">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.ModeFlag">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover. If there are less than
                20 points and the trace is not stacked then the default is <c>lines+markers</c>.
                Otherwise, <c>lines</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Selected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.SelectedLib.Marker.Color">
            <summary>
                Sets the marker color of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.SelectedLib.Marker.Size">
            <summary>
                Sets the marker size of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.SelectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.SelectedLib.TextFont.Color">
            <summary>
                Sets the text font color of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.TextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.TextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.TextPositionEnum">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.Unselected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.UnselectedLib.Marker.Color">
            <summary>
                Sets the marker color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.UnselectedLib.Marker.Size">
            <summary>
                Sets the marker size of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.UnselectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterCarpetLib.UnselectedLib.TextFont.Color">
            <summary>
                Sets the text font color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterCarpetLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeo">
            <summary>
                The ScatterGeo class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Lon">
            <summary>
                Sets the longitude coordinates (in degrees East).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Lat">
            <summary>
                Sets the latitude coordinates (in degrees North).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Locations">
            <summary>
                Sets the coordinates via location IDs or names. Coordinates correspond to
                the centroid of each location given. See <c>locationmode</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.LocationMode">
            <summary>
                Determines the set of locations used to match entries in <c>locations</c>
                to regions on the map. Values <c>ISO-3</c>, <c>USA-states</c>, &#39;country
                names&#39; correspond to features on the base map and value <c>geojson-id</c>
                corresponds to features from a custom GeoJSON linked to the <c>geojson</c>
                attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.GeoJson">
            <summary>
                Sets optional GeoJSON data associated with this trace. If not given, the
                features on the base map are used when <c>locations</c> is set. It can be
                set as a valid GeoJSON object or as a URL string. Note that we only accept
                GeoJSONs of type <c>FeatureCollection</c> or <c>Feature</c> with geometries
                of type <c>Polygon</c> or <c>MultiPolygon</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.FeatureIdKey">
            <summary>
                Sets the key in GeoJSON features which is used as id to match the items
                included in the <c>locations</c> array. Only has an effect when <c>geojson</c>
                is set. Support nested property, for example <c>properties.name</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Mode">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover. If there are less than
                20 points and the trace is not stacked then the default is <c>lines+markers</c>.
                Otherwise, <c>lines</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Text">
            <summary>
                Sets text elements associated with each (lon,lat) pair or item in <c>locations</c>.
                If a single string, the same string appears over all the data points. If
                an array of string, the items are mapped in order to the this trace&#39;s
                (lon,lat) or <c>locations</c> coordinates. If trace <c>hoverinfo</c> contains
                a <c>text</c> flag and <c>hovertext</c> is not set, these elements will
                be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.TextArray">
            <summary>
                Sets text elements associated with each (lon,lat) pair or item in <c>locations</c>.
                If a single string, the same string appears over all the data points. If
                an array of string, the items are mapped in order to the this trace&#39;s
                (lon,lat) or <c>locations</c> coordinates. If trace <c>hoverinfo</c> contains
                a <c>text</c> flag and <c>hovertext</c> is not set, these elements will
                be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>lat</c>, <c>lon</c>, <c>location</c> and <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>lat</c>, <c>lon</c>, <c>location</c> and <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.HoverText">
            <summary>
                Sets hover text elements associated with each (lon,lat) pair or item in
                <c>locations</c>. If a single string, the same string appears over all the
                data points. If an array of string, the items are mapped in order to the
                this trace&#39;s (lon,lat) or <c>locations</c> coordinates. To be seen,
                trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.HoverTextArray">
            <summary>
                Sets hover text elements associated with each (lon,lat) pair or item in
                <c>locations</c>. If a single string, the same string appears over all the
                data points. If an array of string, the items are mapped in order to the
                this trace&#39;s (lon,lat) or <c>locations</c> coordinates. To be seen,
                trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.TextFont">
            <summary>
                Sets the text font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.TextPosition">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.TextPositionArray">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.ConnectGaps">
            <summary>
                Determines whether or not gaps (i.e. {nan} or missing values) in the provided
                data arrays are connected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Fill">
            <summary>
                Sets the area to fill with a solid color. Use with <c>fillcolor</c> if not
                <c>none</c>. <c>toself</c> connects the endpoints of the trace (or each
                segment of the trace if it has gaps) into a closed shape.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.FillColor">
            <summary>
                Sets the fill color. Defaults to a half-transparent variant of the line
                color, marker color, or marker line color, whichever is available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.Geo">
            <summary>
                Sets a reference between this trace&#39;s geospatial coordinates and a geographic
                map. If <c>geo</c> (the default value), the geospatial coordinates refer
                to <c>layout.geo</c>. If <c>geo2</c>, the geospatial coordinates refer to
                <c>layout.geo2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.LonSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  lon .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.LatSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  lat .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.LocationsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  locations .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.TextPositionSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  textposition .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeo.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.FillEnum">
            <summary>
                Sets the area to fill with a solid color. Use with <c>fillcolor</c> if not
                <c>none</c>. <c>toself</c> connects the endpoints of the trace (or each
                segment of the trace if it has gaps) into a closed shape.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Line.Color">
            <summary>
                Sets the line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Line.Width">
            <summary>
                Sets the line width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Line.Dash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.LocationModeEnum">
            <summary>
                Determines the set of locations used to match entries in <c>locations</c>
                to regions on the map. Values <c>ISO-3</c>, <c>USA-states</c>, &#39;country
                names&#39; correspond to features on the base map and value <c>geojson-id</c>
                corresponds to features from a custom GeoJSON linked to the <c>geojson</c>
                attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.Symbol">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.SymbolArray">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.Opacity">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.OpacityArray">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.Size">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.SizeArray">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.SizeRef">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the scale factor used to determine the rendered size of marker points. Use
                with <c>sizemin</c> and <c>sizemode</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.SizeMin">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the minimum size (in px) of the rendered marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.SizeMode">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.Gradient">
            <summary>
                Gets or sets the Gradient.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.ColorArray">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.color</c>) or the bounds set in <c>marker.cmin</c>
                and <c>marker.cmax</c>  Has an effect only if in <c>marker.color</c>is set
                to a numerical array. Defaults to <c>false</c> when <c>marker.cmin</c> and
                <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>marker.color</c>is set to a numerical array. Value should have the
                same units as in <c>marker.color</c>. Has no effect when <c>marker.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.color</c>is set
                to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.cmin</c>
                and <c>marker.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if in <c>marker.color</c>is set to a numerical array. In case
                <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true, the default
                 palette will be chosen according to whether numbers in the <c>color</c>
                array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. If true, <c>marker.cmin</c> will correspond to
                the last color in the array and <c>marker.cmax</c> will correspond to the
                first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>marker.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.SymbolSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  symbol .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Gradient">
            <summary>
                The Gradient class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Gradient.Type">
            <summary>
                Sets the type of gradient used to fill the markers
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Gradient.TypeArray">
            <summary>
                Sets the type of gradient used to fill the markers
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Gradient.Color">
            <summary>
                Sets the final color of the gradient fill: the center color for radial,
                the right for horizontal, or the bottom for vertical.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Gradient.ColorArray">
            <summary>
                Sets the final color of the gradient fill: the center color for radial,
                the right for horizontal, or the bottom for vertical.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Gradient.TypeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  type .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Gradient.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.GradientLib.TypeEnum">
            <summary>
                Sets the type of gradient used to fill the markers
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.line.color</c>) or the bounds set in <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>  Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Defaults to <c>false</c> when <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.line.cmin</c>
                and/or <c>marker.line.cmax</c> to be equidistant to this point. Has an effect
                only if in <c>marker.line.color</c>is set to a numerical array. Value should
                have the same units as in <c>marker.line.color</c>. Has no effect when <c>marker.line.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.line.colorscale</c>. Has
                an effect only if in <c>marker.line.color</c>is set to a numerical array.
                In case <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true,
                the default  palette will be chosen according to whether numbers in the
                <c>color</c> array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. If true, <c>marker.line.cmin</c> will correspond
                to the last color in the array and <c>marker.line.cmax</c> will correspond
                to the first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.SizeModeEnum">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.MarkerLib.SymbolEnum">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.ModeFlag">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover. If there are less than
                20 points and the trace is not stacked then the default is <c>lines+markers</c>.
                Otherwise, <c>lines</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Selected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.SelectedLib.Marker.Color">
            <summary>
                Sets the marker color of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.SelectedLib.Marker.Size">
            <summary>
                Sets the marker size of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.SelectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.SelectedLib.TextFont.Color">
            <summary>
                Sets the text font color of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.TextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.TextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.TextPositionEnum">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.Unselected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.UnselectedLib.Marker.Color">
            <summary>
                Sets the marker color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.UnselectedLib.Marker.Size">
            <summary>
                Sets the marker size of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.UnselectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGeoLib.UnselectedLib.TextFont.Color">
            <summary>
                Sets the text font color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGeoLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGl">
            <summary>
                The ScatterGl class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.X">
            <summary>
                Sets the x coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.X0">
            <summary>
                Alternate to <c>x</c>. Builds a linear space of x coordinates. Use with
                <c>dx</c> where <c>x0</c> is the starting coordinate and <c>dx</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.DX">
            <summary>
                Sets the x coordinate step. See <c>x0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Y">
            <summary>
                Sets the y coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Y0">
            <summary>
                Alternate to <c>y</c>. Builds a linear space of y coordinates. Use with
                <c>dy</c> where <c>y0</c> is the starting coordinate and <c>dy</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Dy">
            <summary>
                Sets the y coordinate step. See <c>y0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Text">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.TextArray">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.HoverText">
            <summary>
                Sets hover text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.HoverTextArray">
            <summary>
                Sets hover text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.TextPosition">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.TextPositionArray">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.TextFont">
            <summary>
                Sets the text font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Mode">
            <summary>
                Determines the drawing mode for this scatter trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.ConnectGaps">
            <summary>
                Determines whether or not gaps (i.e. {nan} or missing values) in the provided
                data arrays are connected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Fill">
            <summary>
                Sets the area to fill with a solid color. Defaults to <c>none</c> unless
                this trace is stacked, then it gets <c>tonexty</c> (<c>tonextx</c>) if <c>orientation</c>
                is <c>v</c> (<c>h</c>) Use with <c>fillcolor</c> if not <c>none</c>. <c>tozerox</c>
                and <c>tozeroy</c> fill to x=0 and y=0 respectively. <c>tonextx</c> and
                <c>tonexty</c> fill between the endpoints of this trace and the endpoints
                of the trace before it, connecting those endpoints with straight lines (to
                make a stacked area graph); if there is no trace before it, they behave
                like <c>tozerox</c> and <c>tozeroy</c>. <c>toself</c> connects the endpoints
                of the trace (or each segment of the trace if it has gaps) into a closed
                shape. <c>tonext</c> fills the space between two traces if one completely
                encloses the other (eg consecutive contour lines), and behaves like <c>toself</c>
                if there is no trace before it. <c>tonext</c> should not be used if one
                trace does not enclose the other. Traces in a <c>stackgroup</c> will only
                fill to (or be filled to) other traces in the same group. With multiple
                <c>stackgroup</c>s or some traces stacked and some not, if fill-linked traces
                are not already consecutive, the later ones will be pushed down in the drawing
                order.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.FillColor">
            <summary>
                Sets the fill color. Defaults to a half-transparent variant of the line
                color, marker color, or marker line color, whichever is available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.ErrorX">
            <summary>
                Gets or sets the ErrorX.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.ErrorY">
            <summary>
                Gets or sets the ErrorY.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.XCalendar">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.YCalendar">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.TextPositionSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  textposition .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGl.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.ErrorX">
            <summary>
                The ErrorX class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorX.Visible">
            <summary>
                Determines whether or not this set of error bars is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorX.Type">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorX.Symmetric">
            <summary>
                Determines whether or not the error bars have the same length in both direction
                (top/bottom for vertical bars, left/right for horizontal bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorX.Array">
            <summary>
                Sets the data corresponding the length of each error bar. Values are plotted
                relative to the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorX.ArrayMinus">
            <summary>
                Sets the data corresponding the length of each error bar in the bottom (left)
                direction for vertical (horizontal) bars Values are plotted relative to
                the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorX.Value">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorX.ValueMinus">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars in the bottom (left) direction for vertical
                (horizontal) bars
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorX.TraceRef">
            <summary>
                Gets or sets the TraceRef.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorX.TraceRefMinus">
            <summary>
                Gets or sets the TraceRefMinus.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorX.CopyYStyle">
            <summary>
                Gets or sets the CopyYStyle.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorX.Color">
            <summary>
                Sets the stoke color of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorX.Thickness">
            <summary>
                Sets the thickness (in px) of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorX.Width">
            <summary>
                Sets the width (in px) of the cross-bar at both ends of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorX.ArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  array .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorX.ArrayMinusSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  arrayminus .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.ErrorXLib.TypeEnum">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.ErrorY">
            <summary>
                The ErrorY class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorY.Visible">
            <summary>
                Determines whether or not this set of error bars is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorY.Type">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorY.Symmetric">
            <summary>
                Determines whether or not the error bars have the same length in both direction
                (top/bottom for vertical bars, left/right for horizontal bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorY.Array">
            <summary>
                Sets the data corresponding the length of each error bar. Values are plotted
                relative to the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorY.ArrayMinus">
            <summary>
                Sets the data corresponding the length of each error bar in the bottom (left)
                direction for vertical (horizontal) bars Values are plotted relative to
                the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorY.Value">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorY.ValueMinus">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars in the bottom (left) direction for vertical
                (horizontal) bars
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorY.TraceRef">
            <summary>
                Gets or sets the TraceRef.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorY.TraceRefMinus">
            <summary>
                Gets or sets the TraceRefMinus.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorY.Color">
            <summary>
                Sets the stoke color of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorY.Thickness">
            <summary>
                Sets the thickness (in px) of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorY.Width">
            <summary>
                Sets the width (in px) of the cross-bar at both ends of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorY.ArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  array .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.ErrorY.ArrayMinusSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  arrayminus .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.ErrorYLib.TypeEnum">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.FillEnum">
            <summary>
                Sets the area to fill with a solid color. Defaults to <c>none</c> unless
                this trace is stacked, then it gets <c>tonexty</c> (<c>tonextx</c>) if <c>orientation</c>
                is <c>v</c> (<c>h</c>) Use with <c>fillcolor</c> if not <c>none</c>. <c>tozerox</c>
                and <c>tozeroy</c> fill to x=0 and y=0 respectively. <c>tonextx</c> and
                <c>tonexty</c> fill between the endpoints of this trace and the endpoints
                of the trace before it, connecting those endpoints with straight lines (to
                make a stacked area graph); if there is no trace before it, they behave
                like <c>tozerox</c> and <c>tozeroy</c>. <c>toself</c> connects the endpoints
                of the trace (or each segment of the trace if it has gaps) into a closed
                shape. <c>tonext</c> fills the space between two traces if one completely
                encloses the other (eg consecutive contour lines), and behaves like <c>toself</c>
                if there is no trace before it. <c>tonext</c> should not be used if one
                trace does not enclose the other. Traces in a <c>stackgroup</c> will only
                fill to (or be filled to) other traces in the same group. With multiple
                <c>stackgroup</c>s or some traces stacked and some not, if fill-linked traces
                are not already consecutive, the later ones will be pushed down in the drawing
                order.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Line.Color">
            <summary>
                Sets the line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Line.Width">
            <summary>
                Sets the line width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Line.Shape">
            <summary>
                Determines the line shape. The values correspond to step-wise line shapes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Line.Dash">
            <summary>
                Sets the style of the lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.LineLib.DashEnum">
            <summary>
                Sets the style of the lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.LineLib.ShapeEnum">
            <summary>
                Determines the line shape. The values correspond to step-wise line shapes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.ColorArray">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.color</c>) or the bounds set in <c>marker.cmin</c>
                and <c>marker.cmax</c>  Has an effect only if in <c>marker.color</c>is set
                to a numerical array. Defaults to <c>false</c> when <c>marker.cmin</c> and
                <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>marker.color</c>is set to a numerical array. Value should have the
                same units as in <c>marker.color</c>. Has no effect when <c>marker.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.color</c>is set
                to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.cmin</c>
                and <c>marker.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if in <c>marker.color</c>is set to a numerical array. In case
                <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true, the default
                 palette will be chosen according to whether numbers in the <c>color</c>
                array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. If true, <c>marker.cmin</c> will correspond to
                the last color in the array and <c>marker.cmax</c> will correspond to the
                first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>marker.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.Symbol">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.SymbolArray">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.Size">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.SizeArray">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.SizeRef">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the scale factor used to determine the rendered size of marker points. Use
                with <c>sizemin</c> and <c>sizemode</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.SizeMin">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the minimum size (in px) of the rendered marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.SizeMode">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.Opacity">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.OpacityArray">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.SymbolSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  symbol .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.line.color</c>) or the bounds set in <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>  Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Defaults to <c>false</c> when <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.line.cmin</c>
                and/or <c>marker.line.cmax</c> to be equidistant to this point. Has an effect
                only if in <c>marker.line.color</c>is set to a numerical array. Value should
                have the same units as in <c>marker.line.color</c>. Has no effect when <c>marker.line.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.line.colorscale</c>. Has
                an effect only if in <c>marker.line.color</c>is set to a numerical array.
                In case <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true,
                the default  palette will be chosen according to whether numbers in the
                <c>color</c> array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. If true, <c>marker.line.cmin</c> will correspond
                to the last color in the array and <c>marker.line.cmax</c> will correspond
                to the first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.SizeModeEnum">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.MarkerLib.SymbolEnum">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.ModeFlag">
            <summary>
                Determines the drawing mode for this scatter trace.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Selected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.SelectedLib.Marker.Color">
            <summary>
                Sets the marker color of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.SelectedLib.Marker.Size">
            <summary>
                Sets the marker size of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.SelectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.SelectedLib.TextFont.Color">
            <summary>
                Sets the text font color of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.TextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.TextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.TextPositionEnum">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.Unselected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.UnselectedLib.Marker.Color">
            <summary>
                Sets the marker color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.UnselectedLib.Marker.Size">
            <summary>
                Sets the marker size of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.UnselectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterGlLib.UnselectedLib.TextFont.Color">
            <summary>
                Sets the text font color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.XCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterGlLib.YCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.ErrorX">
            <summary>
                The ErrorX class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorX.Visible">
            <summary>
                Determines whether or not this set of error bars is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorX.Type">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorX.Symmetric">
            <summary>
                Determines whether or not the error bars have the same length in both direction
                (top/bottom for vertical bars, left/right for horizontal bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorX.Array">
            <summary>
                Sets the data corresponding the length of each error bar. Values are plotted
                relative to the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorX.ArrayMinus">
            <summary>
                Sets the data corresponding the length of each error bar in the bottom (left)
                direction for vertical (horizontal) bars Values are plotted relative to
                the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorX.Value">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorX.ValueMinus">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars in the bottom (left) direction for vertical
                (horizontal) bars
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorX.TraceRef">
            <summary>
                Gets or sets the TraceRef.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorX.TraceRefMinus">
            <summary>
                Gets or sets the TraceRefMinus.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorX.CopyYStyle">
            <summary>
                Gets or sets the CopyYStyle.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorX.Color">
            <summary>
                Sets the stoke color of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorX.Thickness">
            <summary>
                Sets the thickness (in px) of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorX.Width">
            <summary>
                Sets the width (in px) of the cross-bar at both ends of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorX.ArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  array .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorX.ArrayMinusSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  arrayminus .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.ErrorXLib.TypeEnum">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.ErrorY">
            <summary>
                The ErrorY class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorY.Visible">
            <summary>
                Determines whether or not this set of error bars is visible.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorY.Type">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorY.Symmetric">
            <summary>
                Determines whether or not the error bars have the same length in both direction
                (top/bottom for vertical bars, left/right for horizontal bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorY.Array">
            <summary>
                Sets the data corresponding the length of each error bar. Values are plotted
                relative to the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorY.ArrayMinus">
            <summary>
                Sets the data corresponding the length of each error bar in the bottom (left)
                direction for vertical (horizontal) bars Values are plotted relative to
                the underlying data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorY.Value">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorY.ValueMinus">
            <summary>
                Sets the value of either the percentage (if <c>type</c> is set to <c>percent</c>)
                or the constant (if <c>type</c> is set to <c>constant</c>) corresponding
                to the lengths of the error bars in the bottom (left) direction for vertical
                (horizontal) bars
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorY.TraceRef">
            <summary>
                Gets or sets the TraceRef.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorY.TraceRefMinus">
            <summary>
                Gets or sets the TraceRefMinus.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorY.Color">
            <summary>
                Sets the stoke color of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorY.Thickness">
            <summary>
                Sets the thickness (in px) of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorY.Width">
            <summary>
                Sets the width (in px) of the cross-bar at both ends of the error bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorY.ArraySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  array .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.ErrorY.ArrayMinusSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  arrayminus .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.ErrorYLib.TypeEnum">
            <summary>
                Determines the rule used to generate the error bars. If *constant`, the
                bar lengths are of a constant value. Set this constant in <c>value</c>.
                If <c>percent</c>, the bar lengths correspond to a percentage of underlying
                data. Set this percentage in <c>value</c>. If <c>sqrt</c>, the bar lengths
                correspond to the sqaure of the underlying data. If <c>data</c>, the bar
                lengths are set with data set <c>array</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.FillEnum">
            <summary>
                Sets the area to fill with a solid color. Defaults to <c>none</c> unless
                this trace is stacked, then it gets <c>tonexty</c> (<c>tonextx</c>) if <c>orientation</c>
                is <c>v</c> (<c>h</c>) Use with <c>fillcolor</c> if not <c>none</c>. <c>tozerox</c>
                and <c>tozeroy</c> fill to x=0 and y=0 respectively. <c>tonextx</c> and
                <c>tonexty</c> fill between the endpoints of this trace and the endpoints
                of the trace before it, connecting those endpoints with straight lines (to
                make a stacked area graph); if there is no trace before it, they behave
                like <c>tozerox</c> and <c>tozeroy</c>. <c>toself</c> connects the endpoints
                of the trace (or each segment of the trace if it has gaps) into a closed
                shape. <c>tonext</c> fills the space between two traces if one completely
                encloses the other (eg consecutive contour lines), and behaves like <c>toself</c>
                if there is no trace before it. <c>tonext</c> should not be used if one
                trace does not enclose the other. Traces in a <c>stackgroup</c> will only
                fill to (or be filled to) other traces in the same group. With multiple
                <c>stackgroup</c>s or some traces stacked and some not, if fill-linked traces
                are not already consecutive, the later ones will be pushed down in the drawing
                order.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.GroupNormEnum">
            <summary>
                Only relevant when <c>stackgroup</c> is used, and only the first <c>groupnorm</c>
                found in the <c>stackgroup</c> will be used - including if <c>visible</c>
                is <c>legendonly</c> but not if it is <c>false</c>. Sets the normalization
                for the sum of this <c>stackgroup</c>. With <c>fraction</c>, the value of
                each trace at each location is divided by the sum of all trace values at
                that location. <c>percent</c> is the same but multiplied by 100 to show
                percentages. If there are multiple subplots, or multiple <c>stackgroup</c>s
                on one subplot, each will be normalized within its own set.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.HoverOnFlag">
            <summary>
                Do the hover effects highlight individual points (markers or line points)
                or do they highlight filled regions? If the fill is <c>toself</c> or <c>tonext</c>
                and there are no markers or text, then the default is <c>fills</c>, otherwise
                it is <c>points</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Line.Color">
            <summary>
                Sets the line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Line.Width">
            <summary>
                Sets the line width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Line.Shape">
            <summary>
                Determines the line shape. With <c>spline</c> the lines are drawn using
                spline interpolation. The other available values correspond to step-wise
                line shapes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Line.Smoothing">
            <summary>
                Has an effect only if <c>shape</c> is set to <c>spline</c> Sets the amount
                of smoothing. <c>0</c> corresponds to no smoothing (equivalent to a <c>linear</c>
                shape).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Line.Dash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Line.Simplify">
            <summary>
                Simplifies lines by removing nearly-collinear points. When transitioning
                lines, it may be desirable to disable this so that the number of points
                along the resulting SVG path is unaffected.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.LineLib.ShapeEnum">
            <summary>
                Determines the line shape. With <c>spline</c> the lines are drawn using
                spline interpolation. The other available values correspond to step-wise
                line shapes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.Symbol">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.SymbolArray">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.Opacity">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.OpacityArray">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.Size">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.SizeArray">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.MaxDisplayed">
            <summary>
                Sets a maximum number of points to be drawn on the graph. <c>0</c> corresponds
                to no limit.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.SizeRef">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the scale factor used to determine the rendered size of marker points. Use
                with <c>sizemin</c> and <c>sizemode</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.SizeMin">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the minimum size (in px) of the rendered marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.SizeMode">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.Gradient">
            <summary>
                Gets or sets the Gradient.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.ColorArray">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.color</c>) or the bounds set in <c>marker.cmin</c>
                and <c>marker.cmax</c>  Has an effect only if in <c>marker.color</c>is set
                to a numerical array. Defaults to <c>false</c> when <c>marker.cmin</c> and
                <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>marker.color</c>is set to a numerical array. Value should have the
                same units as in <c>marker.color</c>. Has no effect when <c>marker.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.color</c>is set
                to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.cmin</c>
                and <c>marker.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if in <c>marker.color</c>is set to a numerical array. In case
                <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true, the default
                 palette will be chosen according to whether numbers in the <c>color</c>
                array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. If true, <c>marker.cmin</c> will correspond to
                the last color in the array and <c>marker.cmax</c> will correspond to the
                first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>marker.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.SymbolSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  symbol .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Gradient">
            <summary>
                The Gradient class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Gradient.Type">
            <summary>
                Sets the type of gradient used to fill the markers
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Gradient.TypeArray">
            <summary>
                Sets the type of gradient used to fill the markers
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Gradient.Color">
            <summary>
                Sets the final color of the gradient fill: the center color for radial,
                the right for horizontal, or the bottom for vertical.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Gradient.ColorArray">
            <summary>
                Sets the final color of the gradient fill: the center color for radial,
                the right for horizontal, or the bottom for vertical.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Gradient.TypeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  type .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Gradient.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.GradientLib.TypeEnum">
            <summary>
                Sets the type of gradient used to fill the markers
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.line.color</c>) or the bounds set in <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>  Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Defaults to <c>false</c> when <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.line.cmin</c>
                and/or <c>marker.line.cmax</c> to be equidistant to this point. Has an effect
                only if in <c>marker.line.color</c>is set to a numerical array. Value should
                have the same units as in <c>marker.line.color</c>. Has no effect when <c>marker.line.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.line.colorscale</c>. Has
                an effect only if in <c>marker.line.color</c>is set to a numerical array.
                In case <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true,
                the default  palette will be chosen according to whether numbers in the
                <c>color</c> array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. If true, <c>marker.line.cmin</c> will correspond
                to the last color in the array and <c>marker.line.cmax</c> will correspond
                to the first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.SizeModeEnum">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.MarkerLib.SymbolEnum">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.ModeFlag">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover. If there are less than
                20 points and the trace is not stacked then the default is <c>lines+markers</c>.
                Otherwise, <c>lines</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.OrientationEnum">
            <summary>
                Only relevant when <c>stackgroup</c> is used, and only the first <c>orientation</c>
                found in the <c>stackgroup</c> will be used - including if <c>visible</c>
                is <c>legendonly</c> but not if it is <c>false</c>. Sets the stacking direction.
                With <c>v</c> (<c>h</c>), the y (x) values of subsequent traces are added.
                Also affects the default value of <c>fill</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Selected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.SelectedLib.Marker.Color">
            <summary>
                Sets the marker color of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.SelectedLib.Marker.Size">
            <summary>
                Sets the marker size of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.SelectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.SelectedLib.TextFont.Color">
            <summary>
                Sets the text font color of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.StackGapsEnum">
            <summary>
                Only relevant when <c>stackgroup</c> is used, and only the first <c>stackgaps</c>
                found in the <c>stackgroup</c> will be used - including if <c>visible</c>
                is <c>legendonly</c> but not if it is <c>false</c>. Determines how we handle
                locations at which other traces in this group have data but this one does
                not. With &#39;infer zero&#39; we insert a zero at these locations. With
                <c>interpolate</c> we linearly interpolate between existing values, and
                extrapolate a constant beyond the existing values.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.TextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.TextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.TextPositionEnum">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.Unselected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.UnselectedLib.Marker.Color">
            <summary>
                Sets the marker color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.UnselectedLib.Marker.Size">
            <summary>
                Sets the marker size of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.UnselectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterLib.UnselectedLib.TextFont.Color">
            <summary>
                Sets the text font color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.XCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterLib.YCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBox">
            <summary>
                The ScatterMapBox class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Lon">
            <summary>
                Sets the longitude coordinates (in degrees East).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Lat">
            <summary>
                Sets the latitude coordinates (in degrees North).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Mode">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Text">
            <summary>
                Sets text elements associated with each (lon,lat) pair If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (lon,lat) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.TextArray">
            <summary>
                Sets text elements associated with each (lon,lat) pair If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (lon,lat) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>lat</c>, <c>lon</c> and <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>lat</c>, <c>lon</c> and <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.HoverText">
            <summary>
                Sets hover text elements associated with each (lon,lat) pair If a single
                string, the same string appears over all the data points. If an array of
                string, the items are mapped in order to the this trace&#39;s (lon,lat)
                coordinates. To be seen, trace <c>hoverinfo</c> must contain a <c>text</c>
                flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.HoverTextArray">
            <summary>
                Sets hover text elements associated with each (lon,lat) pair If a single
                string, the same string appears over all the data points. If an array of
                string, the items are mapped in order to the this trace&#39;s (lon,lat)
                coordinates. To be seen, trace <c>hoverinfo</c> must contain a <c>text</c>
                flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.ConnectGaps">
            <summary>
                Determines whether or not gaps (i.e. {nan} or missing values) in the provided
                data arrays are connected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Fill">
            <summary>
                Sets the area to fill with a solid color. Use with <c>fillcolor</c> if not
                <c>none</c>. <c>toself</c> connects the endpoints of the trace (or each
                segment of the trace if it has gaps) into a closed shape.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.FillColor">
            <summary>
                Sets the fill color. Defaults to a half-transparent variant of the line
                color, marker color, or marker line color, whichever is available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.TextFont">
            <summary>
                Sets the icon text font (color=mapbox.layer.paint.text-color, size=mapbox.layer.layout.text-size).
                Has an effect only when <c>type</c> is set to <c>symbol</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.TextPosition">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Below">
            <summary>
                Determines if this scattermapbox trace&#39;s layers are to be inserted before
                the layer with the specified ID. By default, scattermapbox layers are inserted
                above all the base layers. To place the scattermapbox layers above every
                other layer, set <c>below</c> to <c>&#39;&#39;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.Subplot">
            <summary>
                Sets a reference between this trace&#39;s data coordinates and a mapbox
                subplot. If <c>mapbox</c> (the default value), the data refer to <c>layout.mapbox</c>.
                If <c>mapbox2</c>, the data refer to <c>layout.mapbox2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.LonSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  lon .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.LatSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  lat .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBox.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.FillEnum">
            <summary>
                Sets the area to fill with a solid color. Use with <c>fillcolor</c> if not
                <c>none</c>. <c>toself</c> connects the endpoints of the trace (or each
                segment of the trace if it has gaps) into a closed shape.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Line.Color">
            <summary>
                Sets the line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Line.Width">
            <summary>
                Sets the line width (in px).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.Symbol">
            <summary>
                Sets the marker symbol. Full list: https://www.mapbox.com/maki-icons/ Note
                that the array <c>marker.color</c> and <c>marker.size</c> are only available
                for <c>circle</c> symbols.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.SymbolArray">
            <summary>
                Sets the marker symbol. Full list: https://www.mapbox.com/maki-icons/ Note
                that the array <c>marker.color</c> and <c>marker.size</c> are only available
                for <c>circle</c> symbols.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.Angle">
            <summary>
                Sets the marker orientation from true North, in degrees clockwise. When
                using the <c>auto</c> default, no rotation would be applied in perspective
                views which is different from using a zero angle.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.AngleArray">
            <summary>
                Sets the marker orientation from true North, in degrees clockwise. When
                using the <c>auto</c> default, no rotation would be applied in perspective
                views which is different from using a zero angle.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.AllowOverlap">
            <summary>
                Flag to draw all symbols, even if they overlap.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.Opacity">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.OpacityArray">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.Size">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.SizeArray">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.SizeRef">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the scale factor used to determine the rendered size of marker points. Use
                with <c>sizemin</c> and <c>sizemode</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.SizeMin">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the minimum size (in px) of the rendered marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.SizeMode">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.ColorArray">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.color</c>) or the bounds set in <c>marker.cmin</c>
                and <c>marker.cmax</c>  Has an effect only if in <c>marker.color</c>is set
                to a numerical array. Defaults to <c>false</c> when <c>marker.cmin</c> and
                <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>marker.color</c>is set to a numerical array. Value should have the
                same units as in <c>marker.color</c>. Has no effect when <c>marker.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.color</c>is set
                to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.cmin</c>
                and <c>marker.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if in <c>marker.color</c>is set to a numerical array. In case
                <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true, the default
                 palette will be chosen according to whether numbers in the <c>color</c>
                array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. If true, <c>marker.cmin</c> will correspond to
                the last color in the array and <c>marker.cmax</c> will correspond to the
                first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>marker.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.SymbolSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  symbol .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.AngleSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  angle .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.MarkerLib.SizeModeEnum">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.ModeFlag">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.SelectedLib.Marker.Color">
            <summary>
                Sets the marker color of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.SelectedLib.Marker.Size">
            <summary>
                Sets the marker size of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.TextPositionEnum">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.UnselectedLib.Marker.Color">
            <summary>
                Sets the marker color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterMapBoxLib.UnselectedLib.Marker.Size">
            <summary>
                Sets the marker size of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterMapBoxLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolar">
            <summary>
                The ScatterPolar class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Mode">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover. If there are less than
                20 points and the trace is not stacked then the default is <c>lines+markers</c>.
                Otherwise, <c>lines</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.R">
            <summary>
                Sets the radial coordinates
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Theta">
            <summary>
                Sets the angular coordinates
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.R0">
            <summary>
                Alternate to <c>r</c>. Builds a linear space of r coordinates. Use with
                <c>dr</c> where <c>r0</c> is the starting coordinate and <c>dr</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Dr">
            <summary>
                Sets the r coordinate step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Theta0">
            <summary>
                Alternate to <c>theta</c>. Builds a linear space of theta coordinates. Use
                with <c>dtheta</c> where <c>theta0</c> is the starting coordinate and <c>dtheta</c>
                the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.DTheta">
            <summary>
                Sets the theta coordinate step. By default, the <c>dtheta</c> step equals
                the subplot&#39;s period divided by the length of the <c>r</c> coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.ThetaUnit">
            <summary>
                Sets the unit of input <c>theta</c> values. Has an effect only when on <c>linear</c>
                angular axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Text">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.TextArray">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>r</c>, <c>theta</c> and <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>r</c>, <c>theta</c> and <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.HoverText">
            <summary>
                Sets hover text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.HoverTextArray">
            <summary>
                Sets hover text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.ConnectGaps">
            <summary>
                Determines whether or not gaps (i.e. {nan} or missing values) in the provided
                data arrays are connected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.ClipOnAxis">
            <summary>
                Determines whether or not markers and text nodes are clipped about the subplot
                axes. To show markers and text nodes above axis lines and tick labels, make
                sure to set <c>xaxis.layer</c> and <c>yaxis.layer</c> to &#39;below traces&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.TextPosition">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.TextPositionArray">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.TextFont">
            <summary>
                Sets the text font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Fill">
            <summary>
                Sets the area to fill with a solid color. Use with <c>fillcolor</c> if not
                <c>none</c>. scatterpolar has a subset of the options available to scatter.
                <c>toself</c> connects the endpoints of the trace (or each segment of the
                trace if it has gaps) into a closed shape. <c>tonext</c> fills the space
                between two traces if one completely encloses the other (eg consecutive
                contour lines), and behaves like <c>toself</c> if there is no trace before
                it. <c>tonext</c> should not be used if one trace does not enclose the other.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.FillColor">
            <summary>
                Sets the fill color. Defaults to a half-transparent variant of the line
                color, marker color, or marker line color, whichever is available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.HoverOn">
            <summary>
                Do the hover effects highlight individual points (markers or line points)
                or do they highlight filled regions? If the fill is <c>toself</c> or <c>tonext</c>
                and there are no markers or text, then the default is <c>fills</c>, otherwise
                it is <c>points</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.Subplot">
            <summary>
                Sets a reference between this trace&#39;s data coordinates and a polar subplot.
                If <c>polar</c> (the default value), the data refer to <c>layout.polar</c>.
                If <c>polar2</c>, the data refer to <c>layout.polar2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.RSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  r .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.ThetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  theta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.TextPositionSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  textposition .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolar.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGl">
            <summary>
                The ScatterPolarGl class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Mode">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover. If there are less than
                20 points and the trace is not stacked then the default is <c>lines+markers</c>.
                Otherwise, <c>lines</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.R">
            <summary>
                Sets the radial coordinates
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Theta">
            <summary>
                Sets the angular coordinates
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.R0">
            <summary>
                Alternate to <c>r</c>. Builds a linear space of r coordinates. Use with
                <c>dr</c> where <c>r0</c> is the starting coordinate and <c>dr</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Dr">
            <summary>
                Sets the r coordinate step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Theta0">
            <summary>
                Alternate to <c>theta</c>. Builds a linear space of theta coordinates. Use
                with <c>dtheta</c> where <c>theta0</c> is the starting coordinate and <c>dtheta</c>
                the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.DTheta">
            <summary>
                Sets the theta coordinate step. By default, the <c>dtheta</c> step equals
                the subplot&#39;s period divided by the length of the <c>r</c> coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.ThetaUnit">
            <summary>
                Sets the unit of input <c>theta</c> values. Has an effect only when on <c>linear</c>
                angular axes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Text">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.TextArray">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>r</c>, <c>theta</c> and <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>r</c>, <c>theta</c> and <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.HoverText">
            <summary>
                Sets hover text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.HoverTextArray">
            <summary>
                Sets hover text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.ConnectGaps">
            <summary>
                Determines whether or not gaps (i.e. {nan} or missing values) in the provided
                data arrays are connected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Fill">
            <summary>
                Sets the area to fill with a solid color. Defaults to <c>none</c> unless
                this trace is stacked, then it gets <c>tonexty</c> (<c>tonextx</c>) if <c>orientation</c>
                is <c>v</c> (<c>h</c>) Use with <c>fillcolor</c> if not <c>none</c>. <c>tozerox</c>
                and <c>tozeroy</c> fill to x=0 and y=0 respectively. <c>tonextx</c> and
                <c>tonexty</c> fill between the endpoints of this trace and the endpoints
                of the trace before it, connecting those endpoints with straight lines (to
                make a stacked area graph); if there is no trace before it, they behave
                like <c>tozerox</c> and <c>tozeroy</c>. <c>toself</c> connects the endpoints
                of the trace (or each segment of the trace if it has gaps) into a closed
                shape. <c>tonext</c> fills the space between two traces if one completely
                encloses the other (eg consecutive contour lines), and behaves like <c>toself</c>
                if there is no trace before it. <c>tonext</c> should not be used if one
                trace does not enclose the other. Traces in a <c>stackgroup</c> will only
                fill to (or be filled to) other traces in the same group. With multiple
                <c>stackgroup</c>s or some traces stacked and some not, if fill-linked traces
                are not already consecutive, the later ones will be pushed down in the drawing
                order.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.FillColor">
            <summary>
                Sets the fill color. Defaults to a half-transparent variant of the line
                color, marker color, or marker line color, whichever is available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.TextPosition">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.TextPositionArray">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.TextFont">
            <summary>
                Sets the text font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.Subplot">
            <summary>
                Sets a reference between this trace&#39;s data coordinates and a polar subplot.
                If <c>polar</c> (the default value), the data refer to <c>layout.polar</c>.
                If <c>polar2</c>, the data refer to <c>layout.polar2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.RSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  r .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.ThetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  theta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.TextPositionSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  textposition .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGl.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.FillEnum">
            <summary>
                Sets the area to fill with a solid color. Defaults to <c>none</c> unless
                this trace is stacked, then it gets <c>tonexty</c> (<c>tonextx</c>) if <c>orientation</c>
                is <c>v</c> (<c>h</c>) Use with <c>fillcolor</c> if not <c>none</c>. <c>tozerox</c>
                and <c>tozeroy</c> fill to x=0 and y=0 respectively. <c>tonextx</c> and
                <c>tonexty</c> fill between the endpoints of this trace and the endpoints
                of the trace before it, connecting those endpoints with straight lines (to
                make a stacked area graph); if there is no trace before it, they behave
                like <c>tozerox</c> and <c>tozeroy</c>. <c>toself</c> connects the endpoints
                of the trace (or each segment of the trace if it has gaps) into a closed
                shape. <c>tonext</c> fills the space between two traces if one completely
                encloses the other (eg consecutive contour lines), and behaves like <c>toself</c>
                if there is no trace before it. <c>tonext</c> should not be used if one
                trace does not enclose the other. Traces in a <c>stackgroup</c> will only
                fill to (or be filled to) other traces in the same group. With multiple
                <c>stackgroup</c>s or some traces stacked and some not, if fill-linked traces
                are not already consecutive, the later ones will be pushed down in the drawing
                order.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Line.Color">
            <summary>
                Sets the line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Line.Width">
            <summary>
                Sets the line width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Line.Shape">
            <summary>
                Determines the line shape. The values correspond to step-wise line shapes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Line.Dash">
            <summary>
                Sets the style of the lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.LineLib.DashEnum">
            <summary>
                Sets the style of the lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.LineLib.ShapeEnum">
            <summary>
                Determines the line shape. The values correspond to step-wise line shapes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.ColorArray">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.color</c>) or the bounds set in <c>marker.cmin</c>
                and <c>marker.cmax</c>  Has an effect only if in <c>marker.color</c>is set
                to a numerical array. Defaults to <c>false</c> when <c>marker.cmin</c> and
                <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>marker.color</c>is set to a numerical array. Value should have the
                same units as in <c>marker.color</c>. Has no effect when <c>marker.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.color</c>is set
                to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.cmin</c>
                and <c>marker.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if in <c>marker.color</c>is set to a numerical array. In case
                <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true, the default
                 palette will be chosen according to whether numbers in the <c>color</c>
                array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. If true, <c>marker.cmin</c> will correspond to
                the last color in the array and <c>marker.cmax</c> will correspond to the
                first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>marker.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.Symbol">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.SymbolArray">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.Size">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.SizeArray">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.SizeRef">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the scale factor used to determine the rendered size of marker points. Use
                with <c>sizemin</c> and <c>sizemode</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.SizeMin">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the minimum size (in px) of the rendered marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.SizeMode">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.Opacity">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.OpacityArray">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.SymbolSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  symbol .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.line.color</c>) or the bounds set in <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>  Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Defaults to <c>false</c> when <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.line.cmin</c>
                and/or <c>marker.line.cmax</c> to be equidistant to this point. Has an effect
                only if in <c>marker.line.color</c>is set to a numerical array. Value should
                have the same units as in <c>marker.line.color</c>. Has no effect when <c>marker.line.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.line.colorscale</c>. Has
                an effect only if in <c>marker.line.color</c>is set to a numerical array.
                In case <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true,
                the default  palette will be chosen according to whether numbers in the
                <c>color</c> array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. If true, <c>marker.line.cmin</c> will correspond
                to the last color in the array and <c>marker.line.cmax</c> will correspond
                to the first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.SizeModeEnum">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.MarkerLib.SymbolEnum">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.ModeFlag">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover. If there are less than
                20 points and the trace is not stacked then the default is <c>lines+markers</c>.
                Otherwise, <c>lines</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Selected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.SelectedLib.Marker.Color">
            <summary>
                Sets the marker color of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.SelectedLib.Marker.Size">
            <summary>
                Sets the marker size of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.SelectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.SelectedLib.TextFont.Color">
            <summary>
                Sets the text font color of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.TextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.TextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.TextPositionEnum">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.ThetaUnitEnum">
            <summary>
                Sets the unit of input <c>theta</c> values. Has an effect only when on <c>linear</c>
                angular axes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.Unselected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.UnselectedLib.Marker.Color">
            <summary>
                Sets the marker color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.UnselectedLib.Marker.Size">
            <summary>
                Sets the marker size of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.UnselectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarGlLib.UnselectedLib.TextFont.Color">
            <summary>
                Sets the text font color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarGlLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.FillEnum">
            <summary>
                Sets the area to fill with a solid color. Use with <c>fillcolor</c> if not
                <c>none</c>. scatterpolar has a subset of the options available to scatter.
                <c>toself</c> connects the endpoints of the trace (or each segment of the
                trace if it has gaps) into a closed shape. <c>tonext</c> fills the space
                between two traces if one completely encloses the other (eg consecutive
                contour lines), and behaves like <c>toself</c> if there is no trace before
                it. <c>tonext</c> should not be used if one trace does not enclose the other.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.HoverOnFlag">
            <summary>
                Do the hover effects highlight individual points (markers or line points)
                or do they highlight filled regions? If the fill is <c>toself</c> or <c>tonext</c>
                and there are no markers or text, then the default is <c>fills</c>, otherwise
                it is <c>points</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Line.Color">
            <summary>
                Sets the line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Line.Width">
            <summary>
                Sets the line width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Line.Dash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Line.Shape">
            <summary>
                Determines the line shape. With <c>spline</c> the lines are drawn using
                spline interpolation. The other available values correspond to step-wise
                line shapes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Line.Smoothing">
            <summary>
                Has an effect only if <c>shape</c> is set to <c>spline</c> Sets the amount
                of smoothing. <c>0</c> corresponds to no smoothing (equivalent to a <c>linear</c>
                shape).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.LineLib.ShapeEnum">
            <summary>
                Determines the line shape. With <c>spline</c> the lines are drawn using
                spline interpolation. The other available values correspond to step-wise
                line shapes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.Symbol">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.SymbolArray">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.Opacity">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.OpacityArray">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.Size">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.SizeArray">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.MaxDisplayed">
            <summary>
                Sets a maximum number of points to be drawn on the graph. <c>0</c> corresponds
                to no limit.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.SizeRef">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the scale factor used to determine the rendered size of marker points. Use
                with <c>sizemin</c> and <c>sizemode</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.SizeMin">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the minimum size (in px) of the rendered marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.SizeMode">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.Gradient">
            <summary>
                Gets or sets the Gradient.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.ColorArray">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.color</c>) or the bounds set in <c>marker.cmin</c>
                and <c>marker.cmax</c>  Has an effect only if in <c>marker.color</c>is set
                to a numerical array. Defaults to <c>false</c> when <c>marker.cmin</c> and
                <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>marker.color</c>is set to a numerical array. Value should have the
                same units as in <c>marker.color</c>. Has no effect when <c>marker.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.color</c>is set
                to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.cmin</c>
                and <c>marker.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if in <c>marker.color</c>is set to a numerical array. In case
                <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true, the default
                 palette will be chosen according to whether numbers in the <c>color</c>
                array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. If true, <c>marker.cmin</c> will correspond to
                the last color in the array and <c>marker.cmax</c> will correspond to the
                first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>marker.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.SymbolSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  symbol .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Gradient">
            <summary>
                The Gradient class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Gradient.Type">
            <summary>
                Sets the type of gradient used to fill the markers
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Gradient.TypeArray">
            <summary>
                Sets the type of gradient used to fill the markers
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Gradient.Color">
            <summary>
                Sets the final color of the gradient fill: the center color for radial,
                the right for horizontal, or the bottom for vertical.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Gradient.ColorArray">
            <summary>
                Sets the final color of the gradient fill: the center color for radial,
                the right for horizontal, or the bottom for vertical.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Gradient.TypeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  type .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Gradient.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.GradientLib.TypeEnum">
            <summary>
                Sets the type of gradient used to fill the markers
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.line.color</c>) or the bounds set in <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>  Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Defaults to <c>false</c> when <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.line.cmin</c>
                and/or <c>marker.line.cmax</c> to be equidistant to this point. Has an effect
                only if in <c>marker.line.color</c>is set to a numerical array. Value should
                have the same units as in <c>marker.line.color</c>. Has no effect when <c>marker.line.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.line.colorscale</c>. Has
                an effect only if in <c>marker.line.color</c>is set to a numerical array.
                In case <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true,
                the default  palette will be chosen according to whether numbers in the
                <c>color</c> array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. If true, <c>marker.line.cmin</c> will correspond
                to the last color in the array and <c>marker.line.cmax</c> will correspond
                to the first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.SizeModeEnum">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.MarkerLib.SymbolEnum">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.ModeFlag">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover. If there are less than
                20 points and the trace is not stacked then the default is <c>lines+markers</c>.
                Otherwise, <c>lines</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Selected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.SelectedLib.Marker.Color">
            <summary>
                Sets the marker color of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.SelectedLib.Marker.Size">
            <summary>
                Sets the marker size of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.SelectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.SelectedLib.TextFont.Color">
            <summary>
                Sets the text font color of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.TextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.TextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.TextPositionEnum">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.ThetaUnitEnum">
            <summary>
                Sets the unit of input <c>theta</c> values. Has an effect only when on <c>linear</c>
                angular axes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.Unselected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.UnselectedLib.Marker.Color">
            <summary>
                Sets the marker color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.UnselectedLib.Marker.Size">
            <summary>
                Sets the marker size of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.UnselectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterPolarLib.UnselectedLib.TextFont.Color">
            <summary>
                Sets the text font color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterPolarLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernary">
            <summary>
                The ScatterTernary class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.A">
            <summary>
                Sets the quantity of component <c>a</c> in each data point. If <c>a</c>,
                <c>b</c>, and <c>c</c> are all provided, they need not be normalized, only
                the relative values matter. If only two arrays are provided they must be
                normalized to match <c>ternary&lt;i&gt;.sum</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.B">
            <summary>
                Sets the quantity of component <c>a</c> in each data point. If <c>a</c>,
                <c>b</c>, and <c>c</c> are all provided, they need not be normalized, only
                the relative values matter. If only two arrays are provided they must be
                normalized to match <c>ternary&lt;i&gt;.sum</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.C">
            <summary>
                Sets the quantity of component <c>a</c> in each data point. If <c>a</c>,
                <c>b</c>, and <c>c</c> are all provided, they need not be normalized, only
                the relative values matter. If only two arrays are provided they must be
                normalized to match <c>ternary&lt;i&gt;.sum</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Sum">
            <summary>
                The number each triplet should sum to, if only two of <c>a</c>, <c>b</c>,
                and <c>c</c> are provided. This overrides <c>ternary&lt;i&gt;.sum</c> to
                normalize this specific trace, but does not affect the values displayed
                on the axes. 0 (or missing) means to use ternary&lt;i&gt;.sum
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Mode">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover. If there are less than
                20 points and the trace is not stacked then the default is <c>lines+markers</c>.
                Otherwise, <c>lines</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Text">
            <summary>
                Sets text elements associated with each (a,b,c) point. If a single string,
                the same string appears over all the data points. If an array of strings,
                the items are mapped in order to the the data points in (a,b,c). If trace
                <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c> is not
                set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.TextArray">
            <summary>
                Sets text elements associated with each (a,b,c) point. If a single string,
                the same string appears over all the data points. If an array of strings,
                the items are mapped in order to the the data points in (a,b,c). If trace
                <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c> is not
                set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>a</c>, <c>b</c>, <c>c</c> and <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>a</c>, <c>b</c>, <c>c</c> and <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.HoverText">
            <summary>
                Sets hover text elements associated with each (a,b,c) point. If a single
                string, the same string appears over all the data points. If an array of
                strings, the items are mapped in order to the the data points in (a,b,c).
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.HoverTextArray">
            <summary>
                Sets hover text elements associated with each (a,b,c) point. If a single
                string, the same string appears over all the data points. If an array of
                strings, the items are mapped in order to the the data points in (a,b,c).
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.ConnectGaps">
            <summary>
                Determines whether or not gaps (i.e. {nan} or missing values) in the provided
                data arrays are connected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.ClipOnAxis">
            <summary>
                Determines whether or not markers and text nodes are clipped about the subplot
                axes. To show markers and text nodes above axis lines and tick labels, make
                sure to set <c>xaxis.layer</c> and <c>yaxis.layer</c> to &#39;below traces&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Fill">
            <summary>
                Sets the area to fill with a solid color. Use with <c>fillcolor</c> if not
                <c>none</c>. scatterternary has a subset of the options available to scatter.
                <c>toself</c> connects the endpoints of the trace (or each segment of the
                trace if it has gaps) into a closed shape. <c>tonext</c> fills the space
                between two traces if one completely encloses the other (eg consecutive
                contour lines), and behaves like <c>toself</c> if there is no trace before
                it. <c>tonext</c> should not be used if one trace does not enclose the other.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.FillColor">
            <summary>
                Sets the fill color. Defaults to a half-transparent variant of the line
                color, marker color, or marker line color, whichever is available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.TextFont">
            <summary>
                Sets the text font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.TextPosition">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.TextPositionArray">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.HoverOn">
            <summary>
                Do the hover effects highlight individual points (markers or line points)
                or do they highlight filled regions? If the fill is <c>toself</c> or <c>tonext</c>
                and there are no markers or text, then the default is <c>fills</c>, otherwise
                it is <c>points</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.Subplot">
            <summary>
                Sets a reference between this trace&#39;s data coordinates and a ternary
                subplot. If <c>ternary</c> (the default value), the data refer to <c>layout.ternary</c>.
                If <c>ternary2</c>, the data refer to <c>layout.ternary2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.ASrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  a .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.BSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  b .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.CSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  c .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.TextPositionSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  textposition .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernary.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.FillEnum">
            <summary>
                Sets the area to fill with a solid color. Use with <c>fillcolor</c> if not
                <c>none</c>. scatterternary has a subset of the options available to scatter.
                <c>toself</c> connects the endpoints of the trace (or each segment of the
                trace if it has gaps) into a closed shape. <c>tonext</c> fills the space
                between two traces if one completely encloses the other (eg consecutive
                contour lines), and behaves like <c>toself</c> if there is no trace before
                it. <c>tonext</c> should not be used if one trace does not enclose the other.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.HoverOnFlag">
            <summary>
                Do the hover effects highlight individual points (markers or line points)
                or do they highlight filled regions? If the fill is <c>toself</c> or <c>tonext</c>
                and there are no markers or text, then the default is <c>fills</c>, otherwise
                it is <c>points</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Line.Color">
            <summary>
                Sets the line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Line.Width">
            <summary>
                Sets the line width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Line.Dash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Line.Shape">
            <summary>
                Determines the line shape. With <c>spline</c> the lines are drawn using
                spline interpolation. The other available values correspond to step-wise
                line shapes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Line.Smoothing">
            <summary>
                Has an effect only if <c>shape</c> is set to <c>spline</c> Sets the amount
                of smoothing. <c>0</c> corresponds to no smoothing (equivalent to a <c>linear</c>
                shape).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.LineLib.ShapeEnum">
            <summary>
                Determines the line shape. With <c>spline</c> the lines are drawn using
                spline interpolation. The other available values correspond to step-wise
                line shapes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.Symbol">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.SymbolArray">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.Opacity">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.OpacityArray">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.MaxDisplayed">
            <summary>
                Sets a maximum number of points to be drawn on the graph. <c>0</c> corresponds
                to no limit.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.Size">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.SizeArray">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.SizeRef">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the scale factor used to determine the rendered size of marker points. Use
                with <c>sizemin</c> and <c>sizemode</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.SizeMin">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the minimum size (in px) of the rendered marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.SizeMode">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.Gradient">
            <summary>
                Gets or sets the Gradient.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.ColorArray">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.color</c>) or the bounds set in <c>marker.cmin</c>
                and <c>marker.cmax</c>  Has an effect only if in <c>marker.color</c>is set
                to a numerical array. Defaults to <c>false</c> when <c>marker.cmin</c> and
                <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>marker.color</c>is set to a numerical array. Value should have the
                same units as in <c>marker.color</c>. Has no effect when <c>marker.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.color</c>is set
                to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.cmin</c>
                and <c>marker.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if in <c>marker.color</c>is set to a numerical array. In case
                <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true, the default
                 palette will be chosen according to whether numbers in the <c>color</c>
                array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. If true, <c>marker.cmin</c> will correspond to
                the last color in the array and <c>marker.cmax</c> will correspond to the
                first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>marker.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.SymbolSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  symbol .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Gradient">
            <summary>
                The Gradient class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Gradient.Type">
            <summary>
                Sets the type of gradient used to fill the markers
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Gradient.TypeArray">
            <summary>
                Sets the type of gradient used to fill the markers
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Gradient.Color">
            <summary>
                Sets the final color of the gradient fill: the center color for radial,
                the right for horizontal, or the bottom for vertical.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Gradient.ColorArray">
            <summary>
                Sets the final color of the gradient fill: the center color for radial,
                the right for horizontal, or the bottom for vertical.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Gradient.TypeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  type .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Gradient.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.GradientLib.TypeEnum">
            <summary>
                Sets the type of gradient used to fill the markers
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.line.color</c>) or the bounds set in <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>  Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Defaults to <c>false</c> when <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.line.cmin</c>
                and/or <c>marker.line.cmax</c> to be equidistant to this point. Has an effect
                only if in <c>marker.line.color</c>is set to a numerical array. Value should
                have the same units as in <c>marker.line.color</c>. Has no effect when <c>marker.line.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.line.colorscale</c>. Has
                an effect only if in <c>marker.line.color</c>is set to a numerical array.
                In case <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true,
                the default  palette will be chosen according to whether numbers in the
                <c>color</c> array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. If true, <c>marker.line.cmin</c> will correspond
                to the last color in the array and <c>marker.line.cmax</c> will correspond
                to the first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.SizeModeEnum">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.MarkerLib.SymbolEnum">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.ModeFlag">
            <summary>
                Determines the drawing mode for this scatter trace. If the provided <c>mode</c>
                includes <c>text</c> then the <c>text</c> elements appear at the coordinates.
                Otherwise, the <c>text</c> elements appear on hover. If there are less than
                20 points and the trace is not stacked then the default is <c>lines+markers</c>.
                Otherwise, <c>lines</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Selected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.SelectedLib.Marker.Color">
            <summary>
                Sets the marker color of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.SelectedLib.Marker.Size">
            <summary>
                Sets the marker size of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.SelectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.SelectedLib.TextFont.Color">
            <summary>
                Sets the text font color of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.TextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.TextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.TextPositionEnum">
            <summary>
                Sets the positions of the <c>text</c> elements with respects to the (x,y)
                coordinates.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.Unselected.TextFont">
            <summary>
                Gets or sets the TextFont.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.UnselectedLib.Marker.Color">
            <summary>
                Sets the marker color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.UnselectedLib.Marker.Size">
            <summary>
                Sets the marker size of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.UnselectedLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ScatterTernaryLib.UnselectedLib.TextFont.Color">
            <summary>
                Sets the text font color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ScatterTernaryLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Splom">
            <summary>
                The Splom class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.Dimensions">
            <summary>
                Gets or sets the Dimensions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.Text">
            <summary>
                Sets text elements associated with each (x,y) pair to appear on hover. If
                a single string, the same string appears over all the data points. If an
                array of string, the items are mapped in order to the this trace&#39;s (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.TextArray">
            <summary>
                Sets text elements associated with each (x,y) pair to appear on hover. If
                a single string, the same string appears over all the data points. If an
                array of string, the items are mapped in order to the this trace&#39;s (x,y)
                coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.HoverTextArray">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.XAxes">
            <summary>
                Sets the list of x axes corresponding to dimensions of this splom trace.
                By default, a splom will match the first N xaxes where N is the number of
                input dimensions. Note that, in case where <c>diagonal.visible</c> is false
                and <c>showupperhalf</c> or <c>showlowerhalf</c> is false, this splom trace
                will generate one less x-axis and one less y-axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.YAxes">
            <summary>
                Sets the list of y axes corresponding to dimensions of this splom trace.
                By default, a splom will match the first N yaxes where N is the number of
                input dimensions. Note that, in case where <c>diagonal.visible</c> is false
                and <c>showupperhalf</c> or <c>showlowerhalf</c> is false, this splom trace
                will generate one less x-axis and one less y-axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.Diagonal">
            <summary>
                Gets or sets the Diagonal.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.ShowUpperHalf">
            <summary>
                Determines whether or not subplots on the upper half from the diagonal are
                displayed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.ShowLowerHalf">
            <summary>
                Determines whether or not subplots on the lower half from the diagonal are
                displayed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Splom.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.Diagonal">
            <summary>
                The Diagonal class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Diagonal.Visible">
            <summary>
                Determines whether or not subplots on the diagonal are displayed.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.Dimension">
            <summary>
                The Dimension class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Dimension.Visible">
            <summary>
                Determines whether or not this dimension is shown on the graph. Note that
                even visible false dimension contribute to the default grid generate by
                this splom trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Dimension.Label">
            <summary>
                Sets the label corresponding to this splom dimension.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Dimension.Values">
            <summary>
                Sets the dimension values to be plotted.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Dimension.Axis">
            <summary>
                Gets or sets the Axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Dimension.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Dimension.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Dimension.ValuesSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  values .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.DimensionLib.Axis">
            <summary>
                The Axis class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.DimensionLib.Axis.Type">
            <summary>
                Sets the axis type for this dimension&#39;s generated x and y axes. Note
                that the axis <c>type</c> values set in layout take precedence over this
                attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.DimensionLib.Axis.Matches">
            <summary>
                Determines whether or not the x &amp; y axes generated by this dimension
                match. Equivalent to setting the <c>matches</c> axis attribute in the layout
                with the correct axis id.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.DimensionLib.AxisLib.TypeEnum">
            <summary>
                Sets the axis type for this dimension&#39;s generated x and y axes. Note
                that the axis <c>type</c> values set in layout take precedence over this
                attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.ColorArray">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.color</c>) or the bounds set in <c>marker.cmin</c>
                and <c>marker.cmax</c>  Has an effect only if in <c>marker.color</c>is set
                to a numerical array. Defaults to <c>false</c> when <c>marker.cmin</c> and
                <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.color</c>
                and if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                in <c>marker.color</c>is set to a numerical array. Value should have the
                same units as in <c>marker.color</c>. Has no effect when <c>marker.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.color</c>is set
                to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.cmin</c>
                and <c>marker.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if in <c>marker.color</c>is set to a numerical array. In case
                <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true, the default
                 palette will be chosen according to whether numbers in the <c>color</c>
                array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.color</c>is
                set to a numerical array. If true, <c>marker.cmin</c> will correspond to
                the last color in the array and <c>marker.cmax</c> will correspond to the
                first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if in <c>marker.color</c>is set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.Symbol">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.SymbolArray">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.Size">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.SizeArray">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.SizeRef">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the scale factor used to determine the rendered size of marker points. Use
                with <c>sizemin</c> and <c>sizemode</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.SizeMin">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the minimum size (in px) of the rendered marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.SizeMode">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.Opacity">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.OpacityArray">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.SymbolSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  symbol .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Marker.OpacitySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  opacity .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.Line.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here in <c>marker.line.color</c>) or the bounds set in <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>  Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Defaults to <c>false</c> when <c>marker.line.cmin</c>
                and <c>marker.line.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.Line.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.Line.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. Value should have the same units as in <c>marker.line.color</c>
                and if set, <c>marker.line.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.Line.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.line.cmin</c>
                and/or <c>marker.line.cmax</c> to be equidistant to this point. Has an effect
                only if in <c>marker.line.color</c>is set to a numerical array. Value should
                have the same units as in <c>marker.line.color</c>. Has no effect when <c>marker.line.cauto</c>
                is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.Line.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. The colorscale must be an array containing arrays
                mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color
                string. At minimum, a mapping for the lowest (0) and highest (1) values
                are required. For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>marker.line.cmin</c>
                and <c>marker.line.cmax</c>. Alternatively, <c>colorscale</c> may be a palette
                name string of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.Line.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.line.colorscale</c>. Has
                an effect only if in <c>marker.line.color</c>is set to a numerical array.
                In case <c>colorscale</c> is unspecified or <c>autocolorscale</c> is true,
                the default  palette will be chosen according to whether numbers in the
                <c>color</c> array are all positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.Line.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if in <c>marker.line.color</c>is
                set to a numerical array. If true, <c>marker.line.cmin</c> will correspond
                to the last color in the array and <c>marker.line.cmax</c> will correspond
                to the first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.Line.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.SizeModeEnum">
            <summary>
                Has an effect only if <c>marker.size</c> is set to a numerical array. Sets
                the rule for which the data in <c>size</c> is converted to pixels.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.MarkerLib.SymbolEnum">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.SelectedLib.Marker.Color">
            <summary>
                Sets the marker color of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.SelectedLib.Marker.Size">
            <summary>
                Sets the marker size of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.UnselectedLib.Marker.Color">
            <summary>
                Sets the marker color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SplomLib.UnselectedLib.Marker.Size">
            <summary>
                Sets the marker size of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SplomLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTube">
            <summary>
                The StreamTube class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.X">
            <summary>
                Sets the x coordinates of the vector field.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.Y">
            <summary>
                Sets the y coordinates of the vector field.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.Z">
            <summary>
                Sets the z coordinates of the vector field.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.U">
            <summary>
                Sets the x components of the vector field.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.V">
            <summary>
                Sets the y components of the vector field.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.W">
            <summary>
                Sets the z components of the vector field.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.Starts">
            <summary>
                Gets or sets the Starts.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.MaxDisplayed">
            <summary>
                The maximum number of displayed segments in a streamtube.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.SizeRef">
            <summary>
                The scaling factor for the streamtubes. The default is 1, which avoids two
                max divergence tubes from touching at adjacent starting positions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.Text">
            <summary>
                Sets a text element associated with this trace. If trace <c>hoverinfo</c>
                contains a <c>text</c> flag, this text element will be seen in all hover
                labels. Note that streamtube traces do not support array <c>text</c> values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>tubex</c>,
                <c>tubey</c>, <c>tubez</c>, <c>tubeu</c>, <c>tubev</c>, <c>tubew</c>, <c>norm</c>
                and <c>divergence</c>. Anything contained in tag <c>&lt;extra&gt;</c> is
                displayed in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>tubex</c>,
                <c>tubey</c>, <c>tubez</c>, <c>tubeu</c>, <c>tubev</c>, <c>tubew</c>, <c>norm</c>
                and <c>divergence</c>. Anything contained in tag <c>&lt;extra&gt;</c> is
                displayed in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here u/v/w norm) or the bounds set in <c>cmin</c> and <c>cmax</c>
                 Defaults to <c>false</c> when <c>cmin</c> and <c>cmax</c> are set by the
                user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.CMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as u/v/w norm and if set, <c>cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.CMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as u/v/w norm and if set, <c>cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>cmin</c> and/or <c>cmax</c>
                to be equidistant to this point. Value should have the same units as u/v/w
                norm. Has no effect when <c>cauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>cmin</c> and
                <c>cmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>cmin</c> will correspond
                to the last color in the array and <c>cmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.Opacity">
            <summary>
                Sets the opacity of the surface. Please note that in the case of using high
                <c>opacity</c> values for example a value greater than or equal to 0.5 on
                two surfaces (and 0.25 with four surfaces), an overlay of multiple transparent
                surfaces may not perfectly be sorted in depth by the webgl API. This behavior
                may be improved in the near future and is subject to change.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.LightPosition">
            <summary>
                Gets or sets the LightPosition.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.Lighting">
            <summary>
                Gets or sets the Lighting.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.Scene">
            <summary>
                Sets a reference between this trace&#39;s 3D coordinate system and a 3D
                scene. If <c>scene</c> (the default value), the (x,y,z) coordinates refer
                to <c>layout.scene</c>. If <c>scene2</c>, the (x,y,z) coordinates refer
                to <c>layout.scene2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.USrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  u .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.VSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  v .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.WSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  w .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTube.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.Lighting">
            <summary>
                The Lighting class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.Lighting.VertexNormalsEpsilon">
            <summary>
                Epsilon for vertex normals calculation avoids math issues arising from degenerate
                geometry.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.Lighting.FaceNormalsEpsilon">
            <summary>
                Epsilon for face normals calculation avoids math issues arising from degenerate
                geometry.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.Lighting.Ambient">
            <summary>
                Ambient light increases overall color visibility but can wash out the image.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.Lighting.Diffuse">
            <summary>
                Represents the extent that incident rays are reflected in a range of angles.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.Lighting.Specular">
            <summary>
                Represents the level that incident rays are reflected in a single direction,
                causing shine.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.Lighting.Roughness">
            <summary>
                Alters specular reflection; the rougher the surface, the wider and less
                contrasty the shine.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.Lighting.Fresnel">
            <summary>
                Represents the reflectance as a dependency of the viewing angle; e.g. paper
                is reflective when viewing it from the edge of the paper (almost 90 degrees),
                causing shine.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.LightPosition">
            <summary>
                The LightPosition class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.LightPosition.X">
            <summary>
                Numeric vector, representing the X coordinate for each vertex.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.LightPosition.Y">
            <summary>
                Numeric vector, representing the Y coordinate for each vertex.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.LightPosition.Z">
            <summary>
                Numeric vector, representing the Z coordinate for each vertex.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.Starts">
            <summary>
                The Starts class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.Starts.X">
            <summary>
                Sets the x components of the starting position of the streamtubes
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.Starts.Y">
            <summary>
                Sets the y components of the starting position of the streamtubes
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.Starts.Z">
            <summary>
                Sets the z components of the starting position of the streamtubes
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.Starts.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.Starts.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.Starts.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.StreamTubeLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.StreamTubeLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Sunburst">
            <summary>
                The Sunburst class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Labels">
            <summary>
                Sets the labels of each of the sectors.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Parents">
            <summary>
                Sets the parent sectors for each of the sectors. Empty string items &#39;&#39;
                are understood to reference the root node in the hierarchy. If <c>ids</c>
                is filled, <c>parents</c> items are understood to be <c>ids</c> themselves.
                When <c>ids</c> is not set, plotly attempts to find matching items in <c>labels</c>,
                but beware they must be unique.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Values">
            <summary>
                Sets the values associated with each of the sectors. Use with <c>branchvalues</c>
                to determine how the values are summed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.BranchValues">
            <summary>
                Determines how the items in <c>values</c> are summed. When set to <c>total</c>,
                items in <c>values</c> are taken to be value of all its descendants. When
                set to <c>remainder</c>, items in <c>values</c> corresponding to the root
                and the branches sectors are taken to be the extra part not part of the
                sum of the values at their leaves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Count">
            <summary>
                Determines default for <c>values</c> when it is not provided, by inferring
                a 1 for each of the <c>leaves</c> and/or <c>branches</c>, otherwise 0.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Level">
            <summary>
                Sets the level from which this trace hierarchy is rendered. Set <c>level</c>
                to <c>&#39;&#39;</c> to start from the root node in the hierarchy. Must
                be an <c>id</c> if <c>ids</c> is filled in, otherwise plotly attempts to
                find a matching item in <c>labels</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.MaxDepth">
            <summary>
                Sets the number of rendered sectors from any given <c>level</c>. Set <c>maxdepth</c>
                to <c>-1</c> to render all the levels in the hierarchy.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Leaf">
            <summary>
                Gets or sets the Leaf.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Text">
            <summary>
                Sets text elements associated with each sector. If trace <c>textinfo</c>
                contains a <c>text</c> flag, these elements will be seen on the chart. If
                trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.TextInfo">
            <summary>
                Determines which trace information appear on the graph.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>currentPath</c>, <c>root</c>, <c>entry</c>, <c>percentRoot</c>,
                <c>percentEntry</c>, <c>percentParent</c>, <c>label</c> and <c>value</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>currentPath</c>, <c>root</c>, <c>entry</c>, <c>percentRoot</c>,
                <c>percentEntry</c>, <c>percentParent</c>, <c>label</c> and <c>value</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.HoverText">
            <summary>
                Sets hover text elements associated with each sector. If a single string,
                the same string appears for all data points. If an array of string, the
                items are mapped in order of this trace&#39;s sectors. To be seen, trace
                <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.HoverTextArray">
            <summary>
                Sets hover text elements associated with each sector. If a single string,
                the same string appears for all data points. If an array of string, the
                items are mapped in order of this trace&#39;s sectors. To be seen, trace
                <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>currentPath</c>,
                <c>root</c>, <c>entry</c>, <c>percentRoot</c>, <c>percentEntry</c> and <c>percentParent</c>.
                Anything contained in tag <c>&lt;extra&gt;</c> is displayed in the secondary
                box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide
                the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>currentPath</c>,
                <c>root</c>, <c>entry</c>, <c>percentRoot</c>, <c>percentEntry</c> and <c>percentParent</c>.
                Anything contained in tag <c>&lt;extra&gt;</c> is displayed in the secondary
                box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide
                the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.TextFont">
            <summary>
                Sets the font used for <c>textinfo</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.InsideTextOrientation">
            <summary>
                Controls the orientation of the text inside chart sectors. When set to <c>auto</c>,
                text may be oriented in any direction in order to be as big as possible
                in the middle of a sector. The <c>horizontal</c> option orients text to
                be parallel with the bottom of the chart, and may make text smaller in order
                to achieve that goal. The <c>radial</c> option orients text along the radius
                of the sector. The <c>tangential</c> option orients text perpendicular to
                the radius of the sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.InsideTextFont">
            <summary>
                Sets the font used for <c>textinfo</c> lying inside the sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.OutsideTextFont">
            <summary>
                Sets the font used for <c>textinfo</c> lying outside the sector. This option
                refers to the root of the hierarchy presented at the center of a sunburst
                graph. Please note that if a hierarchy has multiple root nodes, this option
                won&#39;t have any effect and <c>insidetextfont</c> would be used.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.Domain">
            <summary>
                Gets or sets the Domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.LabelsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  labels .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.ParentsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  parents .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.ValuesSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  values .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Sunburst.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.BranchValuesEnum">
            <summary>
                Determines how the items in <c>values</c> are summed. When set to <c>total</c>,
                items in <c>values</c> are taken to be value of all its descendants. When
                set to <c>remainder</c>, items in <c>values</c> corresponding to the root
                and the branches sectors are taken to be the extra part not part of the
                sum of the values at their leaves.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.CountFlag">
            <summary>
                Determines default for <c>values</c> when it is not provided, by inferring
                a 1 for each of the <c>leaves</c> and/or <c>branches</c>, otherwise 0.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.Domain">
            <summary>
                The Domain class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Domain.X">
            <summary>
                Sets the horizontal domain of this sunburst trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Domain.Y">
            <summary>
                Sets the vertical domain of this sunburst trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Domain.Row">
            <summary>
                If there is a layout grid, use the domain for this row in the grid for this
                sunburst trace .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Domain.Column">
            <summary>
                If there is a layout grid, use the domain for this column in the grid for
                this sunburst trace .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.InsideTextFont">
            <summary>
                The InsideTextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.InsideTextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.InsideTextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.InsideTextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.InsideTextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.InsideTextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.InsideTextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.InsideTextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.InsideTextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.InsideTextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.InsideTextOrientationEnum">
            <summary>
                Controls the orientation of the text inside chart sectors. When set to <c>auto</c>,
                text may be oriented in any direction in order to be as big as possible
                in the middle of a sector. The <c>horizontal</c> option orients text to
                be parallel with the bottom of the chart, and may make text smaller in order
                to achieve that goal. The <c>radial</c> option orients text along the radius
                of the sector. The <c>tangential</c> option orients text perpendicular to
                the radius of the sector.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.Leaf">
            <summary>
                The Leaf class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Leaf.Opacity">
            <summary>
                Sets the opacity of the leaves. With colorscale it is defaulted to 1; otherwise
                it is defaulted to 0.7
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Marker.Colors">
            <summary>
                Sets the color of each sector of this trace. If not specified, the default
                trace color set is used to pick the sector colors.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here colors) or the bounds set in <c>marker.cmin</c> and <c>marker.cmax</c>
                 Has an effect only if colorsis set to a numerical array. Defaults to <c>false</c>
                when <c>marker.cmin</c> and <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if colorsis
                set to a numerical array. Value should have the same units as colors and
                if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if colorsis
                set to a numerical array. Value should have the same units as colors and
                if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                colorsis set to a numerical array. Value should have the same units as colors.
                Has no effect when <c>marker.cauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if colorsis set to a numerical array.
                The colorscale must be an array containing arrays mapping a normalized value
                to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping
                for the lowest (0) and highest (1) values are required. For example, &#39;[[0,
                <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;. To control the bounds
                of the colorscale in color space, use<c>marker.cmin</c> and <c>marker.cmax</c>.
                Alternatively, <c>colorscale</c> may be a palette name string of the following
                list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if colorsis set to a numerical array. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if colorsis set to
                a numerical array. If true, <c>marker.cmin</c> will correspond to the last
                color in the array and <c>marker.cmax</c> will correspond to the first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if colorsis set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Marker.ColorsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  colors .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.Line.Color">
            <summary>
                Sets the color of the line enclosing each sector. Defaults to the <c>paper_bgcolor</c>
                value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets the color of the line enclosing each sector. Defaults to the <c>paper_bgcolor</c>
                value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the line enclosing each sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the line enclosing each sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.OutsideTextFont">
            <summary>
                The OutsideTextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.OutsideTextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.OutsideTextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.OutsideTextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.OutsideTextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.OutsideTextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.OutsideTextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.OutsideTextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.OutsideTextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.OutsideTextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.TextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.TextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SunburstLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.TextInfoFlag">
            <summary>
                Determines which trace information appear on the graph.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SunburstLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Surface">
            <summary>
                The Surface class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.Z">
            <summary>
                Sets the z coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.X">
            <summary>
                Sets the x coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.Y">
            <summary>
                Sets the y coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.Text">
            <summary>
                Sets the text elements associated with each z value. If trace <c>hoverinfo</c>
                contains a <c>text</c> flag and <c>hovertext</c> is not set, these elements
                will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.TextArray">
            <summary>
                Sets the text elements associated with each z value. If trace <c>hoverinfo</c>
                contains a <c>text</c> flag and <c>hovertext</c> is not set, these elements
                will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.HoverTextArray">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.ConnectGaps">
            <summary>
                Determines whether or not gaps (i.e. {nan} or missing values) in the <c>z</c>
                data are filled in.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.SurfaceColor">
            <summary>
                Sets the surface color values, used for setting a color scale independent
                of <c>z</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here z or surfacecolor) or the bounds set in <c>cmin</c> and
                <c>cmax</c>  Defaults to <c>false</c> when <c>cmin</c> and <c>cmax</c> are
                set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.CMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as z or surfacecolor and if set, <c>cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.CMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as z or surfacecolor and if set, <c>cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>cmin</c> and/or <c>cmax</c>
                to be equidistant to this point. Value should have the same units as z or
                surfacecolor. Has no effect when <c>cauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>cmin</c> and
                <c>cmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>cmin</c> will correspond
                to the last color in the array and <c>cmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.Contours">
            <summary>
                Gets or sets the Contours.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.HideSurface">
            <summary>
                Determines whether or not a surface is drawn. For example, set <c>hidesurface</c>
                to <c>false</c> <c>contours.x.show</c> to <c>true</c> and <c>contours.y.show</c>
                to <c>true</c> to draw a wire frame plot.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.LightPosition">
            <summary>
                Gets or sets the LightPosition.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.Lighting">
            <summary>
                Gets or sets the Lighting.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.Opacity">
            <summary>
                Sets the opacity of the surface. Please note that in the case of using high
                <c>opacity</c> values for example a value greater than or equal to 0.5 on
                two surfaces (and 0.25 with four surfaces), an overlay of multiple transparent
                surfaces may not perfectly be sorted in depth by the webgl API. This behavior
                may be improved in the near future and is subject to change.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.OpacityScale">
            <summary>
                Sets the opacityscale. The opacityscale must be an array containing arrays
                mapping a normalized value to an opacity value. At minimum, a mapping for
                the lowest (0) and highest (1) values are required. For example, &#39;[[0,
                1], [0.5, 0.2], [1, 1]]&#39; means that higher/lower values would have higher
                opacity values and those in the middle would be more transparent Alternatively,
                <c>opacityscale</c> may be a palette name string of the following list:
                <c>min</c>, <c>max</c>, <c>extremes</c> and <c>uniform</c>. The default
                is <c>uniform</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.XCalendar">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.YCalendar">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.ZCalendar">
            <summary>
                Sets the calendar system to use with <c>z</c> date data.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.Scene">
            <summary>
                Sets a reference between this trace&#39;s 3D coordinate system and a 3D
                scene. If <c>scene</c> (the default value), the (x,y,z) coordinates refer
                to <c>layout.scene</c>. If <c>scene2</c>, the (x,y,z) coordinates refer
                to <c>layout.scene2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.SurfaceColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  surfacecolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Surface.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.Contours">
            <summary>
                The Contours class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.Contours.X">
            <summary>
                Gets or sets the X.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.Contours.Y">
            <summary>
                Gets or sets the Y.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.Contours.Z">
            <summary>
                Gets or sets the Z.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.X">
            <summary>
                The X class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.X.Show">
            <summary>
                Determines whether or not contour lines about the x dimension are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.X.Start">
            <summary>
                Sets the starting contour level value. Must be less than <c>contours.end</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.X.End">
            <summary>
                Sets the end contour level value. Must be more than <c>contours.start</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.X.Size">
            <summary>
                Sets the step between each contour level. Must be positive.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.X.Project">
            <summary>
                Gets or sets the Project.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.X.Color">
            <summary>
                Sets the color of the contour lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.X.UseColorMap">
            <summary>
                An alternate to <c>color</c>. Determines whether or not the contour lines
                are colored using the trace <c>colorscale</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.X.Width">
            <summary>
                Sets the width of the contour lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.X.Highlight">
            <summary>
                Determines whether or not contour lines about the x dimension are highlighted
                on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.X.HighlightColor">
            <summary>
                Sets the color of the highlighted contour lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.X.HighlightWidth">
            <summary>
                Sets the width of the highlighted contour lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.XLib.Project">
            <summary>
                The Project class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.XLib.Project.X">
            <summary>
                Determines whether or not these contour lines are projected on the x plane.
                If <c>highlight</c> is set to <c>true</c> (the default), the projected lines
                are shown on hover. If <c>show</c> is set to <c>true</c>, the projected
                lines are shown in permanence.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.XLib.Project.Y">
            <summary>
                Determines whether or not these contour lines are projected on the y plane.
                If <c>highlight</c> is set to <c>true</c> (the default), the projected lines
                are shown on hover. If <c>show</c> is set to <c>true</c>, the projected
                lines are shown in permanence.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.XLib.Project.Z">
            <summary>
                Determines whether or not these contour lines are projected on the z plane.
                If <c>highlight</c> is set to <c>true</c> (the default), the projected lines
                are shown on hover. If <c>show</c> is set to <c>true</c>, the projected
                lines are shown in permanence.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Y">
            <summary>
                The Y class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Y.Show">
            <summary>
                Determines whether or not contour lines about the y dimension are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Y.Start">
            <summary>
                Sets the starting contour level value. Must be less than <c>contours.end</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Y.End">
            <summary>
                Sets the end contour level value. Must be more than <c>contours.start</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Y.Size">
            <summary>
                Sets the step between each contour level. Must be positive.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Y.Project">
            <summary>
                Gets or sets the Project.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Y.Color">
            <summary>
                Sets the color of the contour lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Y.UseColorMap">
            <summary>
                An alternate to <c>color</c>. Determines whether or not the contour lines
                are colored using the trace <c>colorscale</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Y.Width">
            <summary>
                Sets the width of the contour lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Y.Highlight">
            <summary>
                Determines whether or not contour lines about the y dimension are highlighted
                on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Y.HighlightColor">
            <summary>
                Sets the color of the highlighted contour lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Y.HighlightWidth">
            <summary>
                Sets the width of the highlighted contour lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.YLib.Project">
            <summary>
                The Project class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.YLib.Project.X">
            <summary>
                Determines whether or not these contour lines are projected on the x plane.
                If <c>highlight</c> is set to <c>true</c> (the default), the projected lines
                are shown on hover. If <c>show</c> is set to <c>true</c>, the projected
                lines are shown in permanence.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.YLib.Project.Y">
            <summary>
                Determines whether or not these contour lines are projected on the y plane.
                If <c>highlight</c> is set to <c>true</c> (the default), the projected lines
                are shown on hover. If <c>show</c> is set to <c>true</c>, the projected
                lines are shown in permanence.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.YLib.Project.Z">
            <summary>
                Determines whether or not these contour lines are projected on the z plane.
                If <c>highlight</c> is set to <c>true</c> (the default), the projected lines
                are shown on hover. If <c>show</c> is set to <c>true</c>, the projected
                lines are shown in permanence.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Z">
            <summary>
                The Z class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Z.Show">
            <summary>
                Determines whether or not contour lines about the z dimension are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Z.Start">
            <summary>
                Sets the starting contour level value. Must be less than <c>contours.end</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Z.End">
            <summary>
                Sets the end contour level value. Must be more than <c>contours.start</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Z.Size">
            <summary>
                Sets the step between each contour level. Must be positive.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Z.Project">
            <summary>
                Gets or sets the Project.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Z.Color">
            <summary>
                Sets the color of the contour lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Z.UseColorMap">
            <summary>
                An alternate to <c>color</c>. Determines whether or not the contour lines
                are colored using the trace <c>colorscale</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Z.Width">
            <summary>
                Sets the width of the contour lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Z.Highlight">
            <summary>
                Determines whether or not contour lines about the z dimension are highlighted
                on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Z.HighlightColor">
            <summary>
                Sets the color of the highlighted contour lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.Z.HighlightWidth">
            <summary>
                Sets the width of the highlighted contour lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.ZLib.Project">
            <summary>
                The Project class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.ZLib.Project.X">
            <summary>
                Determines whether or not these contour lines are projected on the x plane.
                If <c>highlight</c> is set to <c>true</c> (the default), the projected lines
                are shown on hover. If <c>show</c> is set to <c>true</c>, the projected
                lines are shown in permanence.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.ZLib.Project.Y">
            <summary>
                Determines whether or not these contour lines are projected on the y plane.
                If <c>highlight</c> is set to <c>true</c> (the default), the projected lines
                are shown on hover. If <c>show</c> is set to <c>true</c>, the projected
                lines are shown in permanence.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.ContoursLib.ZLib.Project.Z">
            <summary>
                Determines whether or not these contour lines are projected on the z plane.
                If <c>highlight</c> is set to <c>true</c> (the default), the projected lines
                are shown on hover. If <c>show</c> is set to <c>true</c>, the projected
                lines are shown in permanence.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.Lighting">
            <summary>
                The Lighting class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.Lighting.Ambient">
            <summary>
                Ambient light increases overall color visibility but can wash out the image.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.Lighting.Diffuse">
            <summary>
                Represents the extent that incident rays are reflected in a range of angles.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.Lighting.Specular">
            <summary>
                Represents the level that incident rays are reflected in a single direction,
                causing shine.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.Lighting.Roughness">
            <summary>
                Alters specular reflection; the rougher the surface, the wider and less
                contrasty the shine.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.Lighting.Fresnel">
            <summary>
                Represents the reflectance as a dependency of the viewing angle; e.g. paper
                is reflective when viewing it from the edge of the paper (almost 90 degrees),
                causing shine.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.LightPosition">
            <summary>
                The LightPosition class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.LightPosition.X">
            <summary>
                Numeric vector, representing the X coordinate for each vertex.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.LightPosition.Y">
            <summary>
                Numeric vector, representing the Y coordinate for each vertex.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.LightPosition.Z">
            <summary>
                Numeric vector, representing the Z coordinate for each vertex.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.SurfaceLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.XCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>x</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.YCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>y</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.SurfaceLib.ZCalendarEnum">
            <summary>
                Sets the calendar system to use with <c>z</c> date data.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Table">
            <summary>
                The Table class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.Domain">
            <summary>
                Gets or sets the Domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.ColumnWidth">
            <summary>
                The width of columns expressed as a ratio. Columns fill the available width
                in proportion of their specified column widths.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.ColumnWidthArray">
            <summary>
                The width of columns expressed as a ratio. Columns fill the available width
                in proportion of their specified column widths.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.ColumnOrder">
            <summary>
                Specifies the rendered order of the data columns; for example, a value <c>2</c>
                at position <c>0</c> means that column index <c>0</c> in the data will be
                rendered as the third column, as columns have an index base of zero.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.Header">
            <summary>
                Gets or sets the Header.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.Cells">
            <summary>
                Gets or sets the Cells.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.ColumnWidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  columnwidth .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Table.ColumnOrderSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  columnorder .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.Cells">
            <summary>
                The Cells class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.Values">
            <summary>
                Cell values. <c>values[m][n]</c> represents the value of the <c>n</c>th
                point in column <c>m</c>, therefore the <c>values[m]</c> vector length for
                all columns must be the same (longer vectors will be truncated). Each value
                must be a finite number or a string.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.Format">
            <summary>
                Sets the cell value formatting rule using d3 formatting mini-language which
                is similar to those of Python. See https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.Prefix">
            <summary>
                Prefix for cell values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.PrefixArray">
            <summary>
                Prefix for cell values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.Suffix">
            <summary>
                Suffix for cell values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.SuffixArray">
            <summary>
                Suffix for cell values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.Height">
            <summary>
                The height of cells.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.Align">
            <summary>
                Sets the horizontal alignment of the <c>text</c> within the box. Has an
                effect only if <c>text</c> spans two or more lines (i.e. <c>text</c> contains
                one or more &lt;br&gt; HTML tags) or if an explicit width is set to override
                the text width.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.AlignArray">
            <summary>
                Sets the horizontal alignment of the <c>text</c> within the box. Has an
                effect only if <c>text</c> spans two or more lines (i.e. <c>text</c> contains
                one or more &lt;br&gt; HTML tags) or if an explicit width is set to override
                the text width.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.Fill">
            <summary>
                Gets or sets the Fill.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.Font">
            <summary>
                Gets or sets the Font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.ValuesSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  values .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.FormatSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  format .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.PrefixSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  prefix .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.SuffixSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  suffix .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Cells.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.CellsLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the <c>text</c> within the box. Has an
                effect only if <c>text</c> spans two or more lines (i.e. <c>text</c> contains
                one or more &lt;br&gt; HTML tags) or if an explicit width is set to override
                the text width.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.CellsLib.Fill">
            <summary>
                The Fill class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Fill.Color">
            <summary>
                Sets the cell fill color. It accepts either a specific color or an array
                of colors or a 2D array of colors.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Fill.ColorArray">
            <summary>
                Sets the cell fill color. It accepts either a specific color or an array
                of colors or a 2D array of colors.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Fill.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.CellsLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.CellsLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Line.Width">
            <summary>
                Gets or sets the Width.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Line.WidthArray">
            <summary>
                Gets or sets the Width.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Line.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Line.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.CellsLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.Domain">
            <summary>
                The Domain class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Domain.X">
            <summary>
                Sets the horizontal domain of this table trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Domain.Y">
            <summary>
                Sets the vertical domain of this table trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Domain.Row">
            <summary>
                If there is a layout grid, use the domain for this row in the grid for this
                table trace .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Domain.Column">
            <summary>
                If there is a layout grid, use the domain for this column in the grid for
                this table trace .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.Header">
            <summary>
                The Header class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.Values">
            <summary>
                Header cell values. <c>values[m][n]</c> represents the value of the <c>n</c>th
                point in column <c>m</c>, therefore the <c>values[m]</c> vector length for
                all columns must be the same (longer vectors will be truncated). Each value
                must be a finite number or a string.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.Format">
            <summary>
                Sets the cell value formatting rule using d3 formatting mini-language which
                is similar to those of Python. See https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.Prefix">
            <summary>
                Prefix for cell values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.PrefixArray">
            <summary>
                Prefix for cell values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.Suffix">
            <summary>
                Suffix for cell values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.SuffixArray">
            <summary>
                Suffix for cell values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.Height">
            <summary>
                The height of cells.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.Align">
            <summary>
                Sets the horizontal alignment of the <c>text</c> within the box. Has an
                effect only if <c>text</c> spans two or more lines (i.e. <c>text</c> contains
                one or more &lt;br&gt; HTML tags) or if an explicit width is set to override
                the text width.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.AlignArray">
            <summary>
                Sets the horizontal alignment of the <c>text</c> within the box. Has an
                effect only if <c>text</c> spans two or more lines (i.e. <c>text</c> contains
                one or more &lt;br&gt; HTML tags) or if an explicit width is set to override
                the text width.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.Fill">
            <summary>
                Gets or sets the Fill.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.Font">
            <summary>
                Gets or sets the Font.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.ValuesSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  values .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.FormatSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  format .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.PrefixSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  prefix .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.SuffixSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  suffix .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Header.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.HeaderLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the <c>text</c> within the box. Has an
                effect only if <c>text</c> spans two or more lines (i.e. <c>text</c> contains
                one or more &lt;br&gt; HTML tags) or if an explicit width is set to override
                the text width.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.HeaderLib.Fill">
            <summary>
                The Fill class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Fill.Color">
            <summary>
                Sets the cell fill color. It accepts either a specific color or an array
                of colors or a 2D array of colors.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Fill.ColorArray">
            <summary>
                Sets the cell fill color. It accepts either a specific color or an array
                of colors or a 2D array of colors.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Fill.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.HeaderLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.HeaderLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Line.Width">
            <summary>
                Gets or sets the Width.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Line.WidthArray">
            <summary>
                Gets or sets the Width.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Line.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Line.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HeaderLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TableLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TableLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMap">
            <summary>
                The TreeMap class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Labels">
            <summary>
                Sets the labels of each of the sectors.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Parents">
            <summary>
                Sets the parent sectors for each of the sectors. Empty string items &#39;&#39;
                are understood to reference the root node in the hierarchy. If <c>ids</c>
                is filled, <c>parents</c> items are understood to be <c>ids</c> themselves.
                When <c>ids</c> is not set, plotly attempts to find matching items in <c>labels</c>,
                but beware they must be unique.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Values">
            <summary>
                Sets the values associated with each of the sectors. Use with <c>branchvalues</c>
                to determine how the values are summed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.BranchValues">
            <summary>
                Determines how the items in <c>values</c> are summed. When set to <c>total</c>,
                items in <c>values</c> are taken to be value of all its descendants. When
                set to <c>remainder</c>, items in <c>values</c> corresponding to the root
                and the branches sectors are taken to be the extra part not part of the
                sum of the values at their leaves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Count">
            <summary>
                Determines default for <c>values</c> when it is not provided, by inferring
                a 1 for each of the <c>leaves</c> and/or <c>branches</c>, otherwise 0.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Level">
            <summary>
                Sets the level from which this trace hierarchy is rendered. Set <c>level</c>
                to <c>&#39;&#39;</c> to start from the root node in the hierarchy. Must
                be an <c>id</c> if <c>ids</c> is filled in, otherwise plotly attempts to
                find a matching item in <c>labels</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.MaxDepth">
            <summary>
                Sets the number of rendered sectors from any given <c>level</c>. Set <c>maxdepth</c>
                to <c>-1</c> to render all the levels in the hierarchy.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Tiling">
            <summary>
                Gets or sets the Tiling.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.PathBar">
            <summary>
                Gets or sets the PathBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Text">
            <summary>
                Sets text elements associated with each sector. If trace <c>textinfo</c>
                contains a <c>text</c> flag, these elements will be seen on the chart. If
                trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.TextInfo">
            <summary>
                Determines which trace information appear on the graph.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>currentPath</c>, <c>root</c>, <c>entry</c>, <c>percentRoot</c>,
                <c>percentEntry</c>, <c>percentParent</c>, <c>label</c> and <c>value</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>currentPath</c>, <c>root</c>, <c>entry</c>, <c>percentRoot</c>,
                <c>percentEntry</c>, <c>percentParent</c>, <c>label</c> and <c>value</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.HoverText">
            <summary>
                Sets hover text elements associated with each sector. If a single string,
                the same string appears for all data points. If an array of string, the
                items are mapped in order of this trace&#39;s sectors. To be seen, trace
                <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.HoverTextArray">
            <summary>
                Sets hover text elements associated with each sector. If a single string,
                the same string appears for all data points. If an array of string, the
                items are mapped in order of this trace&#39;s sectors. To be seen, trace
                <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>currentPath</c>,
                <c>root</c>, <c>entry</c>, <c>percentRoot</c>, <c>percentEntry</c> and <c>percentParent</c>.
                Anything contained in tag <c>&lt;extra&gt;</c> is displayed in the secondary
                box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide
                the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>currentPath</c>,
                <c>root</c>, <c>entry</c>, <c>percentRoot</c>, <c>percentEntry</c> and <c>percentParent</c>.
                Anything contained in tag <c>&lt;extra&gt;</c> is displayed in the secondary
                box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide
                the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.TextFont">
            <summary>
                Sets the font used for <c>textinfo</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.InsideTextFont">
            <summary>
                Sets the font used for <c>textinfo</c> lying inside the sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.OutsideTextFont">
            <summary>
                Sets the font used for <c>textinfo</c> lying outside the sector. This option
                refers to the root of the hierarchy presented on top left corner of a treemap
                graph. Please note that if a hierarchy has multiple root nodes, this option
                won&#39;t have any effect and <c>insidetextfont</c> would be used.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.TextPosition">
            <summary>
                Sets the positions of the <c>text</c> elements.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.Domain">
            <summary>
                Gets or sets the Domain.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.LabelsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  labels .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.ParentsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  parents .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.ValuesSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  values .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMap.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.BranchValuesEnum">
            <summary>
                Determines how the items in <c>values</c> are summed. When set to <c>total</c>,
                items in <c>values</c> are taken to be value of all its descendants. When
                set to <c>remainder</c>, items in <c>values</c> corresponding to the root
                and the branches sectors are taken to be the extra part not part of the
                sum of the values at their leaves.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.CountFlag">
            <summary>
                Determines default for <c>values</c> when it is not provided, by inferring
                a 1 for each of the <c>leaves</c> and/or <c>branches</c>, otherwise 0.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.Domain">
            <summary>
                The Domain class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Domain.X">
            <summary>
                Sets the horizontal domain of this treemap trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Domain.Y">
            <summary>
                Sets the vertical domain of this treemap trace (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Domain.Row">
            <summary>
                If there is a layout grid, use the domain for this row in the grid for this
                treemap trace .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Domain.Column">
            <summary>
                If there is a layout grid, use the domain for this column in the grid for
                this treemap trace .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.InsideTextFont">
            <summary>
                The InsideTextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.InsideTextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.InsideTextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.InsideTextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.InsideTextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.InsideTextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.InsideTextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.InsideTextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.InsideTextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.InsideTextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Marker.Pad">
            <summary>
                Gets or sets the Pad.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Marker.Colors">
            <summary>
                Sets the color of each sector of this trace. If not specified, the default
                trace color set is used to pick the sector colors.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Marker.DepthFade">
            <summary>
                Determines if the sector colors are faded towards the background from the
                leaves up to the headers. This option is unavailable when a <c>colorscale</c>
                is present, defaults to false when <c>marker.colors</c> is set, but otherwise
                defaults to true. When set to <c>reversed</c>, the fading direction is inverted,
                that is the top elements within hierarchy are drawn with fully saturated
                colors while the leaves are faded towards the background color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Marker.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here colors) or the bounds set in <c>marker.cmin</c> and <c>marker.cmax</c>
                 Has an effect only if colorsis set to a numerical array. Defaults to <c>false</c>
                when <c>marker.cmin</c> and <c>marker.cmax</c> are set by the user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Marker.CMin">
            <summary>
                Sets the lower bound of the color domain. Has an effect only if colorsis
                set to a numerical array. Value should have the same units as colors and
                if set, <c>marker.cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Marker.CMax">
            <summary>
                Sets the upper bound of the color domain. Has an effect only if colorsis
                set to a numerical array. Value should have the same units as colors and
                if set, <c>marker.cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Marker.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>marker.cmin</c> and/or
                <c>marker.cmax</c> to be equidistant to this point. Has an effect only if
                colorsis set to a numerical array. Value should have the same units as colors.
                Has no effect when <c>marker.cauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Marker.ColorScale">
            <summary>
                Sets the colorscale. Has an effect only if colorsis set to a numerical array.
                The colorscale must be an array containing arrays mapping a normalized value
                to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping
                for the lowest (0) and highest (1) values are required. For example, &#39;[[0,
                <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;. To control the bounds
                of the colorscale in color space, use<c>marker.cmin</c> and <c>marker.cmax</c>.
                Alternatively, <c>colorscale</c> may be a palette name string of the following
                list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Marker.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>marker.colorscale</c>. Has an
                effect only if colorsis set to a numerical array. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Marker.ReverseScale">
            <summary>
                Reverses the color mapping if true. Has an effect only if colorsis set to
                a numerical array. If true, <c>marker.cmin</c> will correspond to the last
                color in the array and <c>marker.cmax</c> will correspond to the first color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Marker.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace. Has an
                effect only if colorsis set to a numerical array.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Marker.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Marker.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Marker.ColorsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  colors .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.DepthFadeEnum">
            <summary>
                Determines if the sector colors are faded towards the background from the
                leaves up to the headers. This option is unavailable when a <c>colorscale</c>
                is present, defaults to false when <c>marker.colors</c> is set, but otherwise
                defaults to true. When set to <c>reversed</c>, the fading direction is inverted,
                that is the top elements within hierarchy are drawn with fully saturated
                colors while the leaves are faded towards the background color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.Line.Color">
            <summary>
                Sets the color of the line enclosing each sector. Defaults to the <c>paper_bgcolor</c>
                value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.Line.ColorArray">
            <summary>
                Sets the color of the line enclosing each sector. Defaults to the <c>paper_bgcolor</c>
                value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the line enclosing each sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.Line.WidthArray">
            <summary>
                Sets the width (in px) of the line enclosing each sector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.Line.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.Line.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.Pad">
            <summary>
                The Pad class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.Pad.T">
            <summary>
                Sets the padding form the top (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.Pad.L">
            <summary>
                Sets the padding form the left (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.Pad.R">
            <summary>
                Sets the padding form the right (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.MarkerLib.Pad.B">
            <summary>
                Sets the padding form the bottom (in px).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.OutsideTextFont">
            <summary>
                The OutsideTextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.OutsideTextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.OutsideTextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.OutsideTextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.OutsideTextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.OutsideTextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.OutsideTextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.OutsideTextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.OutsideTextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.OutsideTextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.PathBar">
            <summary>
                The PathBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.PathBar.Visible">
            <summary>
                Determines if the path bar is drawn i.e. outside the trace <c>domain</c>
                and with one pixel gap.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.PathBar.Side">
            <summary>
                Determines on which side of the the treemap the <c>pathbar</c> should be
                presented.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.PathBar.EdgeShape">
            <summary>
                Determines which shape is used for edges between <c>barpath</c> labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.PathBar.Thickness">
            <summary>
                Sets the thickness of <c>pathbar</c> (in px). If not specified the <c>pathbar.textfont.size</c>
                is used with 3 pixles extra padding on each side.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.PathBar.TextFont">
            <summary>
                Sets the font used inside <c>pathbar</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.PathBarLib.EdgeShapeEnum">
            <summary>
                Determines which shape is used for edges between <c>barpath</c> labels.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.PathBarLib.SideEnum">
            <summary>
                Determines on which side of the the treemap the <c>pathbar</c> should be
                presented.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.PathBarLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.PathBarLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.PathBarLib.TextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.PathBarLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.PathBarLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.PathBarLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.PathBarLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.PathBarLib.TextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.PathBarLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.PathBarLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.TextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.TextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.TextInfoFlag">
            <summary>
                Determines which trace information appear on the graph.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.TextPositionEnum">
            <summary>
                Sets the positions of the <c>text</c> elements.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.Tiling">
            <summary>
                The Tiling class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Tiling.Packing">
            <summary>
                Determines d3 treemap solver. For more info please refer to https://github.com/d3/d3-hierarchy#treemap-tiling
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Tiling.SquarifyRatio">
            <summary>
                When using <c>squarify</c> <c>packing</c> algorithm, according to https://github.com/d3/d3-hierarchy/blob/master/README.md#squarify_ratio
                this option specifies the desired aspect ratio of the generated rectangles.
                The ratio must be specified as a number greater than or equal to one. Note
                that the orientation of the generated rectangles (tall or wide) is not implied
                by the ratio; for example, a ratio of two will attempt to produce a mixture
                of rectangles whose width:height ratio is either 2:1 or 1:2. When using
                <c>squarify</c>, unlike d3 which uses the Golden Ratio i.e. 1.618034, Plotly
                applies 1 to increase squares in treemap layouts.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Tiling.Flip">
            <summary>
                Determines if the positions obtained from solver are flipped on each axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.TreeMapLib.Tiling.Pad">
            <summary>
                Sets the inner padding (in px).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.TilingLib.FlipFlag">
            <summary>
                Determines if the positions obtained from solver are flipped on each axis.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.TilingLib.PackingEnum">
            <summary>
                Determines d3 treemap solver. For more info please refer to https://github.com/d3/d3-hierarchy#treemap-tiling
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.TreeMapLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Violin">
            <summary>
                The Violin class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Y">
            <summary>
                Sets the y sample data or coordinates. See overview for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.X">
            <summary>
                Sets the x sample data or coordinates. See overview for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.X0">
            <summary>
                Sets the x coordinate for single-box traces or the starting coordinate for
                multi-box traces set using q1/median/q3. See overview for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Y0">
            <summary>
                Sets the y coordinate for single-box traces or the starting coordinate for
                multi-box traces set using q1/median/q3. See overview for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
                For violin traces, the name will also be used for the position coordinate,
                if <c>x</c> and <c>x0</c> (<c>y</c> and <c>y0</c> if horizontal) are missing
                and the position axis is categorical. Note that the trace name is also used
                as a default value for attribute <c>scalegroup</c> (please see its description
                for details).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Orientation">
            <summary>
                Sets the orientation of the violin(s). If <c>v</c> (<c>h</c>), the distribution
                is visualized along the vertical (horizontal).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Bandwidth">
            <summary>
                Sets the bandwidth used to compute the kernel density estimate. By default,
                the bandwidth is determined by Silverman&#39;s rule of thumb.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.ScaleGroup">
            <summary>
                If there are multiple violins that should be sized according to to some
                metric (see <c>scalemode</c>), link them by providing a non-empty group
                id here shared by every trace in the same group. If a violin&#39;s <c>width</c>
                is undefined, <c>scalegroup</c> will default to the trace&#39;s name. In
                this case, violins with the same names will be linked together
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.ScaleMode">
            <summary>
                Sets the metric by which the width of each violin is determined.<c>width</c>
                means each violin has the same (max) width<c>count</c> means the violins
                are scaled by the number of sample points makingup each violin.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.SpanMode">
            <summary>
                Sets the method by which the span in data space where the density function
                will be computed. <c>soft</c> means the span goes from the sample&#39;s
                minimum value minus two bandwidths to the sample&#39;s maximum value plus
                two bandwidths. <c>hard</c> means the span goes from the sample&#39;s minimum
                to its maximum value. For custom span settings, use mode <c>manual</c> and
                fill in the <c>span</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Span">
            <summary>
                Sets the span in data space for which the density function will be computed.
                Has an effect only when <c>spanmode</c> is set to <c>manual</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.FillColor">
            <summary>
                Sets the fill color. Defaults to a half-transparent variant of the line
                color, marker color, or marker line color, whichever is available.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Points">
            <summary>
                If <c>outliers</c>, only the sample points lying outside the whiskers are
                shown If <c>suspectedoutliers</c>, the outlier points are shown and points
                either less than 4<c>Q1-3</c>Q3 or greater than 4<c>Q3-3</c>Q1 are highlighted
                (see <c>outliercolor</c>) If <c>all</c>, all sample points are shown If
                <c>false</c>, only the violins are shown with no sample points. Defaults
                to <c>suspectedoutliers</c> when <c>marker.outliercolor</c> or <c>marker.line.outliercolor</c>
                is set, otherwise defaults to <c>outliers</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Jitter">
            <summary>
                Sets the amount of jitter in the sample points drawn. If <c>0</c>, the sample
                points align along the distribution axis. If <c>1</c>, the sample points
                are drawn in a random jitter of width equal to the width of the violins.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.PointPos">
            <summary>
                Sets the position of the sample points in relation to the violins. If <c>0</c>,
                the sample points are places over the center of the violins. Positive (negative)
                values correspond to positions to the right (left) for vertical violins
                and above (below) for horizontal violins.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Width">
            <summary>
                Sets the width of the violin in data coordinates. If <c>0</c> (default value)
                the width is automatically selected based on the positions of other violin
                traces in the same subplot.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Text">
            <summary>
                Sets the text elements associated with each sample value. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.TextArray">
            <summary>
                Sets the text elements associated with each sample value. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.HoverTextArray">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Box">
            <summary>
                Gets or sets the Box.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.MeanLine">
            <summary>
                Gets or sets the MeanLine.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Side">
            <summary>
                Determines on which side of the position value the density function making
                up one half of a violin is plotted. Useful when comparing two violin traces
                under <c>overlay</c> mode, where one trace has <c>side</c> set to <c>positive</c>
                and the other to <c>negative</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.OffsetGroup">
            <summary>
                Set several traces linked to the same position axis or matching axes to
                the same offsetgroup where bars of the same position coordinate will line
                up.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.AlignmentGroup">
            <summary>
                Set several traces linked to the same position axis or matching axes to
                the same alignmentgroup. This controls whether bars compute their positional
                range dependently or independently.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Selected">
            <summary>
                Gets or sets the Selected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.Unselected">
            <summary>
                Gets or sets the Unselected.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.HoverOn">
            <summary>
                Do the hover effects highlight individual violins or sample points or the
                kernel density estimate or any combination of them?
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Violin.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.Box">
            <summary>
                The Box class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Box.Visible">
            <summary>
                Determines if an miniature box plot is drawn inside the violins. 
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Box.Width">
            <summary>
                Sets the width of the inner box plots relative to the violins&#39; width.
                For example, with 1, the inner box plots are as wide as the violins.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Box.FillColor">
            <summary>
                Sets the inner box plot fill color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Box.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.BoxLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.BoxLib.Line.Color">
            <summary>
                Sets the inner box plot bounding line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.BoxLib.Line.Width">
            <summary>
                Sets the inner box plot bounding line width.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.HoverOnFlag">
            <summary>
                Do the hover effects highlight individual violins or sample points or the
                kernel density estimate or any combination of them?
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Line.Color">
            <summary>
                Sets the color of line bounding the violin(s).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Line.Width">
            <summary>
                Sets the width (in px) of line bounding the violin(s).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Marker.OutlierColor">
            <summary>
                Sets the color of the outlier sample points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Marker.Symbol">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Marker.Opacity">
            <summary>
                Sets the marker opacity.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Marker.Size">
            <summary>
                Sets the marker size (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Marker.Color">
            <summary>
                Sets themarkercolor. It accepts either a specific color or an array of numbers
                that are mapped to the colorscale relative to the max and min values of
                the array or relative to <c>marker.cmin</c> and <c>marker.cmax</c> if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.MarkerLib.Line.Color">
            <summary>
                Sets themarker.linecolor. It accepts either a specific color or an array
                of numbers that are mapped to the colorscale relative to the max and min
                values of the array or relative to <c>marker.line.cmin</c> and <c>marker.line.cmax</c>
                if set.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.MarkerLib.Line.Width">
            <summary>
                Sets the width (in px) of the lines bounding the marker points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.MarkerLib.Line.OutlierColor">
            <summary>
                Sets the border line color of the outlier sample points. Defaults to marker.color
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.MarkerLib.Line.OutlierWidth">
            <summary>
                Sets the border line width (in px) of the outlier sample points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.MarkerLib.SymbolEnum">
            <summary>
                Sets the marker symbol type. Adding 100 is equivalent to appending <c>-open</c>
                to a symbol name. Adding 200 is equivalent to appending <c>-dot</c> to a
                symbol name. Adding 300 is equivalent to appending <c>-open-dot</c> or <c>dot-open</c>
                to a symbol name.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.MeanLine">
            <summary>
                The MeanLine class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.MeanLine.Visible">
            <summary>
                Determines if a line corresponding to the sample&#39;s mean is shown inside
                the violins. If <c>box.visible</c> is turned on, the mean line is drawn
                inside the inner box. Otherwise, the mean line is drawn from one side of
                the violin to other.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.MeanLine.Color">
            <summary>
                Sets the mean line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.MeanLine.Width">
            <summary>
                Sets the mean line width.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.OrientationEnum">
            <summary>
                Sets the orientation of the violin(s). If <c>v</c> (<c>h</c>), the distribution
                is visualized along the vertical (horizontal).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.PointsEnum">
            <summary>
                If <c>outliers</c>, only the sample points lying outside the whiskers are
                shown If <c>suspectedoutliers</c>, the outlier points are shown and points
                either less than 4<c>Q1-3</c>Q3 or greater than 4<c>Q3-3</c>Q1 are highlighted
                (see <c>outliercolor</c>) If <c>all</c>, all sample points are shown If
                <c>false</c>, only the violins are shown with no sample points. Defaults
                to <c>suspectedoutliers</c> when <c>marker.outliercolor</c> or <c>marker.line.outliercolor</c>
                is set, otherwise defaults to <c>outliers</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.ScaleModeEnum">
            <summary>
                Sets the metric by which the width of each violin is determined.<c>width</c>
                means each violin has the same (max) width<c>count</c> means the violins
                are scaled by the number of sample points makingup each violin.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.Selected">
            <summary>
                The Selected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Selected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.SelectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.SelectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.SelectedLib.Marker.Color">
            <summary>
                Sets the marker color of selected points.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.SelectedLib.Marker.Size">
            <summary>
                Sets the marker size of selected points.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.SideEnum">
            <summary>
                Determines on which side of the position value the density function making
                up one half of a violin is plotted. Useful when comparing two violin traces
                under <c>overlay</c> mode, where one trace has <c>side</c> set to <c>positive</c>
                and the other to <c>negative</c>.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.SpanModeEnum">
            <summary>
                Sets the method by which the span in data space where the density function
                will be computed. <c>soft</c> means the span goes from the sample&#39;s
                minimum value minus two bandwidths to the sample&#39;s maximum value plus
                two bandwidths. <c>hard</c> means the span goes from the sample&#39;s minimum
                to its maximum value. For custom span settings, use mode <c>manual</c> and
                fill in the <c>span</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.Unselected">
            <summary>
                The Unselected class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.Unselected.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.UnselectedLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.UnselectedLib.Marker.Opacity">
            <summary>
                Sets the marker opacity of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.UnselectedLib.Marker.Color">
            <summary>
                Sets the marker color of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.ViolinLib.UnselectedLib.Marker.Size">
            <summary>
                Sets the marker size of unselected points, applied only when a selection
                exists.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.ViolinLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Volume">
            <summary>
                The Volume class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.X">
            <summary>
                Sets the X coordinates of the vertices on X axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Y">
            <summary>
                Sets the Y coordinates of the vertices on Y axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Z">
            <summary>
                Sets the Z coordinates of the vertices on Z axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Value">
            <summary>
                Sets the 4th dimension (value) of the vertices.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.IsoMin">
            <summary>
                Sets the minimum boundary for iso-surface plot.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.IsoMax">
            <summary>
                Sets the maximum boundary for iso-surface plot.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Surface">
            <summary>
                Gets or sets the Surface.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.SpaceFrame">
            <summary>
                Gets or sets the SpaceFrame.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Slices">
            <summary>
                Gets or sets the Slices.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Caps">
            <summary>
                Gets or sets the Caps.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Text">
            <summary>
                Sets the text elements associated with the vertices. If trace <c>hoverinfo</c>
                contains a <c>text</c> flag and <c>hovertext</c> is not set, these elements
                will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.TextArray">
            <summary>
                Sets the text elements associated with the vertices. If trace <c>hoverinfo</c>
                contains a <c>text</c> flag and <c>hovertext</c> is not set, these elements
                will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.HoverText">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.HoverTextArray">
            <summary>
                Same as <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available.  Anything contained in
                tag <c>&lt;extra&gt;</c> is displayed in the secondary box, for example
                <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>. To hide the secondary
                box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.CAuto">
            <summary>
                Determines whether or not the color domain is computed with respect to the
                input data (here <c>value</c>) or the bounds set in <c>cmin</c> and <c>cmax</c>
                 Defaults to <c>false</c> when <c>cmin</c> and <c>cmax</c> are set by the
                user.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.CMin">
            <summary>
                Sets the lower bound of the color domain. Value should have the same units
                as <c>value</c> and if set, <c>cmax</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.CMax">
            <summary>
                Sets the upper bound of the color domain. Value should have the same units
                as <c>value</c> and if set, <c>cmin</c> must be set as well.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.CMid">
            <summary>
                Sets the mid-point of the color domain by scaling <c>cmin</c> and/or <c>cmax</c>
                to be equidistant to this point. Value should have the same units as <c>value</c>.
                Has no effect when <c>cauto</c> is <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.ColorScale">
            <summary>
                Sets the colorscale. The colorscale must be an array containing arrays mapping
                a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string.
                At minimum, a mapping for the lowest (0) and highest (1) values are required.
                For example, &#39;[[0, <c>rgb(0,0,255)</c>], [1, <c>rgb(255,0,0)</c>]]&#39;.
                To control the bounds of the colorscale in color space, use<c>cmin</c> and
                <c>cmax</c>. Alternatively, <c>colorscale</c> may be a palette name string
                of the following list: Greys,YlGnBu,Greens,YlOrRd,Bluered,RdBu,Reds,Blues,Picnic,Rainbow,Portland,Jet,Hot,Blackbody,Earth,Electric,Viridis,Cividis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.AutoColorScale">
            <summary>
                Determines whether the colorscale is a default palette (&#39;autocolorscale:
                true&#39;) or the palette determined by <c>colorscale</c>. In case <c>colorscale</c>
                is unspecified or <c>autocolorscale</c> is true, the default  palette will
                be chosen according to whether numbers in the <c>color</c> array are all
                positive, all negative or mixed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.ReverseScale">
            <summary>
                Reverses the color mapping if true. If true, <c>cmin</c> will correspond
                to the last color in the array and <c>cmax</c> will correspond to the first
                color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.ShowScale">
            <summary>
                Determines whether or not a colorbar is displayed for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.ColorBar">
            <summary>
                Gets or sets the ColorBar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.ColorAxis">
            <summary>
                Sets a reference to a shared color axis. References to these shared color
                axes are <c>coloraxis</c>, <c>coloraxis2</c>, <c>coloraxis3</c>, etc. Settings
                for these shared color axes are set in the layout, under <c>layout.coloraxis</c>,
                <c>layout.coloraxis2</c>, etc. Note that multiple color scales can be linked
                to the same color axis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Opacity">
            <summary>
                Sets the opacity of the surface. Please note that in the case of using high
                <c>opacity</c> values for example a value greater than or equal to 0.5 on
                two surfaces (and 0.25 with four surfaces), an overlay of multiple transparent
                surfaces may not perfectly be sorted in depth by the webgl API. This behavior
                may be improved in the near future and is subject to change.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.OpacityScale">
            <summary>
                Sets the opacityscale. The opacityscale must be an array containing arrays
                mapping a normalized value to an opacity value. At minimum, a mapping for
                the lowest (0) and highest (1) values are required. For example, &#39;[[0,
                1], [0.5, 0.2], [1, 1]]&#39; means that higher/lower values would have higher
                opacity values and those in the middle would be more transparent Alternatively,
                <c>opacityscale</c> may be a palette name string of the following list:
                <c>min</c>, <c>max</c>, <c>extremes</c> and <c>uniform</c>. The default
                is <c>uniform</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.LightPosition">
            <summary>
                Gets or sets the LightPosition.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Lighting">
            <summary>
                Gets or sets the Lighting.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.FlatShading">
            <summary>
                Determines whether or not normal smoothing is applied to the meshes, creating
                meshes with an angular, low-poly look via flat reflections.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Contour">
            <summary>
                Gets or sets the Contour.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.Scene">
            <summary>
                Sets a reference between this trace&#39;s 3D coordinate system and a 3D
                scene. If <c>scene</c> (the default value), the (x,y,z) coordinates refer
                to <c>layout.scene</c>. If <c>scene2</c>, the (x,y,z) coordinates refer
                to <c>layout.scene2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.ZSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  z .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.ValueSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  value .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Volume.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.Caps">
            <summary>
                The Caps class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Caps.X">
            <summary>
                Gets or sets the X.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Caps.Y">
            <summary>
                Gets or sets the Y.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Caps.Z">
            <summary>
                Gets or sets the Z.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.CapsLib.X">
            <summary>
                The X class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.CapsLib.X.Show">
            <summary>
                Sets the fill ratio of the <c>slices</c>. The default fill value of the
                x <c>slices</c> is 1 meaning that they are entirely shaded. On the other
                hand Applying a <c>fill</c> ratio less than one would allow the creation
                of openings parallel to the edges.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.CapsLib.X.Fill">
            <summary>
                Sets the fill ratio of the <c>caps</c>. The default fill value of the <c>caps</c>
                is 1 meaning that they are entirely shaded. On the other hand Applying a
                <c>fill</c> ratio less than one would allow the creation of openings parallel
                to the edges.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.CapsLib.Y">
            <summary>
                The Y class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.CapsLib.Y.Show">
            <summary>
                Sets the fill ratio of the <c>slices</c>. The default fill value of the
                y <c>slices</c> is 1 meaning that they are entirely shaded. On the other
                hand Applying a <c>fill</c> ratio less than one would allow the creation
                of openings parallel to the edges.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.CapsLib.Y.Fill">
            <summary>
                Sets the fill ratio of the <c>caps</c>. The default fill value of the <c>caps</c>
                is 1 meaning that they are entirely shaded. On the other hand Applying a
                <c>fill</c> ratio less than one would allow the creation of openings parallel
                to the edges.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.CapsLib.Z">
            <summary>
                The Z class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.CapsLib.Z.Show">
            <summary>
                Sets the fill ratio of the <c>slices</c>. The default fill value of the
                z <c>slices</c> is 1 meaning that they are entirely shaded. On the other
                hand Applying a <c>fill</c> ratio less than one would allow the creation
                of openings parallel to the edges.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.CapsLib.Z.Fill">
            <summary>
                Sets the fill ratio of the <c>caps</c>. The default fill value of the <c>caps</c>
                is 1 meaning that they are entirely shaded. On the other hand Applying a
                <c>fill</c> ratio less than one would allow the creation of openings parallel
                to the edges.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBar">
            <summary>
                The ColorBar class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.ThicknessMode">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.Thickness">
            <summary>
                Sets the thickness of the color bar This measure excludes the size of the
                padding, ticks and labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.LenMode">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.Len">
            <summary>
                Sets the length of the color bar This measure excludes the padding of both
                ends. That is, the color bar length is this length minus the padding on
                both ends.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.X">
            <summary>
                Sets the x position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.XAnchor">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.XPad">
            <summary>
                Sets the amount of padding (in px) along the x direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.Y">
            <summary>
                Sets the y position of the color bar (in plot fraction).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.YAnchor">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.YPad">
            <summary>
                Sets the amount of padding (in px) along the y direction.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.OutlineColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.OutlineWidth">
            <summary>
                Sets the width (in px) of the axis line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.BorderColor">
            <summary>
                Sets the axis line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.BorderWidth">
            <summary>
                Sets the width (in px) or the border enclosing this color bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.BgColor">
            <summary>
                Sets the color of padded area.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.TickMode">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.NTicks">
            <summary>
                Specifies the maximum number of ticks for the particular axis. The actual
                number of ticks will be chosen automatically to be less than or equal to
                <c>nticks</c>. Has an effect only if <c>tickmode</c> is set to <c>auto</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.Tick0">
            <summary>
                Sets the placement of the first tick on this axis. Use with <c>dtick</c>.
                If the axis <c>type</c> is <c>log</c>, then you must take the log of your
                starting tick (e.g. to set the starting tick to 100, set the <c>tick0</c>
                to 2) except when <c>dtick</c>=<c>L&lt;f&gt;</c> (see <c>dtick</c> for more
                info). If the axis <c>type</c> is <c>date</c>, it should be a date string,
                like date data. If the axis <c>type</c> is <c>category</c>, it should be
                a number, using the scale where each category is assigned a serial number
                from zero in the order it appears.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.DTick">
            <summary>
                Sets the step in-between ticks on this axis. Use with <c>tick0</c>. Must
                be a positive number, or special strings available to <c>log</c> and <c>date</c>
                axes. If the axis <c>type</c> is <c>log</c>, then ticks are set every 10^(n*dtick)
                where n is the tick number. For example, to set a tick mark at 1, 10, 100,
                1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
                to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
                or 0.69897000433. <c>log</c> has several special values; <c>L&lt;f&gt;</c>,
                where <c>f</c> is a positive number, gives ticks linearly spaced in value
                (but not position). For example <c>tick0</c> = 0.1, <c>dtick</c> = <c>L0.5</c>
                will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small
                digits between, use <c>D1</c> (all digits) or <c>D2</c> (only 2 and 5).
                <c>tick0</c> is ignored for <c>D1</c> and <c>D2</c>. If the axis <c>type</c>
                is <c>date</c>, then you must convert the time to milliseconds. For example,
                to set the interval between ticks to one day, set <c>dtick</c> to 86400000.0.
                <c>date</c> also has special values <c>M&lt;n&gt;</c> gives ticks spaced
                by a number of months. <c>n</c> must be a positive integer. To set ticks
                on the 15th of every third month, set <c>tick0</c> to <c>2000-01-15</c>
                and <c>dtick</c> to <c>M3</c>. To set ticks every 4 years, set <c>dtick</c>
                to <c>M48</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.TickVals">
            <summary>
                Sets the values at which ticks on this axis appear. Only has an effect if
                <c>tickmode</c> is set to <c>array</c>. Used with <c>ticktext</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.TickText">
            <summary>
                Sets the text displayed at the ticks position via <c>tickvals</c>. Only
                has an effect if <c>tickmode</c> is set to <c>array</c>. Used with <c>tickvals</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.Ticks">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.TickleN">
            <summary>
                Sets the tick length (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.TickWidth">
            <summary>
                Sets the tick width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.TickColor">
            <summary>
                Sets the tick color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.ShowTickLabels">
            <summary>
                Determines whether or not the tick labels are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.TickFont">
            <summary>
                Sets the color bar&#39;s tick label font
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.TickAngle">
            <summary>
                Sets the angle of the tick labels with respect to the horizontal. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.TickFormat">
            <summary>
                Sets the tick label formatting rule using d3 formatting mini-languages which
                are very similar to those in Python. For numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                And for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                We add one item to d3&#39;s date formatter: <c>%{n}f</c> for fractional
                seconds with n digits. For example, &#39;2016-10-13 09:15:23.456&#39; with
                tickformat <c>%H~%M~%S.%2f</c> would display <c>09~15~23.46</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.TickFormatStops">
            <summary>
                Gets or sets the TickFormatStops.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.TickPrefix">
            <summary>
                Sets a tick label prefix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.ShowTickPrefix">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.TickSuffix">
            <summary>
                Sets a tick label suffix.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.ShowTickSuffix">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.SeparateThousands">
            <summary>
                If <c>true</c>, even 4-digit integers are separated
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.ExponentFormat">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.ShowExponent">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.TickValsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  tickvals .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBar.TickTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ticktext .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.ExponentFormatEnum">
            <summary>
                Determines a formatting rule for the tick exponents. For example, consider
                the number 1,000,000,000. If <c>none</c>, it appears as 1,000,000,000. If
                <c>e</c>, 1e+9. If <c>E</c>, 1E+9. If <c>power</c>, 1x10^9 (with 9 in a
                super script). If <c>SI</c>, 1G. If <c>B</c>, 1B.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.LenModeEnum">
            <summary>
                Determines whether this color bar&#39;s length (i.e. the measure in the
                color variation direction) is set in units of plot <c>fraction</c> or in
                *pixels. Use <c>len</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.ShowExponentEnum">
            <summary>
                If <c>all</c>, all exponents are shown besides their significands. If <c>first</c>,
                only the exponent of the first tick is shown. If <c>last</c>, only the exponent
                of the last tick is shown. If <c>none</c>, no exponents appear.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.ShowTickPrefixEnum">
            <summary>
                If <c>all</c>, all tick labels are displayed with a prefix. If <c>first</c>,
                only the first tick is displayed with a prefix. If <c>last</c>, only the
                last tick is displayed with a suffix. If <c>none</c>, tick prefixes are
                hidden.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.ShowTickSuffixEnum">
            <summary>
                Same as <c>showtickprefix</c> but for tick suffixes.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.ThicknessModeEnum">
            <summary>
                Determines whether this color bar&#39;s thickness (i.e. the measure in the
                constant color direction) is set in units of plot <c>fraction</c> or in
                <c>pixels</c>. Use <c>thickness</c> to set the value.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TickFont">
            <summary>
                The TickFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TickFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TickFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TickFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TickFormatStop">
            <summary>
                The TickFormatStop class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TickFormatStop.Enabled">
            <summary>
                Determines whether or not this stop is used. If <c>false</c>, this stop
                is ignored even within its <c>dtickrange</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TickFormatStop.DTickRange">
            <summary>
                range [<c>min</c>, <c>max</c>], where <c>min</c>, <c>max</c> - dtick values
                which describe some zoom level, it is possible to omit <c>min</c> or <c>max</c>
                value by passing <c>null</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TickFormatStop.Value">
            <summary>
                string - dtickformat for described zoom level, the same as <c>tickformat</c>
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TickFormatStop.Name">
            <summary>
                When used in a template, named items are created in the output figure in
                addition to any items the figure already has in this array. You can modify
                these items in the output figure by making your own item with <c>templateitemname</c>
                matching this <c>name</c> alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). Has no effect outside
                of a template.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TickFormatStop.TemplateItemName">
            <summary>
                Used to refer to a named item in this array in the template. Named items
                from the template will be created even without a matching item in the input
                figure, but you can modify one by making an item with <c>templateitemname</c>
                matching its <c>name</c>, alongside your modifications (including &#39;visible:
                false&#39; or &#39;enabled: false&#39; to hide it). If there is no template
                or no matching item, this item will be hidden unless you explicitly show
                it with &#39;visible: true&#39;.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TickModeEnum">
            <summary>
                Sets the tick mode for this axis. If <c>auto</c>, the number of ticks is
                set via <c>nticks</c>. If <c>linear</c>, the placement of the ticks is determined
                by a starting position <c>tick0</c> and a tick step <c>dtick</c> (<c>linear</c>
                is the default value if <c>tick0</c> and <c>dtick</c> are provided). If
                <c>array</c>, the placement of the ticks is set via <c>tickvals</c> and
                the tick text is <c>ticktext</c>. (<c>array</c> is the default value if
                <c>tickvals</c> is provided).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TicksEnum">
            <summary>
                Determines whether ticks are drawn or not. If **, this axis&#39; ticks are
                not drawn. If <c>outside</c> (<c>inside</c>), this axis&#39; are drawn outside
                (inside) the axis lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.Title">
            <summary>
                The Title class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.Title.Text">
            <summary>
                Sets the title of the color bar. Note that before the existence of <c>title.text</c>,
                the title&#39;s contents used to be defined as the <c>title</c> attribute
                itself. This behavior has been deprecated.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.Title.Font">
            <summary>
                Sets this color bar&#39;s title font. Note that the title&#39;s font used
                to be set by the now deprecated <c>titlefont</c> attribute.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.Title.Side">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TitleLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TitleLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TitleLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TitleLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.TitleLib.SideEnum">
            <summary>
                Determines the location of color bar&#39;s title with respect to the color
                bar. Note that the title&#39;s location used to be set by the now deprecated
                <c>titleside</c> attribute.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.XAnchorEnum">
            <summary>
                Sets this color bar&#39;s horizontal position anchor. This anchor binds
                the <c>x</c> position to the <c>left</c>, <c>center</c> or <c>right</c>
                of the color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.ColorBarLib.YAnchorEnum">
            <summary>
                Sets this color bar&#39;s vertical position anchor This anchor binds the
                <c>y</c> position to the <c>top</c>, <c>middle</c> or <c>bottom</c> of the
                color bar.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.Contour">
            <summary>
                The Contour class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Contour.Show">
            <summary>
                Sets whether or not dynamic contours are shown on hover
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Contour.Color">
            <summary>
                Sets the color of the contour lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Contour.Width">
            <summary>
                Sets the width of the contour lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.Lighting">
            <summary>
                The Lighting class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Lighting.VertexNormalsEpsilon">
            <summary>
                Epsilon for vertex normals calculation avoids math issues arising from degenerate
                geometry.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Lighting.FaceNormalsEpsilon">
            <summary>
                Epsilon for face normals calculation avoids math issues arising from degenerate
                geometry.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Lighting.Ambient">
            <summary>
                Ambient light increases overall color visibility but can wash out the image.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Lighting.Diffuse">
            <summary>
                Represents the extent that incident rays are reflected in a range of angles.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Lighting.Specular">
            <summary>
                Represents the level that incident rays are reflected in a single direction,
                causing shine.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Lighting.Roughness">
            <summary>
                Alters specular reflection; the rougher the surface, the wider and less
                contrasty the shine.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Lighting.Fresnel">
            <summary>
                Represents the reflectance as a dependency of the viewing angle; e.g. paper
                is reflective when viewing it from the edge of the paper (almost 90 degrees),
                causing shine.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.LightPosition">
            <summary>
                The LightPosition class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.LightPosition.X">
            <summary>
                Numeric vector, representing the X coordinate for each vertex.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.LightPosition.Y">
            <summary>
                Numeric vector, representing the Y coordinate for each vertex.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.LightPosition.Z">
            <summary>
                Numeric vector, representing the Z coordinate for each vertex.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.Slices">
            <summary>
                The Slices class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Slices.X">
            <summary>
                Gets or sets the X.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Slices.Y">
            <summary>
                Gets or sets the Y.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Slices.Z">
            <summary>
                Gets or sets the Z.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.SlicesLib.X">
            <summary>
                The X class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.SlicesLib.X.Show">
            <summary>
                Determines whether or not slice planes about the x dimension are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.SlicesLib.X.Locations">
            <summary>
                Specifies the location(s) of slices on the axis. When not specified slices
                would be created for all points of the axis x except start and end.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.SlicesLib.X.Fill">
            <summary>
                Sets the fill ratio of the <c>slices</c>. The default fill value of the
                <c>slices</c> is 1 meaning that they are entirely shaded. On the other hand
                Applying a <c>fill</c> ratio less than one would allow the creation of openings
                parallel to the edges.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.SlicesLib.X.LocationsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  locations .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.SlicesLib.Y">
            <summary>
                The Y class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.SlicesLib.Y.Show">
            <summary>
                Determines whether or not slice planes about the y dimension are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.SlicesLib.Y.Locations">
            <summary>
                Specifies the location(s) of slices on the axis. When not specified slices
                would be created for all points of the axis y except start and end.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.SlicesLib.Y.Fill">
            <summary>
                Sets the fill ratio of the <c>slices</c>. The default fill value of the
                <c>slices</c> is 1 meaning that they are entirely shaded. On the other hand
                Applying a <c>fill</c> ratio less than one would allow the creation of openings
                parallel to the edges.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.SlicesLib.Y.LocationsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  locations .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.SlicesLib.Z">
            <summary>
                The Z class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.SlicesLib.Z.Show">
            <summary>
                Determines whether or not slice planes about the z dimension are drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.SlicesLib.Z.Locations">
            <summary>
                Specifies the location(s) of slices on the axis. When not specified slices
                would be created for all points of the axis z except start and end.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.SlicesLib.Z.Fill">
            <summary>
                Sets the fill ratio of the <c>slices</c>. The default fill value of the
                <c>slices</c> is 1 meaning that they are entirely shaded. On the other hand
                Applying a <c>fill</c> ratio less than one would allow the creation of openings
                parallel to the edges.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.SlicesLib.Z.LocationsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  locations .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.SpaceFrame">
            <summary>
                The SpaceFrame class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.SpaceFrame.Show">
            <summary>
                Displays/hides tetrahedron shapes between minimum and maximum iso-values.
                Often useful when either caps or surfaces are disabled or filled with values
                less than 1.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.SpaceFrame.Fill">
            <summary>
                Sets the fill ratio of the <c>spaceframe</c> elements. The default fill
                value is 1 meaning that they are entirely shaded. Applying a <c>fill</c>
                ratio less than one would allow the creation of openings parallel to the
                edges.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.Surface">
            <summary>
                The Surface class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Surface.Show">
            <summary>
                Hides/displays surfaces between minimum and maximum iso-values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Surface.Count">
            <summary>
                Sets the number of iso-surfaces between minimum and maximum iso-values.
                By default this value is 2 meaning that only minimum and maximum surfaces
                would be drawn.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Surface.Fill">
            <summary>
                Sets the fill ratio of the iso-surface. The default fill value of the surface
                is 1 meaning that they are entirely shaded. On the other hand Applying a
                <c>fill</c> ratio less than one would allow the creation of openings parallel
                to the edges.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.VolumeLib.Surface.Pattern">
            <summary>
                Sets the surface pattern of the iso-surface 3-D sections. The default pattern
                of the surface is <c>all</c> meaning that the rest of surface elements would
                be shaded. The check options (either 1 or 2) could be used to draw half
                of the squares on the surface. Using various combinations of capital <c>A</c>,
                <c>B</c>, <c>C</c>, <c>D</c> and <c>E</c> may also be used to reduce the
                number of triangles on the iso-surfaces and creating other patterns of interest.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.SurfaceLib.PatternFlag">
            <summary>
                Sets the surface pattern of the iso-surface 3-D sections. The default pattern
                of the surface is <c>all</c> meaning that the rest of surface elements would
                be shaded. The check options (either 1 or 2) could be used to draw half
                of the squares on the surface. Using various combinations of capital <c>A</c>,
                <c>B</c>, <c>C</c>, <c>D</c> and <c>E</c> may also be used to reduce the
                number of triangles on the iso-surfaces and creating other patterns of interest.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.VolumeLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.Waterfall">
            <summary>
                The Waterfall class.
                Implements the <see cref="T:Plotly.Blazor.ITrace" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Visible">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.ShowLegend">
            <summary>
                Determines whether or not an item corresponding to this trace is shown in
                the legend.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.LegendGroup">
            <summary>
                Sets the legend group for this trace. Traces part of the same legend group
                hide/show at the same time when toggling legend items.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Opacity">
            <summary>
                Sets the opacity of the trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Name">
            <summary>
                Sets the trace name. The trace name appear as the legend item and on hover.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.UId">
            <summary>
                Assign an id to this trace, Use this to provide object constancy between
                traces during animations and transitions.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Ids">
            <summary>
                Assigns id labels to each datum. These ids for object constancy of data
                points during animation. Should be an array of strings, not numbers or any
                other type.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.CustomData">
            <summary>
                Assigns extra data each datum. This may be useful when listening to hover,
                click and selection events. Note that, <c>scatter</c> traces also appends
                customdata items in the markers DOM elements
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Meta">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.MetaArray">
            <summary>
                Assigns extra meta information associated with this trace that can be used
                in various text attributes. Attributes such as trace <c>name</c>, graph,
                axis and colorbar <c>title.text</c>, annotation <c>text</c> <c>rangeselector</c>,
                <c>updatemenues</c> and <c>sliders</c> <c>label</c> text all support <c>meta</c>.
                To access the trace <c>meta</c> values in an attribute in the same trace,
                simply use <c>%{meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                item in question. To access trace <c>meta</c> in layout attributes, use
                <c>%{data[n[.meta[i]}</c> where <c>i</c> is the index or key of the <c>meta</c>
                and <c>n</c> is the trace index.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.SelectedPoints">
            <summary>
                Array containing integer indices of selected points. Has an effect only
                for traces that support selections. Note that an empty array means an empty
                selection where the <c>unselected</c> are turned on for all points, whereas,
                any other non-array values means no selection all where the <c>selected</c>
                and <c>unselected</c> styles have no effect.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.HoverLabel">
            <summary>
                Gets or sets the HoverLabel.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Stream">
            <summary>
                Gets or sets the Stream.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Transforms">
            <summary>
                Gets or sets the Transforms.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.UiRevision">
            <summary>
                Controls persistence of some user-driven changes to the trace: <c>constraintrange</c>
                in <c>parcoords</c> traces, as well as some &#39;editable: true&#39; modifications
                such as <c>name</c> and <c>colorbar.title</c>. Defaults to <c>layout.uirevision</c>.
                Note that other user-driven trace attribute changes are controlled by <c>layout</c>
                attributes: <c>trace.visible</c> is controlled by <c>layout.legend.uirevision</c>,
                <c>selectedpoints</c> is controlled by <c>layout.selectionrevision</c>,
                and <c>colorbar.(x|y)</c> (accessible with &#39;config: {editable: true}&#39;)
                is controlled by <c>layout.editrevision</c>. Trace changes are tracked by
                <c>uid</c>, which only falls back on trace index if no <c>uid</c> is provided.
                So if your app can add/remove traces before the end of the <c>data</c> array,
                such that the same trace has a different index, you can still preserve user-driven
                changes if you give each trace a <c>uid</c> that stays with it as it moves.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Measure">
            <summary>
                An array containing types of values. By default the values are considered
                as <c>relative</c>. However; it is possible to use <c>total</c> to compute
                the sums. Also <c>absolute</c> could be applied to reset the computed total
                or to declare an initial value where needed.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Base">
            <summary>
                Sets where the bar base is drawn (in position axis units).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.X">
            <summary>
                Sets the x coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.X0">
            <summary>
                Alternate to <c>x</c>. Builds a linear space of x coordinates. Use with
                <c>dx</c> where <c>x0</c> is the starting coordinate and <c>dx</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.DX">
            <summary>
                Sets the x coordinate step. See <c>x0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Y">
            <summary>
                Sets the y coordinates.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Y0">
            <summary>
                Alternate to <c>y</c>. Builds a linear space of y coordinates. Use with
                <c>dy</c> where <c>y0</c> is the starting coordinate and <c>dy</c> the step.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Dy">
            <summary>
                Sets the y coordinate step. See <c>y0</c> for more info.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.HoverText">
            <summary>
                Sets hover text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.HoverTextArray">
            <summary>
                Sets hover text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                To be seen, trace <c>hoverinfo</c> must contain a <c>text</c> flag.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.HoverTemplate">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>initial</c>,
                <c>delta</c> and <c>final</c>. Anything contained in tag <c>&lt;extra&gt;</c>
                is displayed in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.HoverTemplateArray">
            <summary>
                Template string used for rendering the information that appear on hover
                box. Note that this will override <c>hoverinfo</c>. Variables are inserted
                using %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted
                using d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price:
                %{y:$.2f}&quot;. https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. The variables available in <c>hovertemplate</c>
                are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.
                Additionally, every attributes that can be specified per-point (the ones
                that are &#39;arrayOk: true&#39;) are available. variables <c>initial</c>,
                <c>delta</c> and <c>final</c>. Anything contained in tag <c>&lt;extra&gt;</c>
                is displayed in the secondary box, for example <c>&lt;extra&gt;{fullData.name}&lt;/extra&gt;</c>.
                To hide the secondary box completely, use an empty tag <c>&lt;extra&gt;&lt;/extra&gt;</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.HoverInfo">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.HoverInfoArray">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.TextInfo">
            <summary>
                Determines which trace information appear on the graph. In the case of having
                multiple waterfalls, totals are computed separately (per trace).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.TextTemplate">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>initial</c>, <c>delta</c>, <c>final</c> and <c>label</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.TextTemplateArray">
            <summary>
                Template string used for rendering the information text that appear on points.
                Note that this will override <c>textinfo</c>. Variables are inserted using
                %{variable}, for example &quot;y: %{y}&quot;. Numbers are formatted using
                d3-format&#39;s syntax %{variable:d3-format}, for example &quot;Price: %{y:$.2f}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format
                for details on the formatting syntax. Dates are formatted using d3-time-format&#39;s
                syntax %{variable|d3-time-format}, for example &quot;Day: %{2019-01-01|%A}&quot;.
                https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format
                for details on the date formatting syntax. Every attributes that can be
                specified per-point (the ones that are &#39;arrayOk: true&#39;) are available.
                variables <c>initial</c>, <c>delta</c>, <c>final</c> and <c>label</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Text">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.TextArray">
            <summary>
                Sets text elements associated with each (x,y) pair. If a single string,
                the same string appears over all the data points. If an array of string,
                the items are mapped in order to the this trace&#39;s (x,y) coordinates.
                If trace <c>hoverinfo</c> contains a <c>text</c> flag and <c>hovertext</c>
                is not set, these elements will be seen in the hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.TextPosition">
            <summary>
                Specifies the location of the <c>text</c>. <c>inside</c> positions <c>text</c>
                inside, next to the bar end (rotated and scaled if needed). <c>outside</c>
                positions <c>text</c> outside, next to the bar end (scaled if needed), unless
                there is another bar stacked on this one, then the text gets pushed inside.
                <c>auto</c> tries to position <c>text</c> inside the bar, but if the bar
                is too small and no bar is stacked on this one the text is moved outside.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.TextPositionArray">
            <summary>
                Specifies the location of the <c>text</c>. <c>inside</c> positions <c>text</c>
                inside, next to the bar end (rotated and scaled if needed). <c>outside</c>
                positions <c>text</c> outside, next to the bar end (scaled if needed), unless
                there is another bar stacked on this one, then the text gets pushed inside.
                <c>auto</c> tries to position <c>text</c> inside the bar, but if the bar
                is too small and no bar is stacked on this one the text is moved outside.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.InsideTextAnchor">
            <summary>
                Determines if texts are kept at center or start/end points in <c>textposition</c>
                <c>inside</c> mode.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.TextAngle">
            <summary>
                Sets the angle of the tick labels with respect to the bar. For example,
                a <c>tickangle</c> of -90 draws the tick labels vertically. With <c>auto</c>
                the texts may automatically be rotated to fit with the maximum size in bars.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.TextFont">
            <summary>
                Sets the font used for <c>text</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.InsideTextFont">
            <summary>
                Sets the font used for <c>text</c> lying inside the bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.OutsideTextFont">
            <summary>
                Sets the font used for <c>text</c> lying outside the bar.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.ConstrainText">
            <summary>
                Constrain the size of text inside or outside a bar to be no larger than
                the bar itself.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.ClipOnAxis">
            <summary>
                Determines whether the text nodes are clipped about the subplot axes. To
                show the text nodes above axis lines and tick labels, make sure to set <c>xaxis.layer</c>
                and <c>yaxis.layer</c> to &#39;below traces&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Orientation">
            <summary>
                Sets the orientation of the bars. With <c>v</c> (<c>h</c>), the value of
                the each bar spans along the vertical (horizontal).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Offset">
            <summary>
                Shifts the position where the bar is drawn (in position axis units). In
                <c>group</c> barmode, traces that set <c>offset</c> will be excluded and
                drawn in <c>overlay</c> mode instead.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.OffsetArray">
            <summary>
                Shifts the position where the bar is drawn (in position axis units). In
                <c>group</c> barmode, traces that set <c>offset</c> will be excluded and
                drawn in <c>overlay</c> mode instead.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Width">
            <summary>
                Sets the bar width (in position axis units).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.WidthArray">
            <summary>
                Sets the bar width (in position axis units).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Increasing">
            <summary>
                Gets or sets the Increasing.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Decreasing">
            <summary>
                Gets or sets the Decreasing.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Totals">
            <summary>
                Gets or sets the Totals.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.Connector">
            <summary>
                Gets or sets the Connector.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.OffsetGroup">
            <summary>
                Set several traces linked to the same position axis or matching axes to
                the same offsetgroup where bars of the same position coordinate will line
                up.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.AlignmentGroup">
            <summary>
                Set several traces linked to the same position axis or matching axes to
                the same alignmentgroup. This controls whether bars compute their positional
                range dependently or independently.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.XAxis">
            <summary>
                Sets a reference between this trace&#39;s x coordinates and a 2D cartesian
                x axis. If <c>x</c> (the default value), the x coordinates refer to <c>layout.xaxis</c>.
                If <c>x2</c>, the x coordinates refer to <c>layout.xaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.YAxis">
            <summary>
                Sets a reference between this trace&#39;s y coordinates and a 2D cartesian
                y axis. If <c>y</c> (the default value), the y coordinates refer to <c>layout.yaxis</c>.
                If <c>y2</c>, the y coordinates refer to <c>layout.yaxis2</c>, and so on.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.IdsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  ids .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.CustomDataSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  customdata .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.MetaSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  meta .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.MeasureSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  measure .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.XSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  x .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.YSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  y .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.HoverTextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertext .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.HoverTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hovertemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.HoverInfoSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  hoverinfo .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.TextTemplateSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  texttemplate .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.TextSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  text .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.TextPositionSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  textposition .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.OffsetSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  offset .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.Waterfall.WidthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  width .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.Connector">
            <summary>
                The Connector class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.Connector.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.Connector.Mode">
            <summary>
                Sets the shape of connector lines.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.Connector.Visible">
            <summary>
                Determines if connector lines are drawn. 
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.ConnectorLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.ConnectorLib.Line.Color">
            <summary>
                Sets the line color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.ConnectorLib.Line.Width">
            <summary>
                Sets the line width (in px).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.ConnectorLib.Line.Dash">
            <summary>
                Sets the dash style of lines. Set to a dash type string (<c>solid</c>, <c>dot</c>,
                <c>dash</c>, <c>longdash</c>, <c>dashdot</c>, or <c>longdashdot</c>) or
                a dash length list in px (eg <c>5px,10px,2px,2px</c>).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.ConnectorLib.ModeEnum">
            <summary>
                Sets the shape of connector lines.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.ConstrainTextEnum">
            <summary>
                Constrain the size of text inside or outside a bar to be no larger than
                the bar itself.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.Decreasing">
            <summary>
                The Decreasing class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.Decreasing.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.DecreasingLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.DecreasingLib.Marker.Color">
            <summary>
                Sets the marker color of all decreasing values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.DecreasingLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.DecreasingLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.DecreasingLib.MarkerLib.Line.Color">
            <summary>
                Sets the line color of all decreasing values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.DecreasingLib.MarkerLib.Line.Width">
            <summary>
                Sets the line width of all decreasing values.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.HoverInfoFlag">
            <summary>
                Determines which trace information appear on hover. If <c>none</c> or <c>skip</c>
                are set, no information is displayed upon hovering. But, if <c>none</c>
                is set, click and hover events are still fired.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.HoverLabel">
            <summary>
                The HoverLabel class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabel.BgColor">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabel.BgColorArray">
            <summary>
                Sets the background color of the hover labels for this trace
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabel.BorderColor">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabel.BorderColorArray">
            <summary>
                Sets the border color of the hover labels for this trace.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabel.Font">
            <summary>
                Sets the font used in hover labels.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabel.Align">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabel.AlignArray">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabel.NameLength">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabel.NameLengthArray">
            <summary>
                Sets the default length (in number of characters) of the trace name in the
                hover labels for all traces. -1 shows the whole name regardless of length.
                0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
                name if it is less than that many characters, but if it is longer, will
                truncate to &#39;namelength - 3&#39; characters and add an ellipsis.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabel.BgColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bgcolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabel.BorderColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  bordercolor .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabel.AlignSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  align .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabel.NameLengthSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  namelength .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.HoverLabelLib.AlignEnum">
            <summary>
                Sets the horizontal alignment of the text content within hover label box.
                Has an effect only if the hover label text spans more two or more lines
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.HoverLabelLib.Font">
            <summary>
                The Font class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabelLib.Font.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabelLib.Font.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabelLib.Font.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabelLib.Font.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabelLib.Font.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabelLib.Font.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabelLib.Font.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabelLib.Font.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.HoverLabelLib.Font.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.Increasing">
            <summary>
                The Increasing class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.Increasing.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.IncreasingLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.IncreasingLib.Marker.Color">
            <summary>
                Sets the marker color of all increasing values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.IncreasingLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.IncreasingLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.IncreasingLib.MarkerLib.Line.Color">
            <summary>
                Sets the line color of all increasing values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.IncreasingLib.MarkerLib.Line.Width">
            <summary>
                Sets the line width of all increasing values.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.InsideTextAnchorEnum">
            <summary>
                Determines if texts are kept at center or start/end points in <c>textposition</c>
                <c>inside</c> mode.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.InsideTextFont">
            <summary>
                The InsideTextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.InsideTextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.InsideTextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.InsideTextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.InsideTextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.InsideTextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.InsideTextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.InsideTextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.InsideTextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.InsideTextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.OrientationEnum">
            <summary>
                Sets the orientation of the bars. With <c>v</c> (<c>h</c>), the value of
                the each bar spans along the vertical (horizontal).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.OutsideTextFont">
            <summary>
                The OutsideTextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.OutsideTextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.OutsideTextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.OutsideTextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.OutsideTextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.OutsideTextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.OutsideTextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.OutsideTextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.OutsideTextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.OutsideTextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.Stream">
            <summary>
                The Stream class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.Stream.Token">
            <summary>
                The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings
                for more details.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.Stream.MaxPoints">
            <summary>
                Sets the maximum number of points to keep on the plots from an incoming
                stream. If <c>maxpoints</c> is set to <c>50</c>, only the newest 50 points
                will be displayed on the plot.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.TextFont">
            <summary>
                The TextFont class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.TextFont.Family">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.TextFont.FamilyArray">
            <summary>
                HTML font family - the typeface that will be applied by the web browser.
                The web browser will only be able to apply a font if it is available on
                the system which it operates. Provide multiple font families, separated
                by commas, to indicate the preference in which to apply fonts if they aren&#39;t
                available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
                or on-premise) generates images on a server, where only a select number
                of fonts are installed and supported. These include <c>Arial</c>, <c>Balto</c>,
                &#39;Courier New&#39;, &#39;Droid Sans&#39;,, &#39;Droid Serif&#39;, &#39;Droid
                Sans Mono&#39;, &#39;Gravitas One&#39;, &#39;Old Standard TT&#39;, &#39;Open
                Sans&#39;, <c>Overpass</c>, &#39;PT Sans Narrow&#39;, <c>Raleway</c>, &#39;Times
                New Roman&#39;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.TextFont.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.TextFont.SizeArray">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.TextFont.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.TextFont.ColorArray">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.TextFont.FamilySrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  family .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.TextFont.SizeSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  size .
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.TextFont.ColorSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  color .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.TextInfoFlag">
            <summary>
                Determines which trace information appear on the graph. In the case of having
                multiple waterfalls, totals are computed separately (per trace).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.TextPositionEnum">
            <summary>
                Specifies the location of the <c>text</c>. <c>inside</c> positions <c>text</c>
                inside, next to the bar end (rotated and scaled if needed). <c>outside</c>
                positions <c>text</c> outside, next to the bar end (scaled if needed), unless
                there is another bar stacked on this one, then the text gets pushed inside.
                <c>auto</c> tries to position <c>text</c> inside the bar, but if the bar
                is too small and no bar is stacked on this one the text is moved outside.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.Totals">
            <summary>
                The Totals class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.Totals.Marker">
            <summary>
                Gets or sets the Marker.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.TotalsLib.Marker">
            <summary>
                The Marker class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.TotalsLib.Marker.Color">
            <summary>
                Sets the marker color of all intermediate sums and total values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.TotalsLib.Marker.Line">
            <summary>
                Gets or sets the Line.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.TotalsLib.MarkerLib.Line">
            <summary>
                The Line class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.TotalsLib.MarkerLib.Line.Color">
            <summary>
                Sets the line color of all intermediate sums and total values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Traces.WaterfallLib.TotalsLib.MarkerLib.Line.Width">
            <summary>
                Sets the line width of all intermediate sums and total values.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Traces.WaterfallLib.VisibleEnum">
            <summary>
                Determines whether or not this trace is visible. If <c>legendonly</c>, the
                trace is not drawn, but can appear as a legend item (provided that the legend
                itself is visible).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.TraceTypeEnum">
            <summary>
                Determines the type of the trace.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Transforms.Aggregate">
            <summary>
                The Aggregate class.
                Implements the <see cref="T:Plotly.Blazor.ITransform" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Aggregate.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Aggregate.Enabled">
            <summary>
                Determines whether this aggregate transform is enabled or disabled.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Aggregate.Groups">
            <summary>
                Sets the grouping target to which the aggregation is applied. Data points
                with matching group values will be coalesced into one point, using the supplied
                aggregation functions to reduce data in other data arrays. If a string,
                <c>groups</c> is assumed to be a reference to a data array in the parent
                trace object. To aggregate by nested variables, use <c>.</c> to access them.
                For example, set <c>groups</c> to <c>marker.color</c> to aggregate about
                the marker color array. If an array, <c>groups</c> is itself the data array
                by which we aggregate.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Aggregate.GroupsArray">
            <summary>
                Sets the grouping target to which the aggregation is applied. Data points
                with matching group values will be coalesced into one point, using the supplied
                aggregation functions to reduce data in other data arrays. If a string,
                <c>groups</c> is assumed to be a reference to a data array in the parent
                trace object. To aggregate by nested variables, use <c>.</c> to access them.
                For example, set <c>groups</c> to <c>marker.color</c> to aggregate about
                the marker color array. If an array, <c>groups</c> is itself the data array
                by which we aggregate.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Aggregate.Aggregations">
            <summary>
                Gets or sets the Aggregations.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Aggregate.GroupsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  groups .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Transforms.AggregateLib.Aggregation">
            <summary>
                The Aggregation class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.AggregateLib.Aggregation.Target">
            <summary>
                A reference to the data array in the parent trace to aggregate. To aggregate
                by nested variables, use <c>.</c> to access them. For example, set <c>groups</c>
                to <c>marker.color</c> to aggregate over the marker color array. The referenced
                array must already exist, unless <c>func</c> is <c>count</c>, and each array
                may only be referenced once.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.AggregateLib.Aggregation.Func">
            <summary>
                Sets the aggregation function. All values from the linked <c>target</c>,
                corresponding to the same value in the <c>groups</c> array, are collected
                and reduced by this function. <c>count</c> is simply the number of values
                in the <c>groups</c> array, so does not even require the linked array to
                exist. <c>first</c> (<c>last</c>) is just the first (last) linked value.
                Invalid values are ignored, so for example in <c>avg</c> they do not contribute
                to either the numerator or the denominator. Any data type (numeric, date,
                category) may be aggregated with any function, even though in certain cases
                it is unlikely to make sense, for example a sum of dates or average of categories.
                <c>median</c> will return the average of the two central values if there
                is an even count. <c>mode</c> will return the first value to reach the maximum
                count, in case of a tie. <c>change</c> will return the difference between
                the first and last linked values. <c>range</c> will return the difference
                between the min and max linked values.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.AggregateLib.Aggregation.FuncMode">
            <summary>
                <c>stddev</c> supports two formula variants: <c>sample</c> (normalize by
                N-1) and <c>population</c> (normalize by N).
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.AggregateLib.Aggregation.Enabled">
            <summary>
                Determines whether this aggregation function is enabled or disabled.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Transforms.AggregateLib.AggregationLib.FuncEnum">
            <summary>
                Sets the aggregation function. All values from the linked <c>target</c>,
                corresponding to the same value in the <c>groups</c> array, are collected
                and reduced by this function. <c>count</c> is simply the number of values
                in the <c>groups</c> array, so does not even require the linked array to
                exist. <c>first</c> (<c>last</c>) is just the first (last) linked value.
                Invalid values are ignored, so for example in <c>avg</c> they do not contribute
                to either the numerator or the denominator. Any data type (numeric, date,
                category) may be aggregated with any function, even though in certain cases
                it is unlikely to make sense, for example a sum of dates or average of categories.
                <c>median</c> will return the average of the two central values if there
                is an even count. <c>mode</c> will return the first value to reach the maximum
                count, in case of a tie. <c>change</c> will return the difference between
                the first and last linked values. <c>range</c> will return the difference
                between the min and max linked values.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Transforms.AggregateLib.AggregationLib.FuncModeEnum">
            <summary>
                <c>stddev</c> supports two formula variants: <c>sample</c> (normalize by
                N-1) and <c>population</c> (normalize by N).
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Transforms.Filter">
            <summary>
                The Filter class.
                Implements the <see cref="T:Plotly.Blazor.ITransform" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Filter.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Filter.Enabled">
            <summary>
                Determines whether this filter transform is enabled or disabled.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Filter.Target">
            <summary>
                Sets the filter target by which the filter is applied. If a string, <c>target</c>
                is assumed to be a reference to a data array in the parent trace object.
                To filter about nested variables, use <c>.</c> to access them. For example,
                set <c>target</c> to <c>marker.color</c> to filter about the marker color
                array. If an array, <c>target</c> is then the data array by which the filter
                is applied.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Filter.TargetArray">
            <summary>
                Sets the filter target by which the filter is applied. If a string, <c>target</c>
                is assumed to be a reference to a data array in the parent trace object.
                To filter about nested variables, use <c>.</c> to access them. For example,
                set <c>target</c> to <c>marker.color</c> to filter about the marker color
                array. If an array, <c>target</c> is then the data array by which the filter
                is applied.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Filter.Operation">
            <summary>
                Sets the filter operation. <c>=</c> keeps items equal to <c>value</c> <c>!=</c>
                keeps items not equal to <c>value</c> <c>&lt;</c> keeps items less than
                <c>value</c> <c>&lt;=</c> keeps items less than or equal to <c>value</c>
                <c>&gt;</c> keeps items greater than <c>value</c> <c>&gt;=</c> keeps items
                greater than or equal to <c>value</c> <c>[]</c> keeps items inside <c>value[0]</c>
                to <c>value[1]</c> including both bounds <c>()</c> keeps items inside <c>value[0]</c>
                to <c>value[1]</c> excluding both bounds <c>[)</c> keeps items inside <c>value[0]</c>
                to <c>value[1]</c> including <c>value[0]</c> but excluding &#39;value[1]
                <c>(]</c> keeps items inside <c>value[0]</c> to <c>value[1]</c> excluding
                <c>value[0]</c> but including &#39;value[1] <c>][</c> keeps items outside
                <c>value[0]</c> to <c>value[1]</c> and equal to both bounds <c>)(</c> keeps
                items outside <c>value[0]</c> to <c>value[1]</c> <c>](</c> keeps items outside
                <c>value[0]</c> to <c>value[1]</c> and equal to <c>value[0]</c> <c>)[</c>
                keeps items outside <c>value[0]</c> to <c>value[1]</c> and equal to <c>value[1]</c>
                <c>{}</c> keeps items present in a set of values <c>}{</c> keeps items not
                present in a set of values
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Filter.Value">
            <summary>
                Sets the value or values by which to filter. Values are expected to be in
                the same type as the data linked to <c>target</c>. When <c>operation</c>
                is set to one of the comparison values (=,!=,&lt;,&gt;=,&gt;,&lt;=) <c>value</c>
                is expected to be a number or a string. When <c>operation</c> is set to
                one of the interval values ([],(),[),(],][,)(,](,)[) <c>value</c> is expected
                to be 2-item array where the first item is the lower bound and the second
                item is the upper bound. When <c>operation</c>, is set to one of the set
                values ({},}{) <c>value</c> is expected to be an array with as many items
                as the desired set elements.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Filter.PreserveGaps">
            <summary>
                Determines whether or not gaps in data arrays produced by the filter operation
                are preserved. Setting this to <c>true</c> might be useful when plotting
                a line chart with <c>connectgaps</c> set to <c>false</c>.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Filter.ValueCalendar">
            <summary>
                Sets the calendar system to use for <c>value</c>, if it is a date.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Filter.TargetCalendar">
            <summary>
                Sets the calendar system to use for <c>target</c>, if it is an array of
                dates. If <c>target</c> is a string (eg <c>x</c>) we use the corresponding
                trace attribute (eg <c>xcalendar</c>) if it exists, even if <c>targetcalendar</c>
                is provided.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Filter.TargetSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  target .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Transforms.FilterLib.OperationEnum">
            <summary>
                Sets the filter operation. <c>=</c> keeps items equal to <c>value</c> <c>!=</c>
                keeps items not equal to <c>value</c> <c>&lt;</c> keeps items less than
                <c>value</c> <c>&lt;=</c> keeps items less than or equal to <c>value</c>
                <c>&gt;</c> keeps items greater than <c>value</c> <c>&gt;=</c> keeps items
                greater than or equal to <c>value</c> <c>[]</c> keeps items inside <c>value[0]</c>
                to <c>value[1]</c> including both bounds <c>()</c> keeps items inside <c>value[0]</c>
                to <c>value[1]</c> excluding both bounds <c>[)</c> keeps items inside <c>value[0]</c>
                to <c>value[1]</c> including <c>value[0]</c> but excluding &#39;value[1]
                <c>(]</c> keeps items inside <c>value[0]</c> to <c>value[1]</c> excluding
                <c>value[0]</c> but including &#39;value[1] <c>][</c> keeps items outside
                <c>value[0]</c> to <c>value[1]</c> and equal to both bounds <c>)(</c> keeps
                items outside <c>value[0]</c> to <c>value[1]</c> <c>](</c> keeps items outside
                <c>value[0]</c> to <c>value[1]</c> and equal to <c>value[0]</c> <c>)[</c>
                keeps items outside <c>value[0]</c> to <c>value[1]</c> and equal to <c>value[1]</c>
                <c>{}</c> keeps items present in a set of values <c>}{</c> keeps items not
                present in a set of values
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Transforms.FilterLib.TargetCalendarEnum">
            <summary>
                Sets the calendar system to use for <c>target</c>, if it is an array of
                dates. If <c>target</c> is a string (eg <c>x</c>) we use the corresponding
                trace attribute (eg <c>xcalendar</c>) if it exists, even if <c>targetcalendar</c>
                is provided.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Transforms.FilterLib.ValueCalendarEnum">
            <summary>
                Sets the calendar system to use for <c>value</c>, if it is a date.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Transforms.GroupBy">
            <summary>
                The GroupBy class.
                Implements the <see cref="T:Plotly.Blazor.ITransform" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.GroupBy.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Transforms.GroupBy.Enabled">
            <summary>
                Determines whether this group-by transform is enabled or disabled.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.GroupBy.Groups">
            <summary>
                Sets the groups in which the trace data will be split. For example, with
                <c>x</c> set to &#39;[1, 2, 3, 4]&#39; and <c>groups</c> set to &#39;[<c>a</c>,
                <c>b</c>, <c>a</c>, <c>b</c>]&#39;, the groupby transform with split in
                one trace with <c>x</c> [1, 3] and one trace with <c>x</c> [2, 4].
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.GroupBy.NameFormat">
            <summary>
                Pattern by which grouped traces are named. If only one trace is present,
                defaults to the group name (<c><c>%{group}</c></c>), otherwise defaults
                to the group name with trace name (&#39;&quot;%{group} (%{trace})&quot;&#39;).
                Available escape sequences are <c>%{group}</c>, which inserts the group
                name, and <c>%{trace}</c>, which inserts the trace name. If grouping GDP
                data by country when more than one trace is present, for example, the default
                &quot;%{group} (%{trace})&quot; would return &quot;Monaco (GDP per capita)&quot;.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.GroupBy.Styles">
            <summary>
                Gets or sets the Styles.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.GroupBy.GroupsSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  groups .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Transforms.GroupByLib.Style">
            <summary>
                The Style class.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.GroupByLib.Style.Target">
            <summary>
                The group value which receives these styles.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.GroupByLib.Style.Value">
            <summary>
                Sets each group styles. For example, with <c>groups</c> set to &#39;[<c>a</c>,
                <c>b</c>, <c>a</c>, <c>b</c>]&#39; and <c>styles</c> set to *[{target: <c>a</c>,
                value: { marker: { color: <c>red</c> } }}] marker points in group <c><c>a</c></c>
                will be drawn in red.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Transforms.Sort">
            <summary>
                The Sort class.
                Implements the <see cref="T:Plotly.Blazor.ITransform" />
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Sort.Type">
            <inheritdoc/>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Sort.Enabled">
            <summary>
                Determines whether this sort transform is enabled or disabled.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Sort.Target">
            <summary>
                Sets the target by which the sort transform is applied. If a string, <c>target</c>
                is assumed to be a reference to a data array in the parent trace object.
                To sort about nested variables, use <c>.</c> to access them. For example,
                set <c>target</c> to <c>marker.size</c> to sort about the marker size array.
                If an array, <c>target</c> is then the data array by which the sort transform
                is applied.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Sort.TargetArray">
            <summary>
                Sets the target by which the sort transform is applied. If a string, <c>target</c>
                is assumed to be a reference to a data array in the parent trace object.
                To sort about nested variables, use <c>.</c> to access them. For example,
                set <c>target</c> to <c>marker.size</c> to sort about the marker size array.
                If an array, <c>target</c> is then the data array by which the sort transform
                is applied.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Sort.Order">
            <summary>
                Sets the sort transform order.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.Transforms.Sort.TargetSrc">
            <summary>
                Sets the source reference on Chart Studio Cloud for  target .
            </summary>
        </member>
        <member name="T:Plotly.Blazor.Transforms.SortLib.OrderEnum">
            <summary>
                Sets the sort transform order.
            </summary>
        </member>
        <member name="T:Plotly.Blazor.TransformTypeEnum">
            <summary>
                Determines the type of the transform.
            </summary>
        </member>
        <member name="P:Plotly.Blazor.PlotlyChart.Id">
            <summary>
                Id of the div element
            </summary>
        </member>
        <member name="P:Plotly.Blazor.PlotlyChart.Data">
            <summary>
                Data of the charts
            </summary>
        </member>
        <member name="P:Plotly.Blazor.PlotlyChart.Layout">
            <summary>
                Layout of the charts
            </summary>
        </member>
        <member name="P:Plotly.Blazor.PlotlyChart.Config">
            <summary>
                Config of the charts
            </summary>
        </member>
        <member name="M:Plotly.Blazor.PlotlyChart.OnInitializedAsync">
            <inheritdoc />
        </member>
        <member name="M:Plotly.Blazor.PlotlyChart.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Plotly.Blazor.PlotlyChart.Update">
            <summary>
                Updates the chart using the current properties
            </summary>
            <returns></returns>
        </member>
        <member name="M:Plotly.Blazor.PlotlyChart.Dispose">
            <inheritdoc />
        </member>
    </members>
</doc>
