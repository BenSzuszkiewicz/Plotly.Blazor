/*
 * THIS FILE WAS GENERATED BY PLOTLY.BLAZOR.GENERATOR
*/

using System.Text.Json.Serialization;
using System.Collections.Generic;

namespace Plotly.Blazor.Transforms
{
    /// <summary>
    ///     The GroupBy class.
    ///     Implements the <see cref="ITransform" />
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Plotly.Blazor.Generator", "1.0.0.0")]
    public class GroupBy : ITransform
    {
        /// <inheritdoc/>
        [JsonPropertyName(@"type")]
        public TransformTypeEnum Type { get; } = TransformTypeEnum.GroupBy;

        /// <summary>
        ///     Determines whether this group-by transform is enabled or disabled.
        /// </summary>
        [JsonPropertyName(@"enabled")]
        public bool? Enabled { get; set;} 

        /// <summary>
        ///     Sets the groups in which the trace data will be split. For example, with
        ///     <c>x</c> set to &#39;[1, 2, 3, 4]&#39; and <c>groups</c> set to &#39;[<c>a</c>,
        ///     <c>b</c>, <c>a</c>, <c>b</c>]&#39;, the groupby transform with split in
        ///     one trace with <c>x</c> [1, 3] and one trace with <c>x</c> [2, 4].
        /// </summary>
        [JsonPropertyName(@"groups")]
        public IList<object> Groups { get; set;} 

        /// <summary>
        ///     Pattern by which grouped traces are named. If only one trace is present,
        ///     defaults to the group name (<c><c>%{group}</c></c>), otherwise defaults
        ///     to the group name with trace name (&#39;&quot;%{group} (%{trace})&quot;&#39;).
        ///     Available escape sequences are <c>%{group}</c>, which inserts the group
        ///     name, and <c>%{trace}</c>, which inserts the trace name. If grouping GDP
        ///     data by country when more than one trace is present, for example, the default
        ///     &quot;%{group} (%{trace})&quot; would return &quot;Monaco (GDP per capita)&quot;.
        /// </summary>
        [JsonPropertyName(@"nameformat")]
        public string NameFormat { get; set;} 

        /// <summary>
        ///     Gets or sets the Styles.
        /// </summary>
        [JsonPropertyName(@"styles")]
        public IList<Plotly.Blazor.Transforms.GroupByLib.Style> Styles { get; set;} 

        /// <summary>
        ///     Sets the source reference on Chart Studio Cloud for  groups .
        /// </summary>
        [JsonPropertyName(@"groupssrc")]
        public string GroupsSrc { get; set;} 

    }
}