/*
 * THIS FILE WAS GENERATED BY PLOTLY.BLAZOR.GENERATOR
*/

using System.Text.Json.Serialization;

namespace Plotly.Blazor.Traces.IsoSurfaceLib
{
    /// <summary>
    ///     The Surface class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Plotly.Blazor.Generator", "1.0.0.0")]
    public class Surface 
    {
        /// <summary>
        ///     Hides/displays surfaces between minimum and maximum iso-values.
        /// </summary>
        [JsonPropertyName(@"show")]
        public bool? Show { get; set;} 

        /// <summary>
        ///     Sets the number of iso-surfaces between minimum and maximum iso-values.
        ///     By default this value is 2 meaning that only minimum and maximum surfaces
        ///     would be drawn.
        /// </summary>
        [JsonPropertyName(@"count")]
        public int? Count { get; set;} 

        /// <summary>
        ///     Sets the fill ratio of the iso-surface. The default fill value of the surface
        ///     is 1 meaning that they are entirely shaded. On the other hand Applying a
        ///     <c>fill</c> ratio less than one would allow the creation of openings parallel
        ///     to the edges.
        /// </summary>
        [JsonPropertyName(@"fill")]
        public float? Fill { get; set;} 

        /// <summary>
        ///     Sets the surface pattern of the iso-surface 3-D sections. The default pattern
        ///     of the surface is <c>all</c> meaning that the rest of surface elements would
        ///     be shaded. The check options (either 1 or 2) could be used to draw half
        ///     of the squares on the surface. Using various combinations of capital <c>A</c>,
        ///     <c>B</c>, <c>C</c>, <c>D</c> and <c>E</c> may also be used to reduce the
        ///     number of triangles on the iso-surfaces and creating other patterns of interest.
        /// </summary>
        [JsonPropertyName(@"pattern")]
        public Plotly.Blazor.Traces.IsoSurfaceLib.SurfaceLib.PatternFlag? Pattern { get; set;} 

    }
}