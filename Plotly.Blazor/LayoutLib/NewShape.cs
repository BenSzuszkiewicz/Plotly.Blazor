/*
 * THIS FILE WAS GENERATED BY PLOTLY.BLAZOR.GENERATOR
*/

using System.Text.Json.Serialization;
using System.Collections.Generic;
using Plotly.Blazor.LayoutLib.NewShapeLib;

namespace Plotly.Blazor.LayoutLib
{
    /// <summary>
    ///     The NewShape class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Plotly.Blazor.Generator", "1.0.0.0")]
    public class NewShape 
    {
        /// <summary>
        ///     Gets or sets the Line.
        /// </summary>
        [JsonPropertyName(@"line")]
        public Line Line { get; set;} 

        /// <summary>
        ///     Sets the color filling new shapes' interior. Please note that if using a
        ///     fillcolor with alpha greater than half, drag inside the active shape starts
        ///     moving the shape underneath, otherwise a new shape could be started over.
        /// </summary>
        [JsonPropertyName(@"fillcolor")]
        public object FillColor { get; set;} 

        /// <summary>
        ///     Determines the path's interior. For more info please visit https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-rule
        /// </summary>
        [JsonPropertyName(@"fillrule")]
        public FillRuleEnum? FillRule { get; set;} 

        /// <summary>
        ///     Sets the opacity of new shapes.
        /// </summary>
        [JsonPropertyName(@"opacity")]
        public float? Opacity { get; set;} 

        /// <summary>
        ///     Specifies whether new shapes are drawn below or above traces.
        /// </summary>
        [JsonPropertyName(@"layer")]
        public LayerEnum? Layer { get; set;} 

        /// <summary>
        ///     When `dragmode` is set to *drawrect*, *drawline* or *drawcircle* this limits
        ///     the drag to be horizontal, vertical or diagonal. Using *diagonal* there
        ///     is no limit e.g. in drawing lines in any direction. *ortho* limits the draw
        ///     to be either horizontal or vertical. *horizontal* allows horizontal extend.
        ///     *vertical* allows vertical extend.
        /// </summary>
        [JsonPropertyName(@"drawdirection")]
        public DrawDirectionEnum? DrawDirection { get; set;} 

    }
}