/*
 * THIS FILE WAS GENERATED BY PLOTLY.BLAZOR.GENERATOR
*/

using System.Text.Json.Serialization;
using System.Collections.Generic;
using Plotly.Blazor.LayoutLib.MapBoxLib;

namespace Plotly.Blazor.LayoutLib
{
    /// <summary>
    ///     The MapBox class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Plotly.Blazor.Generator", "1.0.0.0")]
    public class MapBox 
    {
        /// <summary>
        ///     Gets or sets the Domain.
        /// </summary>
        [JsonPropertyName(@"domain")]
        public Plotly.Blazor.LayoutLib.MapBoxLib.Domain Domain { get; set;} 

        /// <summary>
        ///     Sets the mapbox access token to be used for this mapbox map. Alternatively,
        ///     the mapbox access token can be set in the configuration options under `mapboxAccessToken`.
        ///     Note that accessToken are only required when `style` (e.g with values :
        ///     basic, streets, outdoors, light, dark, satellite, satellite-streets ) and/or
        ///     a layout layer references the Mapbox server.
        /// </summary>
        [JsonPropertyName(@"accesstoken")]
        public string AccessToken { get; set;} 

        /// <summary>
        ///     Defines the map layers that are rendered by default below the trace layers
        ///     defined in `data`, which are themselves by default rendered below the layers
        ///     defined in `layout.mapbox.layers`.  These layers can be defined either explicitly
        ///     as a Mapbox Style object which can contain multiple layer definitions that
        ///     load data from any public or private Tile Map Service (TMS or XYZ) or Web
        ///     Map Service (WMS) or implicitly by using one of the built-in style objects
        ///     which use WMSes which do not require any access tokens, or by using a default
        ///     Mapbox style or custom Mapbox style URL, both of which require a Mapbox
        ///     access token  Note that Mapbox access token can be set in the `accesstoken`
        ///     attribute or in the `mapboxAccessToken` config option.  Mapbox Style objects
        ///     are of the form described in the Mapbox GL JS documentation available at
        ///     https://docs.mapbox.com/mapbox-gl-js/style-spec  The built-in plotly.js
        ///     styles objects are: open-street-map, white-bg, carto-positron, carto-darkmatter,
        ///     stamen-terrain, stamen-toner, stamen-watercolor  The built-in Mapbox styles
        ///     are: basic, streets, outdoors, light, dark, satellite, satellite-streets
        ///      Mapbox style URLs are of the form: mapbox://mapbox.mapbox-<name>-<version>
        /// </summary>
        [JsonPropertyName(@"style")]
        public object Style { get; set;} 

        /// <summary>
        ///     Gets or sets the Center.
        /// </summary>
        [JsonPropertyName(@"center")]
        public Plotly.Blazor.LayoutLib.MapBoxLib.Center Center { get; set;} 

        /// <summary>
        ///     Sets the zoom level of the map (mapbox.zoom).
        /// </summary>
        [JsonPropertyName(@"zoom")]
        public float? Zoom { get; set;} 

        /// <summary>
        ///     Sets the bearing angle of the map in degrees counter-clockwise from North
        ///     (mapbox.bearing).
        /// </summary>
        [JsonPropertyName(@"bearing")]
        public float? Bearing { get; set;} 

        /// <summary>
        ///     Sets the pitch angle of the map (in degrees, where *0* means perpendicular
        ///     to the surface of the map) (mapbox.pitch).
        /// </summary>
        [JsonPropertyName(@"pitch")]
        public float? Pitch { get; set;} 

        /// <summary>
        ///     Gets or sets the Layers.
        /// </summary>
        [JsonPropertyName(@"layers")]
        public IList<Plotly.Blazor.LayoutLib.MapBoxLib.Layer> Layers { get; set;} 

        /// <summary>
        ///     Controls persistence of user-driven changes in the view: `center`, `zoom`,
        ///     `bearing`, `pitch`. Defaults to `layout.uirevision`.
        /// </summary>
        [JsonPropertyName(@"uirevision")]
        public object UiRevision { get; set;} 

    }
}