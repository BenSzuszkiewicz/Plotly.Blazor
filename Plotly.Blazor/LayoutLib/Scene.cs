/*
 * THIS FILE WAS GENERATED BY PLOTLY.BLAZOR.GENERATOR
*/

using System.Text.Json.Serialization;
using System.Collections.Generic;

namespace Plotly.Blazor.LayoutLib
{
    /// <summary>
    ///     The Scene class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Plotly.Blazor.Generator", "1.0.0.0")]
    public class Scene 
    {
        /// <summary>
        ///     Gets or sets the BgColor.
        /// </summary>
        [JsonPropertyName(@"bgcolor")]
        public object BgColor { get; set;} 

        /// <summary>
        ///     Gets or sets the Camera.
        /// </summary>
        [JsonPropertyName(@"camera")]
        public Plotly.Blazor.LayoutLib.SceneLib.Camera Camera { get; set;} 

        /// <summary>
        ///     Gets or sets the Domain.
        /// </summary>
        [JsonPropertyName(@"domain")]
        public Plotly.Blazor.LayoutLib.SceneLib.Domain Domain { get; set;} 

        /// <summary>
        ///     If <c>cube</c>, this scene&#39;s axes are drawn as a cube, regardless of
        ///     the axes&#39; ranges. If <c>data</c>, this scene&#39;s axes are drawn in
        ///     proportion with the axes&#39; ranges. If <c>manual</c>, this scene&#39;s
        ///     axes are drawn in proportion with the input of <c>aspectratio</c> (the default
        ///     behavior if <c>aspectratio</c> is provided). If <c>auto</c>, this scene&#39;s
        ///     axes are drawn using the results of <c>data</c> except when one axis is
        ///     more than four times the size of the two others, where in that case the
        ///     results of <c>cube</c> are used.
        /// </summary>
        [JsonPropertyName(@"aspectmode")]
        public Plotly.Blazor.LayoutLib.SceneLib.AspectModeEnum? AspectMode { get; set;} 

        /// <summary>
        ///     Sets this scene&#39;s axis aspectratio.
        /// </summary>
        [JsonPropertyName(@"aspectratio")]
        public Plotly.Blazor.LayoutLib.SceneLib.AspectRatio AspectRatio { get; set;} 

        /// <summary>
        ///     Gets or sets the XAxis.
        /// </summary>
        [JsonPropertyName(@"xaxis")]
        public Plotly.Blazor.LayoutLib.SceneLib.XAxis XAxis { get; set;} 

        /// <summary>
        ///     Gets or sets the YAxis.
        /// </summary>
        [JsonPropertyName(@"yaxis")]
        public Plotly.Blazor.LayoutLib.SceneLib.YAxis YAxis { get; set;} 

        /// <summary>
        ///     Gets or sets the ZAxis.
        /// </summary>
        [JsonPropertyName(@"zaxis")]
        public Plotly.Blazor.LayoutLib.SceneLib.ZAxis ZAxis { get; set;} 

        /// <summary>
        ///     Determines the mode of drag interactions for this scene.
        /// </summary>
        [JsonPropertyName(@"dragmode")]
        public Plotly.Blazor.LayoutLib.SceneLib.DragModeEnum? DragMode { get; set;} 

        /// <summary>
        ///     Determines the mode of hover interactions for this scene.
        /// </summary>
        [JsonPropertyName(@"hovermode")]
        public Plotly.Blazor.LayoutLib.SceneLib.HoverModeEnum? HoverMode { get; set;} 

        /// <summary>
        ///     Controls persistence of user-driven changes in camera attributes. Defaults
        ///     to <c>layout.uirevision</c>.
        /// </summary>
        [JsonPropertyName(@"uirevision")]
        public object UiRevision { get; set;} 

        /// <summary>
        ///     Gets or sets the Annotations.
        /// </summary>
        [JsonPropertyName(@"annotations")]
        public IList<Plotly.Blazor.LayoutLib.SceneLib.Annotation> Annotations { get; set;} 

    }
}